#::snt bi kịch là ở chỗ đó !
(b / bi_kịch
    :domain(c / chỗ
        :mod(đ / đó)))

#::snt cứ mỗi năm hành tinh này lại quay nhanh hơn , thế mà điều lệnh không thay đổi !
(c / contrast-01
    :ARG1(q / quay
        :frequency(n / năm)
        :theme(h / hành_tinh
            :mod(n1 / này))
        :manner(n2 / nhanh
            :degree(h1 / hơn)))
    :ARG2(t1 / thay_đổi
        :theme(đ / điều_lệnh)
        :polarity -))

#::snt - thế thì sao ? ông hoàng nhỏ hỏi .
(h / hỏi
    :agent(ô / ông_hoàng
        :mod(n / nhỏ))
    :topic(a / amr-unknown
        :domain(t / thế)
        :mode interrogative))

#::snt - vì hiện nay nó quay mỗi phút một vòng , ta không còn lấy một giây để nghỉ ngơi .
(c / còn
    :cause(q / quay
        :theme(n / nó)
        :time(n11 / now)
        :frequency(r / rate-entity-91
            :ARG2(v1 / vòng
                :quant 1)
            :ARG1(t1 / temporal-quantity
                :unit(p / phút)
                :quant 1)))
    :pivot(t / ta)
    :polarity -
    :time(t2 / temporal-quantity
        :unit(g / giây)
        :purpose(n1 / nghỉ_ngơi)
        :quant 1))

#::snt mỗi phút ta phải thắp đèn và phải tắt đèn một lần !
(o / obligate-01
    :agent(t / ta)
    :frequency(r / rate-entity-91
        :ARG2(t1 / temporal-quantity
            :unit(p / phút)
            :quant 1))
    :theme(a / and
        :op1(t2 / thắp
            :patient(đ / đèn)
            :agent t)
        :op2(t3 / tắt
            :agent t
            :patient đ)))

#::snt - lạ thực đấy !
(l / lạ
    :degree(t / thực)
    :mode expressive)

#::snt ở đây ngày dài chỉ có một phút thôi !
(d / dài
    :location(đ / đây
        :prep(ở / ở))
    :duration(t2 / temporal-quantity
        :unit(p / phút)
        :quant 1
            :degree(c / chỉ))
    :domain(t / temporal-quantity
        :unit(n / ngày)
        :quant 1))

#::snt - chẳng có gì lạ cả , người thắp đèn nói .
(n1 / nói
    :topic(l / lạ
        :domain(c1 / có
            :theme(g / gì)
            :polarity -))
    :agent(p / person
        :agent-of(t / thắp
            :patient(đ / đèn))))

#::snt ta chuyện trò với nhau thế mà đã một tháng rồi đấy .
(c / chuyện_trò
    :agent(t / ta)
    :goal(n / nhau)
    :duration(t3 / temporal-quantity
        :unit(t2 / tháng)
        :quant 1))

#::snt - một tháng kia ư ?
(t / temporal-quantity
    :unit(t1 / tháng)
    :mode interrogative
    :quant 1)

#::snt - Phải , ba mươi phút .
(t / temporal-quantity
    :unit(p1 / phút)
    :quant 30)

#::snt Ba mươi ngày .
(t / temporal-quantity
    :unit(n / ngày)
    :quant 30)

#::snt chúc một đêm tốt lành .
(c / chúc
    :topic(đ / đêm
        :mod(t / tốt_lành)
        :quant 1))

#::snt rồi ông lại thắp ngọn đèn .
(a / and
    :op2(t / thắp
        :agent(ô / ông)
        :patient(đ / đèn
            :classifier(n / ngọn)
            :poss ô)))

#::snt ông hoàng nhỏ nhìn ông ta và thấy yêu mến người thắp đèn trung thành đến thế với điều lệnh .
(a / and
    :op1(n1 / nhìn
        :agent(ô / ông_hoàng
            :mod(n / nhỏ))
        :goal(ô1 / ông
            :mod(t / ta)))
    :op2(t1 / thấy
        :theme(y / yêu_mến
            :theme(p / person
                :agent-of(t2 / thắp
                    :patient(đ / đèn))
                :domain-of(t3 / trung_thành
                    :topic(đ2 / điều_lệnh)))
            :pivot ô)
        :agent ô))

#::snt cậu em nhớ tới những cảnh mặt trời lặn mà xưa kia chính em phải đi kiếm để xem , bằng cách dịch ghế ngồi .
(n / nhớ
    :pivot(e / em
        :classifier(c / cậu))
    :theme(c1 / cảnh
        :theme-of(l / lặn
            :theme(m / mặt_trời))
        :agent-of(đ / đi
            :time(x / xưa
                :compound(k / kia))
            :compound(k1 / kiếm)
            :purpose(x1 / xem)
            :manner(d / dịch
                :patient(g / ghế
                    :mod(n2 / ngồi)))
            :agent e)))

#::snt em muốn giúp ông bạn thân :
(m / muốn
    :pivot(e / em)
    :theme(g / giúp
        :agent e
        :beneficiary-arg1(p / person
            :agent-of(h / have-rel-role-91
                :ARG2(b / bạn
                    :classifier(ô / ông)
                    :mod(t / thân))
                :ARG1 e))))

#::snt - này ông ...
(n / này
    :goal(ô / ông)
    :mode expressive)

#::snt tôi biết cách cho ông nghỉ ngơi khi nào ông muốn đấy ...
(b / biết
    :pivot(t / tôi)
    :theme(c / cách
        :purpose(n / nghỉ_ngơi
            :agent(ô / ông)
            :time(m / muốn
                :pivot ô))))

#::snt - ta luôn luôn muốn , người thắp đèn nói .
(n1 / nói
    :topic(m / muốn
        :time(a / always)
        :pivot p)
    :agent(p / person
        :agent-of(t1 / thắp
            :patient(đ / đèn))))

#::snt bởi vì người ta có thể , cùng một lúc , vừa trung thành lại vừa lười biếng .
(c / cause-01
    :ARG0(p / possible
        :domain(n / người_ta)
        :theme(a / and
            :time(l / lúc
                :mod(c1 / cùng))
            :op1(t / trung_thành)
            :op2(l2 / lười_biếng)
            :domain n)))

#::snt ông hoàng nhỏ hỏi tiếp :
(h / hỏi
    :agent(ô / ông_hoàng
        :mod(n / nhỏ))
    :compound(t / tiếp))

#::snt - cái hành tinh của ông nhỏ đến nỗi ông có thể bước sải ba bước là đi giáp một vòng .
(c1 / cause-01
    :cause(n / nhỏ
        :theme(h / hành_tinh
            :classifier(c / cái)
            :poss(ô / ông)))
    :theme(wz1 / possible-01
        :agent(b / bước
            :compound(s / sải)
            :unit(b2 / bước)
            :quant 3
            :agent ô)
        :result(đ1 / đi
            :compound(g / giáp)
            :unit(v / vòng)
            :quant 1)))

#::snt ông chỉ có việc đi chầm chậm để lúc nào cũng ở dưới ánh mặt trời cả .
(đ / đi
    :agent(ô / ông)
    :manner(c2 / chầm_chậm)
    :purpose(b / be-located-at-91
        :location(á / ánh
            :prep(d / dưới)
            :mod(m / mặt_trời))
        :pivot ô
        :time(a / always)))

#::snt khi nào ông muốn nghỉ , ông cứ bước đi ...
(b / bước
    :time(m / muốn
        :theme(n1 / nghỉ
            :agent ô1)
        :pivot ô1)
    :agent(ô1 / ông)
    :compound(đ / đi))

#::snt thế là ông muốn ngày dài bao nhiêu thì nó dài bấy nhiêu .
(m / muốn
    :pivot(ô / ông)
    :theme(d / dài
        :domain(n / ngày)
        :compared-to m
            :pivot ô
        :degree(wz3 / equal)
        :duration(t1 / temporal-quantity
            :quant(b / bao_nhiêu))))

#::snt - cái ấy chẳng được việc gì cho ta , người thắp đèn nói .
(n1 / nói
    :topic(đ / được
        :theme(c / cái
            :mod(ấ / ấy))
        :result(v / việc
            :mod(g / gì))
        :polarity -
        :beneficiary p)
    :agent(p / person
        :agent-of(t1 / thắp
            :patient(đ1 / đèn))))

#::snt cái mà ta thích nhất trên đời , là ngủ .
(t1 / thích
    :pivot(t / ta)
    :degree(n / nhất)
    :setting(đ / đời)
    :theme(n1 / ngủ
        :pivot t))

#::snt - thế thì thật là không may , ông hoàng nhỏ nói .
(n1 / nói
    :topic(m / may
        :degree(t1 / thật)
        :polarity -)
    :agent(ô / ông_hoàng
        :mod(n / nhỏ)))

#::snt - thật là không may , người thắp đèn nói .
(n1 / nói
    :topic(m / may
        :degree(t / thật)
        :polarity -)
    :agent(p / person
        :agent-of(t1 / thắp
            :patient(đ / đèn))))

#::snt chúc một ngày tốt lành .
(c / chúc
    :topic(n / ngày
        :mod(t / tốt_lành)
        :quant 1))

#::snt rồi ông ta tắt đèn .
(a / and
    :op2(t1 / tắt
        :agent(ô / ông
            :mod(t / ta))
        :patient(đ / đèn)))

#::snt cái ông này , ông hoàng nhỏ nghĩ thầm trong lúc tiếp tục cuộc hành trình .
(n2 / nghĩ
    :topic(ô / ông
        :mod(n / này))
    :pivot(ô1 / ông_hoàng
        :mod(n1 / nhỏ))
    :compound(t / thầm)
    :time(t2 / tiếp_tục
        :theme(c1 / cuộc
            :mod(h / hành_trình))
        :agent ô1))

#::snt ông ta sẽ bị tất cả những người kia khinh thường , ông vua , lão khoác lác , tay bợm nhậu , nhà doanh nghiệp .
(k1 / khinh_thường
    :patient(ô / ông
        :mod(t / ta))
    :modality(b / bị
        :tense(s / sẽ))
    :agent(n1 / người
        :mod(k / kia)
        :domain(a1 / and
            :op1(v / vua
                :classifier(ô1 / ông))
            :op2(l / lão
                :mod(k2 / khoác_lác))
            :op3(t2 / tay
                :mod(b1 / bợm
                    :compound(n2 / nhậu)))
            :op4(n3 / nhà
                :compound(d / doanh_nghiệp)))
        :mod(a / all)))

#::snt trong khi đó chỉ có ông ta là không thấy buồn cười .
(h / have-concession-91
    :ARG1(t2 / thấy
        :pivot(ô / ông
            :mod(c / chỉ)
            :mod(t1 / ta))
        :manner(b / buồn_cười)
        :polarity -))

#::snt có lẽ bởi vì ông lo toan cho một cái gì khác chứ không phải là bản thân ông ta .
(p / possible-01
    :cause(l / lo_toan
        :pivot(ô / ông)
        :theme(c2 / cái
            :compound(g / gì)
            :mod(k / khác)
            :theme-of(p1 / phải
                :beneficiary ô
                :polarity -))))

#::snt em thở dài tiếc rẻ và nghĩ tiếp :
(a / and
    :op1(t / thở_dài
        :agent(e / em)
        :manner(t1 / tiếc_rẻ))
    :op2(n / nghĩ
        :compound(t2 / tiếp)
        :pivot e))

#::snt - ông ta là người duy nhất đáng cho mình kết bạn .
(n / người
    :domain(ô / ông
        :mod(t / ta))
    :mod(d / duy_nhất)
    :pivot-of(đ / đáng
        :purpose(k / kết_bạn
            :agent(m / mình))))

#::snt nhưng tinh cầu của ông ấy bé quá .
(c / contrast-01
    :ARG2(b / bé
        :domain(t / tinh_cầu
            :poss(ô / ông
                :mod(ấ / ấy)))
        :degree(q / quá)))

#::snt không có chỗ cho hai người ...
(c / có
    :polarity -
    :theme(c1 / chỗ
        :beneficiary(n / người
            :quant 2)))

#::snt tinh cầu thứ sáu là tinh cầu mười lần rộng hơn .
(r / rộng
    :domain(t / tinh_cầu
        :ord(o / ordinal-entity
            :value 6))
    :quant(wz2 / product-of
        :op1 10
        :op2(wz4 / volume-quantity
            :mod(t2 / tinh_cầu))))

#::snt ở trên đó có một tôn ông già đang viết những cuốn sách dày cộp .
(c / có
    :location(đ / đó
        :prep(t / trên))
    :theme(t1 / tôn
        :mod(ô / ông
            :mod(g / già)
            :agent-of(v / viết
                :tense(đ1 / đang)
                :result-arg1(s / sách
                    :classifier(c1 / cuốn)
                    :mod(d / dày_cộp))))))

#::snt - kìa ! kia là một nhà thám hiểm ! ông ta kêu lên thế khi nhìn thấy ông hoàng nhỏ .
(k2 / kêu
    :agent(ô / ông
        :mod(t1 / ta))
    :compound(l1 / lên)
    :time(n1 / nhìn
        :compound(t3 / thấy)
        :goal(ô1 / ông
            :compound(h / hoàng)
            :mod(n2 / nhỏ))
        :agent ô)
    :topic(a / and
        :op1(k / kìa
            :mode expressive)
        :op2(n / nhà
            :domain(k1 / kia)
            :compound(t / thám_hiểm))))

#::snt ông hoàng nhỏ ngồi lên bàn và thở một lúc .
(a / and
    :op1(n1 / ngồi
        :agent(ô / ông_hoàng
            :mod(n / nhỏ))
        :direction(l / lên)
        :location(b / bàn))
    :op2(t / thở
        :duration(l1 / lúc
            :quant 1)
        :agent ô))

#::snt em đã đi một quãng đường khá xa .
(đ1 / đi
    :agent(e / em)
    :tense(đ / đã)
    :quant(d / distance-quantity
        :unit(q / quãng
            :compound(đ2 / đường)
            :mod(x / xa
                :degree(k / khá)))
        :quant 1))

#::snt - chú từ đâu đến ? tôn ông già hỏi .
(h / hỏi
    :topic(đ1 / đến
        :agent(c / chú)
        :location(a / amr-unknown)
        :mode interrogative)
    :agent(t1 / tôn
        :mod(ô / ông
            :mod(g / già))))

#::snt - cuốn sách bự này là cuốn sách gì vậy ? ông hoàng nhỏ hỏi .
(h / hỏi
    :topic(s / sách
        :classifier(c / cuốn)
        :mod(b / bự)
        :mod(n / này)
        :mode interrogative
        :domain(a / amr-unknown))
    :agent(ô / ông_hoàng
        :mod(n1 / nhỏ)))

#::snt ông làm gì ở đây ?
(l / làm
    :agent(ô / ông)
    :location(đ / đây
        :prep(ở / ở))
    :mode interrogative
    :theme(a / amr-unknown))

#::snt - ta là nhà địa lý , tôn ông già nói .
(n1 / nói
    :topic(n / nhà
        :compound(đ / địa_lý)
        :domain t1)
    :agent(t1 / tôn
        :mod(ô / ông
            :mod(g / già))))

#::snt - nhà địa lý là người như thế nào ?
(n / nhà
    :compound(đ / địa_lý)
    :mode interrogative
    :domain(a / amr-unknown))

#::snt - đó là một nhà bác học biết rõ đâu là sông biển , núi non , thành phố và sa mạc .
(n / nhà
    :domain(đ / đó)
    :compound(b / bác_học)
    :pivot-of(b1 / biết
        :degree(r / rõ)
        :theme(l / location
            :location-of(a / and
                :op1(s / sông
                    :compound(b2 / biển))
                :op2(n1 / núi_non)
                :op3(t / thành_phố)
                :op4(s1 / sa_mạc)))))

#::snt - thế thì thích thật , ông hoàng nhỏ nói .
(n1 / nói
    :topic(t1 / thích
        :degree(t2 / thật)
        :pivot ô)
    :agent(ô / ông_hoàng
        :mod(n / nhỏ)))

#::snt bây giờ ta mới gặp được một nghề ra nghề .
(g / gặp
    :pivot(t / ta)
    :theme(n / nghề
        :compound(r / ra)
        :compound(n1 / nghề)
        :quant 1)
    :time(n11 / now))

#::snt rồi em đưa mắt nhìn cái hành tinh của nhà địa lý , xung quanh em .
(a / and
    :op2(đ / đưa_mắt
        :agent(e / em)
        :purpose(n / nhìn
            :goal(h / hành_tinh
                :classifier(c / cái)
                :poss(n1 / nhà
                    :compound(đ1 / địa_lý)))
            :direction(x / xung_quanh
                :mod e)
            :agent e)))

#::snt em chưa hề nhìn thấy một hành tinh uy nghi như vậy .
(n / nhìn
    :agent(e / em)
    :compound(t / thấy)
    :goal(h1 / hành_tinh
        :mod(u / uy_nghi
            :degree(e2 / equal)
            :compared-to h1))
    :time(e1 / ever
        :polarity -))

#::snt - tinh cầu của ông đẹp quá .
(đ / đẹp
    :domain(t / tinh_cầu
        :poss(ô / ông))
    :degree(q / quá))

#::snt có đại dương không ông ?
(c / có
    :theme(đ / đại_dương)
    :mode interrogative)

#::snt - ta không biết , nhà địa lý nói .
(n1 / nói
    :topic(b / biết
        :pivot n
        :polarity -)
    :agent(n / nhà
        :compound(đ / địa_lý)))

#::snt - a ! ( ông hoàng nhỏ thất vọng ) .
(m / multi-sentence
    :snt1(a / a
        :mode expressive)
    :snt2(t / thất_vọng
        :pivot(ô / ông_hoàng
            :mod(n / nhỏ))))

#::snt còn núi non ?
(n / núi_non
    :mode interrogative)

#::snt - ta không biết , nhà địa lý nói .
(n1 / nói
    :topic(b / biết
        :pivot n
        :polarity -)
    :agent(n / nhà
        :compound(đ / địa_lý)))

#::snt - Và các thành phố , và các con sông , và các sa mạc ?
(a / and
    :mode interrogative
    :op2(a1 / and
        :op1(t / thành_phố)
        :op2(s / sông
            :classifier(c2 / con))
        :op3(s1 / sa_mạc)))

#::snt - ta cũng không biết nốt , nhà địa lý nói .
(n2 / nói
    :topic(b / biết
        :polarity -
        :pivot n1)
    :agent(n1 / nhà
        :compound(đ / địa_lý)))

#::snt - ông là nhà địa lý cơ mà !
(c / contrast-01
    :ARG2(n / nhà
        :domain(ô / ông)
        :compound(đ / địa_lý))
    :mode expressive)

#::snt - đúng , nhà địa lý nói .
(n1 / nói
    :topic(đ / đúng)
    :agent(n / nhà
        :compound(đ1 / địa_lý)))

#::snt nhưng ta có là nhà thám hiểm đâu .
(c / contrast-01
    :ARG2(n1 / nhà
        :domain(t / ta)
        :compound(t1 / thám_hiểm)
        :polarity -))

#::snt ta hoàn toàn thiếu các nhà thám hiểm .
(t1 / thiếu
    :pivot(t / ta)
    :degree(h / hoàn_toàn)
    :theme(n / nhà
        :compound(t2 / thám_hiểm)))

#::snt nhà địa lý không phải là người đi đến các thành phố , sông biển , núi non , đại dương và sa mạc .
(n1 / người
    :domain(n / nhà
        :compound(đ / địa_lý))
    :agent-of(đ1 / đi
        :direction(đ2 / đến)
        :location(a / and
            :op1(t / thành_phố)
            :op2(s / sông
                :compound(b / biển))
            :op3(n2 / núi_non)
            :op4(đ3 / đại_dương)
            :op5(s1 / sa_mạc))
        :polarity -))

#::snt nhà địa lý rất quan trọng không thể đi lung tung .
(q / quan_trọng
    :domain(n / nhà
        :compound(đ / địa_lý))
    :degree(r / rất)
    :result(p / possible-01
        :theme(đ1 / đi
            :manner(l / lung_tung)
            :agent n)
        :polarity -))

#::snt ông ta không rời bàn giấy của mình .
(r / rời
    :agent(ô / ông
        :compound(t / ta))
    :polarity -
    :source(b / bàn_giấy
        :poss ô))

#::snt nhưng ông ta tiếp các nhà thám hiểm .
(c / contrast-01
    :ARG2(t1 / tiếp
        :agent(ô / ông
            :mod(t / ta))
        :theme(n1 / nhà
            :compound(t2 / thám_hiểm))))

#::snt ông ta phỏng vấn họ , và ông ta ghi chép lại những hồi ức của họ .
(a / and
    :op1(p / phỏng_vấn
        :agent(ô / ông
            :mod(t / ta))
        :theme(h / họ))
    :op2(g / ghi_chép
        :theme(h1 / hồi_ức
            :poss h)
        :agent ô))

#::snt và nếu hồi ức của một trong các nhà thám hiểm ấy mà đáng chú ý thì nhà địa lý sẽ cho điều tra về tư cách của nhà thám hiểm ấy .
(a / and
    :condition(đ / đáng
        :theme(h / hồi_ức
            :poss(p / person
                :consist-of(n1 / nhà
                    :compound(t1 / thám_hiểm)
                    :mod(ấ / ấy))
                :quant 1))
        :compound(c2 / chú_ý))
    :op2(c3 / cho
        :agent(n2 / nhà
            :compound(đ1 / địa_lý))
        :tense(s / sẽ)
        :theme(đ2 / điều_tra
            :topic(t3 / tư_cách
                :poss n1
                    :mod(ấ1 / ấy)))))

#::snt - tại sao vậy ?
(v / vậy
    :cause(a / amr-unknown)
    :mode interrogative)

#::snt - bởi vì nhà thám hiểm ấy mà nói dối sẽ gây nên những sai lầm tai hại trong các sách địa lý .
(c / cause-01
    :topic(n1 / nói
        :agent(n / nhà
            :compound(t / thám_hiểm)
            :mod(ấ / ấy))
        :compound(d / dối)
        :result(g / gây
            :tense(s / sẽ)
            :compound(n2 / nên)
            :theme(s1 / sai_lầm
                :mod(t1 / tai_hại)
                :poss(s2 / sách
                    :mod(đ / địa_lý))))))

#::snt và cả nhà thám hiểm nào uống rượu nhiều quá nữa .
(a / and
    :op2(u / uống
        :agent(n / nhà
            :compound(t / thám_hiểm)
            :mod(n1 / nào))
        :theme(r / rượu)
        :manner(n2 / nhiều
            :degree(q / quá))))

#::snt - tại sao vậy ? ông hoàng nhỏ hỏi .
(h / hỏi
    :topic(v / vậy
        :cause(a / amr-unknown)
        :mode interrogative)
    :agent(ô / ông_hoàng
        :mod(n / nhỏ)))

#::snt - vì các bợm nhậu thấy một thành hai .
(c / cause-01
    :topic(t / thấy
        :agent(b / bợm
            :compound(n / nhậu))
        :result(t1 / thành
            :theme(t3 / thing
                :quant 2))
        :theme(t2 / thing
            :quant 1)))

#::snt thế là nhà địa lý sẽ ghi hai dãy núi ở một nơi chỉ có một dãy .
(g / ghi
    :agent(n / nhà
        :compound(đ / địa_lý))
    :tense(s / sẽ)
    :theme(n1 / núi
        :location(n2 / nơi
            :location-of(c1 / có
                :degree(c / chỉ)
                :theme n1
                    :quant 1
                        :classifier(d1 / dãy)))
        :quant 2
            :classifier(d / dãy)))

#::snt - tôi có biết một người nếu mà làm nhà thám hiểm thì sẽ tệ hại đấy , ông hoàng nhỏ nói .
(n4 / nói
    :topic(b / biết
        :theme(n / người
            :domain-of(l / làm
                :theme(n2 / nhà
                    :compound(t1 / thám_hiểm))
                :domain n)
            :domain-of(t3 / tệ_hại
                :tense(s / sẽ)))
        :pivot ô)
    :agent(ô / ông_hoàng
        :mod(n3 / nhỏ)))

#::snt - có thể như thế .
(p / possible-01
    :compared-to(t / thế)
    :degree(e / equal))

#::snt vậy nên khi tư cách của nhà thám hiểm được chứng minh là tốt rồi , thì người ta mới điều tra về phát hiện của anh ta .
(đ1 / điều_tra
    :time(c1 / chứng_minh
        :modality(đ / được)
        :topic(t2 / tốt
            :patient(t / tư_cách
                :poss(n1 / nhà
                    :compound(t1 / thám_hiểm)))))
    :agent(n2 / người_ta)
    :theme(p / phát_hiện
        :poss n1))

#::snt - người ta đi xem hay sao ?
(đ / đi
    :agent(n / người_ta)
    :purpose(x / xem
        :agent n)
    :mode interrogative)

#::snt - không , như thế thì phức tạp quá .
(a / and
    :op1(k / không)
    :op2(p / phức_tạp
        :domain(t / thế)
        :degree(q / quá)))

#::snt nhưng người ta đòi hỏi nhà thám hiểm cung cấp bằng chứng .
(c1 / contrast-01
    :ARG2(đ / đòi_hỏi
        :agent(n1 / người_ta)
        :topic(c / cung_cấp
            :agent(n2 / nhà
                :compound(t / thám_hiểm))
            :theme(b / bằng_chứng))))

#::snt ví dụ như tìm thấy một hòn núi lớn , người ta buộc anh ta phải mang về những tảng đá bự .
(e / exemplify-01
    :topic(b / buộc
        :condition(t / tìm
            :compound(t1 / thấy)
            :theme(n1 / núi
                :classifier(h / hòn)
                :mod(l / lớn)
                :quant 1))
        :agent(n2 / người_ta)
        :topic(m1 / mang
            :agent(a / anh
                :compound(t2 / ta))
            :modality(p / phải)
            :compound(v1 / về)
            :theme(đ / đá
                :classifier(t3 / tảng)
                :mod(b1 / bự)))))

#::snt nhà địa lý bỗng nhiên xúc động :
(x / xúc_động
    :pivot(n / nhà
        :compound(đ / địa_lý))
    :manner(b / bỗng_nhiên))

#::snt - nhưng mà chú , chú đến từ xa .
(c / contrast-01
    :ARG2(đ / đến
        :agent(c1 / chú)
        :extent(x / xa)))

#::snt chú là một nhà thám hiểm !
(n / nhà
    :domain(c / chú)
    :compound(t / thám_hiểm)
    :mode expressive)

#::snt chú hãy tả cho ta cái hành tinh của chú đi !
(t / tả
    :agent(c / chú)
    :beneficiary(t1 / ta)
    :theme(h1 / hành_tinh
        :classifier(c2 / cái)
        :poss(c4 / chú))
    :mode imperative)

#::snt rồi nhà địa lý , sau khi đã mở cuốn sổ to , liền gọt bút chì .
(a / and
    :op2(g / gọt
        :manner(l / liền)
        :patient(b / bút_chì
            :poss n)
        :time(a1 / after
            :op1(m / mở
                :agent(n / nhà
                    :compound(đ / địa_lý))
                :theme(s1 / sổ
                    :classifier(c / cuốn)
                    :mod(t / to))))
        :agent n))

#::snt thoạt tiên người ta ghi bằng bút chì các chuyện kể của nhà thám hiểm .
(g / ghi
    :time(t / thoạt_tiên)
    :agent(n / người_ta)
    :instrument(b1 / bút_chì)
    :theme(c1 / chuyện
        :compound(k / kể)
        :poss(n1 / nhà
            :compound(t1 / thám_hiểm))))

#::snt đợi cho nhà thám hiểm cung cấp bằng chứng rồi , người ta mới ghi lại bằng bút mực .
(đ / đợi
    :agent(n1 / người_ta)
    :time(b / before
        :op1(g / ghi
            :compound(l / lại)
            :instrument(b2 / bút
                :mod(m1 / mực))
            :agent n1))
    :time(u / until
        :op1(c1 / cung_cấp
            :agent(n / nhà
                :compound(t / thám_hiểm))
            :theme(b1 / bằng_chứng))))

#::snt - thế nào ? nhà địa lý hỏi .
(h / hỏi
    :topic(t / thế_nào
        :mode interrogative)
    :agent(n / nhà
        :compound(đ / địa_lý)))

#::snt chỗ tôi ấy ư , ông hoàng nói , chẳng có gì đáng chú ý lắm , nó bé tí tẹo mà .
(n / nói
    :agent(ô / ông_hoàng)
    :topic(a / and
        :op1(c2 / có
            :location(c / chỗ
                :poss(t / tôi))
            :theme(g / gì)
            :purpose(đ / đáng
                :compound(c3 / chú_ý)
                :degree(l / lắm))
            :polarity -)
        :op2(b / bé
            :degree(t1 / tí_tẹo)
            :domain c)))

#::snt tôi có ba quả núi lửa .
(c / có
    :pivot(t / tôi)
    :theme(n / núi_lửa
        :quant 3
            :classifier(q / quả)))

#::snt hai quả hoạt động , một quả tắt .
(a / and
    :op1(h1 / hoạt_động
        :theme(q / quả
            :quant 2))
    :op2(t / tắt
        :theme(q1 / quả
            :quant 1)))

#::snt nhưng biết đâu đấy .
(c / contrast-01
    :ARG2(b / biết_đâu_đấy))

#::snt - biết đâu , nhà địa lý nói .
(n1 / nói
    :topic(b / biết_đâu)
    :agent(n / nhà
        :compound(đ / địa_lý)))

#::snt - tôi cũng có một bông hoa .
(c1 / có
    :pivot(t / tôi)
    :theme(h / hoa
        :quant 1
            :classifier(b / bông)))

#::snt - chúng tôi không ghi nhận bông hoa , nhà địa lý nói .
(n1 / nói
    :topic(g / ghi_nhận
        :agent(c / chúng_tôi)
        :theme(h / hoa
            :classifier(b / bông))
        :polarity -)
    :agent(n / nhà
        :compound(đ / địa_lý)))

#::snt - sao thế ?
(t / thế
    :mode interrogative
    :cause(a / amr-unknown))

#::snt nó là thứ đẹp nhất kia mà !
(t / thứ
    :domain(n / nó)
    :mod(đ / đẹp
        :degree(n1 / nhất))
    :mode expressive)

#::snt - bởi hoa vốn phù du .
(c / cause-01
    :ARG0(p / phù_du
        :domain(h / hoa)))

#::snt - thế nào gọi là " phù du " ?
(g / gọi
    :compound(l / là)
    :theme(p / phù_du)
    :mode interrogative
    :manner(a / amr-unknown))

#::snt - các sách địa lý , nhà địa lý nói , là những cuốn sách chính xác nhất .
(n1 / nói
    :agent(n / nhà
        :compound(đ1 / địa_lý))
    :topic(s1 / sách
        :domain(s / sách
            :mod(đ / địa_lý))
        :classifier(c1 / cuốn)
        :mod(c2 / chính_xác
            :degree(n3 / nhất))))

#::snt chẳng bao giờ lỗi thời cả .
(l / lỗi_thời
    :polarity -
    :time(e / ever))

#::snt chẳng mấy khi một quả núi lại chuyển chỗ .
(c1 / chuyển
    :degree(c / chẳng_mấy_khi)
    :theme(n / núi
        :quant 1
            :classifier(q / quả))
    :location(c2 / chỗ))

#::snt chẳng mấy khi một đại dương lại cạn nước .
(c1 / cạn
    :degree(c / chẳng_mấy_khi)
    :pivot(đ / đại_dương
        :quant 1)
    :theme(n / nước
        :poss đ))

#::snt chúng ta viết nên những điều vĩnh cửu .
(v / viết
    :agent(c / chúng_ta)
    :compound(n / nên)
    :result-arg1(đ / điều
        :mod(v1 / vĩnh_cửu)))

#::snt - song những núi lửa đã tắt có thể thức dậy được , ông hoàng nhỏ ngắt lời .
(n3 / ngắt
    :agent(ô / ông_hoàng
        :mod(n2 / nhỏ))
    :compound(l / lời)
    :topic(c / contrast-01
        :ARG2(p / possible-01
            :theme(t1 / thức
                :theme(n1 / núi_lửa
                    :theme-of(t / tắt
                        :tense(đ / đã)))
                :compound(d / dậy)))))

#::snt thế nào gọi là " phù du " ?
(g / gọi
    :compound(l / là)
    :topic(p / phù_du)
    :theme(a / amr-unknown)
    :mode interrogative)

#::snt - núi lửa tắt hay hoạt động với bọn ta cũng thế thôi , nhà địa lý nói .
(n2 / nói
    :topic(t2 / thế
        :beneficiary(t1 / ta
            :classifier(b / bọn))
        :compound(t3 / thôi)
        :theme(o / or
            :op1(t / tắt
                :theme(n / núi_lửa))
            :op2(h1 / hoạt_động
                :theme n)))
    :agent(n1 / nhà
        :compound(đ / địa_lý)))

#::snt cái ta kể tới , đó là quả núi .
(n / núi
    :domain(c / cái
        :agent-of(k / kể
            :agent(t / ta)))
    :classifier(q / quả))

#::snt nó không thay đổi .
(t / thay_đổi
    :theme(n / nó)
    :polarity -)

#::snt - nhưng thế nào gọi là " phù du " ? ông hoàng nhỏ lặp lại , suốt đời , em đã không chịu bỏ qua một câu hỏi , một khi đã nêu nó ra .
(l1 / lặp
    :agent(ô / ông_hoàng
        :mod(n1 / nhỏ)
        :agent-of(c / chịu
            :tense(đ1 / đã)
            :theme(b / bỏ_qua
                :theme(c1 / câu
                    :compound(h / hỏi)
                    :quant 1)
                :time(m1 / một_khi
                    :op1(n2 / nêu
                        :tense(đ2 / đã)
                        :theme(n3 / nó)
                        :result(r / ra)
                        :agent ô)))
            :agent ô
            :time(e1 / ever
                :duration(đ / đời
                    :mod(s / suốt)))
            :polarity -))
    :compound(l2 / lại)
    :topic(c2 / contrast-01
        :ARG2(g / gọi
            :compound(l / là)
            :topic(p / phù_du)
            :theme(a / amr-unknown))
        :mode interrogative))

#::snt - gọi như thế có nghĩa là " đứng trước hiểm hoạ bị tiêu diệt " .
(c / có
    :theme(g / gọi
        :manner(t / thế))
    :compound(n1 / nghĩa)
    :topic(đ / đứng
        :compound(t1 / trước)
        :setting(h / hiểm_hoạ
            :theme-of(t2 / tiêu_diệt
                :modality(b / bị)))))

#::snt - cái hoa của tôi đang đứng trước hiểm hoạ bị tiêu diệt ư ?
(đ1 / đứng
    :theme(h / hoa
        :classifier(c / cái)
        :poss(t / tôi))
    :tense(đ / đang)
    :compound(t1 / trước)
    :setting(h1 / hiểm_hoạ
        :theme-of(t2 / tiêu_diệt
            :modality(b / bị)))
    :mode interrogative)

#::snt - chắc rồi .
(c / chắc)

#::snt đoá hoa của tôi vốn phù du , ông hoàng nhỏ tự nhủ , và nàng chỉ có bốn cái gai để chống chọi ở đời !
(t1 / tự_nhủ
    :pivot(ô / ông_hoàng
        :mod(n / nhỏ))
    :topic(a / and
        :op1(p / phù_du
            :domain(h / hoa
                :classifier(đ / đoá)
                :poss(t / tôi))
            :time(b / before))
        :op2(c2 / có
            :degree(c1 / chỉ)
            :theme(g / gai
                :quant 4
                    :classifier(c3 / cái))
            :purpose(c4 / chống_chọi
                :time(đ2 / đời)
                :agent h)
            :pivot h)))

#::snt thế mà ta để nàng một mình ở quê nhà !
(a / and
    :op2(đ / để
        :agent(t1 / ta)
        :patient(n / nàng)
        :manner(m / một_mình)
        :location(q / quê
            :prep(ở / ở)
            :compound(n1 / nhà))))

#::snt ấy là cơn nuối tiếc đầu tiên của em .
(c / cơn
    :domain(ấ / ấy)
    :mod(n / nuối_tiếc)
    :poss(e / em)
    :ord(o / ordinal-entity
        :value 1))

#::snt nhưng em lấy lại can đảm :
(c1 / contrast-01
    :ARG2(l / lấy
        :agent(e / em)
        :compound(l1 / lại)
        :theme(c / can_đảm)))

#::snt - bây giờ ông khuyên tôi nên đi thăm đâu ? em hỏi .
(h / hỏi
    :topic(k / khuyên
        :agent(ô / ông)
        :topic(đ / đi
            :modality(n / nên)
            :compound(t1 / thăm)
            :location(đ1 / đâu
                :domain(a / amr-unknown))
            :agent t)
        :time(n1 / now)
        :beneficiary-arg1 e)
    :agent(e / em))

#::snt - hành tinh trái đất , nhà địa lý trả lời .
(t1 / trả_lời
    :topic(h / hành_tinh
        :wiki(wz1 / Trái_Đất)
        :name(n1 / name
            :op2(wz2 / Đất)
            :op1(wz3 / Trái)))
    :agent(n / nhà
        :compound(đ / địa_lý)))

#::snt hành tinh ấy nổi tiếng lắm ...
(n / nổi_tiếng
    :domain(h / hành_tinh
        :mod(ấ / ấy))
    :degree(l / lắm))

#::snt thế là ông hoàng nhỏ ra đi , lòng mơ đến đoá hoa của mình .
(a1/ and
    :op2(a / and
        :op1(r / ra
            :agent(ô / ông_hoàng
                :mod(n / nhỏ))
            :compound(đ / đi))
        :op2(m / mơ
            :pivot(l / lòng)
            :goal(h / hoa
                :classifier(đ2 / đoá)
                :poss ô))))

#::snt hành tinh thứ bảy vậy là trái đất .
(t1 / trái_đất
    :domain(h / hành_tinh
        :ord(o / ordinal-entity
            :value 7))
    :name(n / name
        :op2(wz2 / Đất)
        :op1(wz3 / Trái))
    :wiki(wz4 / Trái_Đất))

#::snt trái đất không phải là một hành tinh xoàng !
(h / hành_tinh
    :domain(t / trái_đất
        :name(n / name
            :op2(wz1 / Đất)
            :op1(wz2 / Trái))
        :wiki(wz3 / Trái_Đất))
    :mod(x / xoàng)
    :polarity -)

#::snt người ta đã tính có tới một trăm mười một ông vua ( trong đó , hiển nhiên là không quên tính cả các ông vua đen ) , bảy nghìn nhà địa lý , chín trăm nghìn nhà doanh nghiệp , bảy triệu rưỡi bợm nhậu , ba trăm mười một triệu kẻ khoác lác , nghĩa là vào quãng hai tỉ người lớn .
(t / tính
    :agent(n / người_ta)
    :tense(đ / đã)
    :theme(c / có
        :theme(a / and
            :op1(ô / ông
                :compound(v / vua)
                :agent-of(q / quên
                    :theme(t3 / tính
                        :theme(ô1 / ông
                            :compound(v1 / vua)
                            :mod(đ2 / đen)))
                    :polarity -
                    :agent n)
                :quant 111)
            :op2(n1 / nhà
                :compound(đ3 / địa_lý)
                :quant 7000)
            :op3(n2 / nhà
                :compound(d / doanh_nghiệp)
                :quant 900000)
            :op4(b2 / bợm
                :compound(n3 / nhậu)
                :quant 7500000)
            :op5(k1 / kẻ
                :mod(k2 / khoác_lác)
                :quant 311000000)
            :mod(n5 / người_lớn
                :quant(q1 / quãng
                    :op1 2000000000)))))

#::snt để các bạn có chút ý niệm về kích thước trái đất , tôi phải nói với các bạn rằng trước khi tìm ra được điện , trên cả sáu châu lục người ta dùng cả một đạo quân thực sự sáu trăm bốn mươi hai nghìn năm trăm mười một người đốt đèn .
(n / nói
    :purpose(c1 / có
        :pivot(b / bạn)
        :theme(ý / ý_niệm
            :topic(k / kích_thước
                :mod(t / trái_đất
                    :name(n1 / name
                        :op2(wz1 / Đất)
                        :op1(wz2 / Trái))
                    :wiki(wz3 / Trái_Đất)))))
    :agent(t1 / tôi)
    :topic(d / dùng
        :location(c5 / châu_lục
            :quant 6)
        :agent(n11 / người_ta)
        :theme(đ3 / đạo
            :compound(q / quân)
            :mod(t5 / thực_sự)
            :consist-of(n2 / người
                :agent-of(đ4 / đốt
                    :patient(đ5 / đèn))
                :quant 642511)
            :quant 1)
        :time(b1/ before
            :op1(t3 / tìm
                :compound(r1 / ra)
                :result-arg1(đ2 / điện))))
    :goal b)

#::snt nhìn xa xa một chút cảnh đốt đèn đó thật tuyệt diệu .
(t1 / tuyệt_diệu
    :condition(n / nhìn
        :manner(x / xa_xa
            :degree(m / một_chút)))
    :domain(c / cảnh
        :agent-of(đ / đốt
            :patient(đ1 / đèn))
        :mod(đ2 / đó))
    :degree(t / thật))

#::snt các chuyển động của đạo quân này qui định như trong một vở kịch ba-lê .
(q / qui_định
    :theme(c1 / chuyển_động
        :poss(đ / đạo_quân
            :mod(n / này))
        :theme-of(r / resemble
            :compared-to(k / kịch
                :classifier(v / vở)
                :mod(bl / ba-lê))
            :degree(e / equal))))

#::snt trước tiên là phiên những người đốt đèn nước Tân Tây Lan và nước úc .
(p / phiên
    :time(t / trước_tiên)
    :poss(p1 / person
        :agent-of(đ / đốt
            :patient(đ1 / đèn))
        :source(a / and
            :op2(c1 / country
                :name(n1 / name
                    :op1(wz1 / Úc))
                :wiki(wz2 / Úc))
            :op1(c / country
                :wiki(t1 / Tân_Tây_Lan)
                :name(n / name
                    :op3(wz3 / Lan)
                    :op2(wz4 / Tây)
                    :op1(wz5 / Tân))))))

#::snt sau khi đốt đèn xong , họ đi ngủ .
(đ2 / đi
    :agent(h / họ)
    :compound(n / ngủ)
    :time(a / after
        :op1(đ / đốt
            :patient(đ1 / đèn
                :poss h)
            :agent h)))

#::snt bấy giờ đến lượt những người đốt đèn Trung Quốc và Tây Bá Lợi á .
(đ / đến
    :time(b / bấy_giờ)
    :theme(l / lượt
        :poss(n1 / người
            :agent-of(đ1 / đốt
                :patient(đ2 / đèn))
            :location(a / and
                :op2(c1 / country-region
                    :wiki(wz1 / Tây_Bá_Lợi_Á)
                    :name(n11 / name
                        :op1(wz2 / Tây)
                        :op3(wz3 / Lợi)
                        :op4(wz4 / Á)
                        :op2(wz5 / Bá)))
                :op1(c / country
                    :wiki(wz6 / Trung_Quốc)
                    :name(n / name
                        :op2(wz7 / Quốc)
                        :op1(wz8 / Trung)))))))

#::snt xong cả họ nữa , cũng biến mất trong các hành lang .
(b / biến
    :pivot(h / họ)
    :compound(m / mất)
    :location(h1 / hành_lang
        :prep(t / trong)))

#::snt lại đến lượt những người đốt đèn nước Nga và nước ấn Độ .
(đ / đến
    :theme(l1 / lượt
        :poss(n1 / người
            :agent-of(đ1 / đốt
                :patient(đ2 / đèn))
            :location(a / and
                :op2(c1 / country
                    :wiki(wz1 / Ấn_Độ)
                    :name(n5 / name
                        :op2(wz2 / Độ)
                        :op1(wz3 / Ấn)))
                :op1(c / country
                    :wiki(n3 / Nga)
                    :name(n4 / name
                        :op1(wz4 / Nga)))))))

#::snt rồi đến những người của Châu Phi và Châu Âu .
(đ / đến
    :poss(n1 / người
        :location(a / and
            :op1(c / continent
                :wiki(wz1 / Châu_Phi)
                :name(n2 / name
                    :op2(wz2 / Phi)
                    :op1(wz3 / Châu)))
            :op2(c1 / continent
                :wiki(wz4 / Châu_Âu)
                :name(n3 / name
                    :op2(wz5 / Âu)
                    :op1(wz6 / Châu))))))

#::snt rồi đến những người Nam Mỹ .
(đ / đến
    :poss(n1 / người
        :location(c / continent
            :wiki(wz1 / Nam_Mỹ)
            :name(n / name
                :op1(wz2 / Nam)
                :op2(wz3 / Mỹ)))))

#::snt rồi đến những người Bắc Mỹ .
(đ / đến
    :poss(n1 / người
        :location(wz1 / continent
            :wiki(wz2 / Bắc_Mỹ)
            :name(n / name
                :op1(wz3 / Bắc)
                :op2(wz4 / Mỹ)))))

#::snt và chẳng bao giờ họ vào ra sân khấu nhầm lẫn cả .
(a / and
    :op2(v1 / vào
        :agent(h / họ)
        :compound(r / ra)
        :direction(s / sân_khấu)
        :result(n / nhầm_lẫn
            :agent h)
        :time(e / ever
            :polarity -)))

#::snt thật là vĩ đại .
(v / vĩ_đại
    :degree(t / thật))

#::snt chỉ có ông đốt đèn của cây đèn độc nhất ở Bắc Cực và ông đốt đèn của cây đèn độc nhất ở Nam Cực là sống cuộc đời lề mề ăn không ngồi rỗi : hai ông ấy chỉ làm việc một năm có hai lần .
(s / sống
    :setting(c6 / cuộc_đời
        :mod(a / and
            :op1(l1 / lề_mề)
            :op2(ă / ăn_không_ngồi_rỗi)))
    :topic(l2 / làm_việc
        :agent(ô2 / ông
            :mod(ấ / ấy)
            :quant 2)
        :degree(c7 / chỉ)
        :frequency(r / rate-entity-91
            :time(t / temporal-quantity
                :unit(n1 / năm)
                :quant 1)
            :quant 2))
    :pivot(a1 / and
        :op1(ô / ông
            :agent-of(đ / đốt
                :patient(đ1 / đèn))
            :poss(đ2 / đèn
                :classifier(c3 / cây)
                :mod(đ3 / độc_nhất)
                :location(w / world-region
                    :wiki(wz4 / Bắc_Cực)
                    :name(n / name
                        :op1(wz5 / Bắc)
                        :op2(wz6 / Cực)))))
        :op2(ô1 / ông
            :agent-of(đ4 / đốt
                :patient(đ5 / đèn))
            :poss(đ6 / đèn
                :classifier(c5 / cây)
                :mod(đ7 / độc_nhất)
                :location(w1 / world-region
                    :name(n11 / name
                        :op2(wz7 / Cực)
                        :op1(wz8 / Nam))
                    :wiki(wz9 / Nam_Cực))))))

#::snt khi người ta muốn ra vẻ thông minh , thường thì điều này sẽ dẫn đến việc người ta nói dóc đôi chút .
(d / dẫn
    :time(m / muốn
        :pivot(n / người_ta)
        :theme(t / thông_minh))
    :theme(đ / điều
        :mod(n1 / này))
    :tense(s / sẽ)
    :compound(đ1 / đến)
    :result(v / việc
        :theme-of(n3 / nói_dóc
            :degree(đ2 / đôi
                :compound(c / chút))
            :agent n))
    :frequency(s1 / sometimes))

#::snt tôi không thật thà lắm đâu khi kể với các bạn về những người đốt đèn .
(t1 / thật_thà
    :domain(t / tôi)
    :polarity -
    :degree(l / lắm)
    :time(k2 / kể
        :goal(b / bạn)
        :topic(n1 / người
            :agent-of(đ1 / đốt
                :patient(đ2 / đèn)))
        :agent t))

#::snt dám có thể tôi đã gây một ý niệm sai lầm về hành tinh của chúng ta đối với những ai chưa biết nó .
(a / and
    :op2(p / possible-01
        :theme(g / gây
            :agent(t / tôi)
            :tense(đ / đã)
            :result-arg1(ý / ý_niệm
                :mod(s / sai_lầm)
                :topic(h / hành_tinh
                    :poss(c2 / chúng_ta)))
            :goal(p1 / person
                :pivot-of(b / biết
                    :polarity -
                    :theme h)))))

#::snt loài người chiếm rất ít chỗ trên mặt đất .
(c / chiếm
    :pivot(l / loài_người)
    :theme(c1 / chỗ
        :mod(í / ít
            :degree(r / rất)))
    :location(m / mặt
        :prep(t / trên)
        :compound(đ / đất)))

#::snt nếu hai tỷ con người đang sống trên mặt đất này mà đứng khá sát vào nhau , như trong một cuộc meeting , thì họ sẽ đứng gọn trong một quảng trường chỉ rộng hơn hai dặm , dài hai mươi dặm
(đ3 / đứng
    :condition(đ2 / đứng
        :agent(c / con_người
            :pivot-of(s / sống
                :tense(đ / đang)
                :location(m / mặt
                    :prep(t1 / trên)
                    :compound(đ1 / đất)
                    :mod(n1 / này)))
            :quant 2000000000)
        :manner(s1 / sát
            :degree(k / khá)
            :manner(n2 / nhau)
            :compared-to(c1 / cuộc
                :prep(t2 / trong)
                :mod(m3 / meeting)
                :quant 1)))
    :tense(s2 / sẽ)
    :manner(g / gọn)
    :agent c
    :location(a / and
        :op1(r / rộng
            :domain(q / quảng_trường)
            :degree(c2 / chỉ)
            :quant(h2 / hơn
                :op1(d11 / distance-quantity
                    :unit(d / dặm)
                    :quant 2)))
        :op2(d1 / dài
            :domain q
            :quant(d2 / distance-quantity
                :quant 20
                :unit d))))

#::snt có thể dồn hết nhân loại lên một hòn đảo bé nhất trong Thái Bình Dương .
(p / possible-01
    :theme(d / dồn
        :manner(h / hết)
        :patient(n / nhân_loại)
        :direction(l / lên
            :finalLocation(đ / đảo
                :mod(b / bé
                    :degree(n1 / nhất))
                :location(o / ocean
                    :name(n2 / name
                        :op1(wz1 / Thái)
                        :op2(wz2 / Bình)
                        :op3(wz3 / Dương))
                    :wiki(wz4 / Thái_Bình_Dương))
                :quant 1
                    :classifier(h1 / hòn)))))

#::snt những người lớn , chắc chắn rồi , sẽ chẳng tin bạn đâu .
(t / tin
    :pivot(n1 / người_lớn)
    :degree(c / chắc_chắn)
    :theme(b / bạn)
    :polarity -
        :tense(s / sẽ))

#::snt họ nghĩ là họ chiếm nhiều chỗ lắm .
(n / nghĩ
    :agent(h / họ)
    :topic(c / chiếm
        :theme(c1 / chỗ
            :quant(n1 / nhiều))
        :degree(l1 / lắm)
        :agent h))

#::snt họ thấy họ quan trọng như các cây baobab .
(t / thấy
    :pivot(h / họ)
    :topic(q / quan_trọng
        :compared-to(c1 / cây
            :mod(b / baobab))
        :domain h
        :degree(e / equal)))

#::snt thế nên các bạn phải khuyên họ làm các con tính đi .
(r / recommend-01
    :theme(k / khuyên
        :agent(b / bạn)
        :goal(h / họ)
        :topic(l / làm
            :theme(c2 / con_tính)
            :agent h))
    :mode imperative)

#::snt họ tôn thờ những con số : việc ấy làm họ thích thú .
(a / and
    :op1(t / tôn_thờ
        :pivot(h / họ)
        :theme(c / con_số))
    :op2(l / làm
        :cause(v / việc
            :mod(ấ / ấy))
        :topic(t1 / thích_thú
            :pivot h)))

#::snt nhưng đừng có phí nhiều thì giờ của bạn vào hình phạt đó .
(c / contrast-01
    :ARG2(p / phí
        :theme(t / thì_giờ
            :quant(n1 / nhiều)
            :poss(b / bạn))
        :goal(h / hình_phạt
            :mod(đ1 / đó))
        :agent b
        :polarity -
        :mode imperative))

#::snt chẳng ích gì .
(í / ích
    :polarity -)

#::snt bạn tin vào tôi mà .
(t / tin
    :pivot(b / bạn)
    :goal(t1 / tôi))

#::snt ông hoàng nhỏ , một khi đáp xuống mặt đất , rất kinh ngạc vì chẳng trông thấy người nào .
(k / kinh_ngạc
    :pivot(ô / ông_hoàng
        :mod(n / nhỏ))
    :time(đ / đáp
        :compound(x / xuống)
        :location(m1 / mặt
            :compound(đ1 / đất))
        :agent ô)
    :degree(r / rất)
    :reason(t / trông
        :compound(t1 / thấy)
        :theme(n1 / người
            :mod(n2 / nào))
        :polarity -
        :agent ô))

#::snt em đã bắt đầu sợ mình nhầm hành tinh , thì một cái vòng mầu ánh trăng động đậy trong cát .
(b / bắt_đầu
    :pivot(e / em)
    :tense(đ / đã)
    :theme(s / sợ
        :topic(n / nhầm
            :theme(h / hành_tinh)
            :pivot e))
    :time(đ1 / động_đậy
        :theme(v / vòng
            :mod(m2 / mầu
                :mod(á / ánh
                    :mod(t1 / trăng)))
            :quant 1
                :classifier(c / cái))
        :location(c1 / cát
            :prep(t2 / trong))))

#::snt - xin chào , ông hoàng nhỏ nói bâng quơ .
(n1 / nói
    :topic(x / xin
        :compound(c / chào))
    :agent(ô / ông_hoàng
        :mod(n / nhỏ))
    :manner(b / bâng_quơ))

#::snt - xin chào , con rắn nói .
(n / nói
    :topic(x / xin
        :compound(c / chào))
    :agent(r / rắn
        :classifier(c1 / con)))

#::snt - tôi rơi xuống hành tinh nào vậy ? ông hoàng nhỏ hỏi .
(h1 / hỏi
    :topic(h / hành_tinh
        :patient-of(r / rơi
            :direction(x / xuống)
            :patient ô)
        :mode interrogative
        :domain(a / amr-unknown))
    :agent(ô / ông_hoàng
        :mod(n1 / nhỏ)))

#::snt - trên trái đất , ở Châu Phi , con rắn trả lời .
(t2 / trả_lời
    :agent(r / rắn
        :classifier(c1 / con))
    :topic(a / and
        :op1(p / planet
            :wiki(wz1 / Trái_Đất)
            :name(n / name
                :op2(wz2 / Đất)
                :op1(wz3 / Trái)))
        :op2(c2 / continent
            :name(n1 / name
                :op2(wz4 / Phi)
                :op1(wz5 / Châu))
            :wiki(wz6 / Châu_Phi))))

#::snt - a ! thế trên trái đất không có người nào ư ?
(m / multi-sentence
    :snt1(a / a
        :mode expressive)
    :snt2(c / có
        :theme(n / người)
        :location(p / planet
            :name(n1 / name
                :op2(wz2 / Đất)
                :op1(wz3 / Trái))
            :wiki(wz4 / Trái_Đất))
        :mode interrogative))

#::snt - đây là sa mạc .
(s / sa_mạc
    :domain(đ / đây))

#::snt chẳng có ai trên sa mạc đâu .
(c1 / có
    :polarity -
    :theme(a / ai)
    :location(s / sa_mạc
        :prep(t / trên)))

#::snt trái đất rộng lắm , rắn nói .
(n / nói
    :topic(r / rộng
        :degree(l / lắm)
        :domain(p / planet
            :name(n1 / name
                :op2(wz1 / Đất)
                :op1(wz2 / Trái))
            :wiki(wz3 / Trái_Đất)))
    :agent(r1 / rắn))

#::snt ông hoàng nhỏ ngồi trên một tảng đá và ngước mắt lên trời :
(a / and
    :op1(n1 / ngồi
        :agent(ô / ông_hoàng
            :mod(n / nhỏ))
        :location(đ / đá
            :quant 1
                :classifier(t1 / tảng)))
    :op2(n2 / ngước
        :theme(m1 / mắt
            :part-of ô)
        :direction(l / lên
            :location(t2 / trời))
        :agent ô))

#::snt - có những ngôi sao được thắp sáng là để mỗi người một ngày kia trở về ngôi sao của mình ?
(t / thắp
    :patient(s / sao
        :classifier(n1 / ngôi))
    :modality(đ / được)
    :compound(s1 / sáng)
    :purpose(t1 / trở
        :agent(n2 / người)
        :time(n3 / ngày_kia)
        :compound(v / về)
        :finalLocation(s2 / sao
            :classifier(n4 / ngôi)
            :poss n2))
    :mode interrogative)

#::snt hãy nhìn xem tinh cầu của tôi .
(n / nhìn
    :compound(x / xem)
    :goal(t / tinh_cầu
        :source(t1 / tôi))
    :mode imperative)

#::snt nó ở ngay bên trên chúng ta ...
(b / be-located-at-91
    :theme(n / nó)
    :location(b1 / bên
        :mod(n1 / ngay)
        :direction(t / trên
            :op1(c / chúng_ta))))

#::snt nhưng sao mà xa thế !
(c / contrast-01
    :ARG2(x / xa
        :manner(a / amr-unknown)))

#::snt - nó đẹp đấy , rắn nói .
(n1 / nói
    :topic(đ / đẹp
        :domain(n / nó))
    :agent(r / rắn))

#::snt cậu làm gì tới đây ?
(t / tới
    :agent(c / cậu)
    :purpose(l / làm
        :theme(a / amr-unknown))
    :location(đ / đây)
    :mode interrogative)

#::snt - tôi có chuyện rắc rối với một bông hoa , ông hoàng nhỏ nói .
(n1 / nói
    :topic(c / có
        :theme(c1 / chuyện
            :mod(r / rắc_rối)
            :source(h / hoa
                :quant 1
                    :classifier(b / bông)))
        :pivot ô)
    :agent(ô / ông_hoàng
        :mod(n / nhỏ)))

#::snt - à ! rắn nói .
(n / nói
    :topic(à / à
        :mode expressive)
    :agent(r / rắn))

#::snt và cả hai lặng thinh .
(a / and
    :op2(l / lặng_thinh
        :pivot(h / hai
            :mod(c / cả))))

#::snt - loài người ở đâu ? ông hoàng nhỏ lễ phép hỏi .
(h / hỏi
    :agent(ô / ông_hoàng
        :mod(n / nhỏ))
    :manner(l1 / lễ_phép)
    :topic(b / be-located-at-91
        :pivot(l / loài_người)
        :location(a / amr-unknown)
        :mode interrogative))

#::snt trong sa mạc thấy hơi bơ vơ ...
(t1 / thấy
    :manner(b / bơ_vơ
        :degree(h / hơi))
    :domain(b1 / be-located-at-91
        :location(s / sa_mạc)))

#::snt - ngay giữa loài người , cũng bơ vơ , rắn nói .
(n1 / nói
    :topic(b / bơ_vơ
        :domain(b1 / be-located-at-91
            :location(g / giữa
                :mod(n / ngay)
                :mod(l / loài_người))))
    :agent(r / rắn))

#::snt ông hoàng nhỏ nhìn rắn rất lâu :
(n1 / nhìn
    :agent(ô / ông_hoàng
        :mod(n / nhỏ))
    :goal(r / rắn)
    :manner(l / lâu
        :degree(r1 / rất)))

#::snt - anh là một con vật buồn cười thật , em nói .
(n / nói
    :topic(v / vật
        :domain(a / anh)
        :mod(b / buồn_cười
            :degree(t / thật))
        :quant 1
            :classifier(c / con))
    :agent(e / em))

#::snt - nhưng ta mạnh hơn ngón tay của một ông vua , rắn nói .
(n2 / nói
    :agent(r / rắn)
    :topic(c / contrast-01
        :ARG2(m / mạnh
            :domain(t / ta)
            :degree(h / hơn)
            :compared-to(n1 / ngón
                :compound(t1 / tay)
                :part-of(ô / ông
                    :compound(v / vua))))))

#::snt ông hoàng nhỏ mỉm cười :
(m / mỉm
    :agent(ô / ông_hoàng
        :mod(n / nhỏ))
    :compound(c / cười))

#::snt - anh không mạnh lắm đâu ...
(m / mạnh
    :domain(a / anh)
    :degree(l / lắm)
    :polarity -)

#::snt đến chân anh cũng chẳng có ...
(c3 / có
    :theme(c / chân)
    :pivot(a / anh)
    :polarity -)

#::snt anh muốn đi xa cũng không được ...
(p / possible-01
    :agent(m / muốn
        :pivot(a / anh)
        :theme(đ / đi
            :manner(x / xa)
            :agent a))
    :polarity -)

#::snt - ta có thể chở cậu đi xa hơn cả một chiếc tàu , rắn nói .
(n / nói
    :agent(r / rắn)
    :topic(p / possible-01
        :theme(c1 / chở
            :theme(c2 / cậu)
            :extent(đ / đi
                :manner(x / xa)
                :compared-to c1
                    :agent(t1 / tàu
                        :quant 1
                            :classifier(c4 / chiếc))
                    :theme c2
                :degree(m / more))
            :agent r)))

#::snt rắn cuốn quanh mắt cá của ông hoàng nhỏ , trông giống một chiếc vòng vàng :
(c / cuốn
    :agent(r / rắn)
    :theme(m / mắt_cá
        :mod(q / quanh)
        :part-of(ô / ông_hoàng
            :mod(n / nhỏ)))
    :manner(r1 / resemble-01
        :compared-to(v / vòng
            :consist-of(v1 / vàng)
            :quant 1
                :classifier(c2 / chiếc))))

#::snt - kẻ nào bị ta chạm tới , ta sẽ trả hắn về với đất là nơi hắn sinh ra .
(t3 / trả
    :theme(k / kẻ
        :mod(n / nào)
        :agent-of(c / chạm
            :modality(b / bị)
            :agent(t / ta)
            :compound(t1 / tới)))
    :tense(s / sẽ)
    :direction(v / về
        :source(đ / đất
            :setting(n1 / nơi
                :patient-of(s1 / sinh
                    :compound(r / ra)
                    :patient k))))
    :agent t)

#::snt nhưng cậu thì trong sạch và cậu từ một ngôi sao tới .
(c1 / contrast-01
    :ARG2(a / and
        :op1(t1 / trong_sạch
            :domain(c / cậu))
        :op2(t3 / tới
            :initialLocation(s / sao
                :quant 1
                    :classifier(n1 / ngôi))
            :agent c)))

#::snt ông hoàng nhỏ không nói gì .
(n1 / nói
    :agent(ô / ông_hoàng
        :mod(n / nhỏ))
    :topic(g / gì)
    :polarity -)

#::snt - anh là một con vật buồn cười thật , em nói , mảnh khảnh cứ như một ngón tay ...
(n / nói
    :agent(e / em)
    :topic(a1 / and
        :op1(v / vật
            :domain(a / anh)
            :classifier(c / con)
            :mod(b / buồn_cười
                :degree(t / thật)))
        :op2(m1 / mảnh_khảnh
            :compared-to(n2 / ngón
                :compound(t1 / tay)
                :quant 1)
            :degree(e1 / equal)
            :domain a)))

#::snt - cậu làm cho ta thương hại , cậu thật yếu đuối , trên cái trái đất bằng đá hoa cương này .
(l / làm
    :agent(c / cậu)
    :topic(t1 / thương_hại
        :pivot(t / ta))
    :cause(y / yếu_đuối
        :degree(t2 / thật)
        :domain c
        :location(p / planet
            :prep(t3 / trên)
            :wiki(wz2 / Trái_Đất
                :classifier(c3 / cái)
                :consist-of(đ / đá_hoa_cương
                    :mod(n / này))
                :name(n1 / name
                    :op2(wz3 / Đất)
                    :op1(wz4 / Trái))))))

#::snt ta có thể giúp đỡ cậu một ngày nào đó nếu cậu nhớ tinh cầu của cậu .
(p / possible-01
    :theme(g / giúp_đỡ
        :agent(t / ta)
        :beneficiary-arg1(c1 / cậu)
        :time(n / ngày
            :mod(n1 / nào
                :mod(đ / đó))))
    :condition(n3 / nhớ
        :theme(t1 / tinh_cầu
            :poss c1)
        :pivot c1))

#::snt ta có thể ...
(p / possible-01
    :agent(t / ta))

#::snt - ồ ! tôi hiểu rồi , ông hoàng nhỏ nói .
(n1 / nói
    :topic(h / hiểu
        :mode expressive
        :pivot(t / tôi))
    :agent(ô / ông_hoàng
        :mod(n / nhỏ)))

#::snt nhưng tại sao anh lúc nào cũng nói bí hiểm thế ?
(c / contrast-01
    :ARG2(n2 / nói
        :agent(a / anh)
        :manner(b / bí_hiểm)
        :purpose(a1 / amr-unknown)
        :time(a2 / always)
        :mode interrogative))

#::snt - mọi điều bí hiểm , ta đều giải hết , rắn nói .
(n / nói
    :topic(g / giải
        :theme(đ / điều
            :mod(b / bí_hiểm))
        :agent(t / ta)
        :degree(h / hết))
    :agent(r / rắn))

#::snt và họ lặng thinh .
(a / and
    :op2(l / lặng_thinh
        :pivot(h / họ)))

#::snt ông hoàng nhỏ đi qua sa mạc và chỉ gặp có một bông hoa .
(a / and
    :op1(đ / đi
        :agent(ô / ông_hoàng
            :mod(n / nhỏ))
        :compound(q / qua)
        :location(s / sa_mạc))
    :op2(g / gặp
        :degree(c / chỉ)
        :goal(h / hoa
            :quant 1
                :classifier(b / bông))
        :agent ô))

#::snt một bông hoa chỉ ba cánh , một bông hoa chẳng là gì cả ...
(a / and
    :op1(c1 / cánh
        :domain(h / hoa
            :quant 1
                :classifier(b / bông))
        :mod(c / chỉ)
        :quant 3)
    :op2(g / gì
        :domain(h1 / hoa
            :quant 1
                :classifier(b2 / bông))
        :polarity -))

#::snt - chúc một ngày tốt lành , ông hoàng nhỏ nói .
(n2 / nói
    :topic(c / chúc
        :topic(n / ngày
            :mod(t / tốt_lành)
            :quant 1))
    :agent(ô / ông_hoàng
        :mod(n1 / nhỏ)))

#::snt - chúc một ngày tốt lành , bông hoa nói .
(n1 / nói
    :topic(c / chúc
        :topic(n / ngày
            :mod(t / tốt_lành)
            :quant 1))
    :agent(h / hoa
        :classifier(b / bông)))

#::snt - loài người ở đâu ?
(b / be-located-at-91
    :theme(l / loài_người)
    :location(a / amr-unknown)
    :mode interrogative)

#::snt ông hoàng nhỏ lễ phép hỏi .
(h1 / hỏi
    :agent(ô / ông
        :compound(h / hoàng)
        :mod(n / nhỏ))
    :manner(l / lễ_phép))

#::snt - người hả ? có loài ấy đấy .
(m / multi-sentence
    :snt1(n / người
        :mode interrogative)
    :snt2(c / có
        :theme(l / loài
            :mod(ấ / ấy))))

#::snt khoảng sáu hay bảy mống .
(m / mống
    :quant(k / khoảng
        :op1(o / or
            :op1 6
            :op2 7)))

#::snt em có nhìn thấy họ mấy năm trước kia .
(n / nhìn
    :agent(e / em)
    :compound(t / thấy)
    :theme(h / họ)
    :time(b / before
        :quant(m / mấy
            :op1(t1 / temporal-quantity
                :unit(n1 / năm)
                :quant 1))
        :op1(n11 / now)))

#::snt nhưng không ai biết tìm họ ở đâu .
(c / contrast-01
    :ARG2(b / biết
        :pivot(a / ai
            :polarity -)
        :topic(t / tìm
            :goal(h / họ)
            :location(a1 / amr-unknown)
            :agent a)))

#::snt gió thổi họ đi .
(t / thổi
    :theme(g / gió)
    :patient(h / họ)
    :direction(đ / đi))

#::snt họ chẳng có rễ , cái đó phiền cho họ lắm .
(a / and
    :op1(c1 / có
        :pivot(h / họ)
        :polarity -
        :theme(r / rễ))
    :op2(p / phiền
        :agent(c2 / cái
            :mod(đ / đó))
        :patient(h1 / họ)
        :degree(l / lắm)))

#::snt - từ biệt , ông hoàng nhỏ nói .
(n1 / nói
    :topic(t / từ_biệt)
    :agent(ô / ông_hoàng
        :mod(n / nhỏ)))

#::snt - từ biệt , đoá hoa nói .
(n / nói
    :topic(t / từ_biệt)
    :agent(h / hoa
        :classifier(đ / đoá)))

#::snt ông hoàng nhỏ trèo lên một quả núi cao .
(t / trèo
    :agent(ô / ông_hoàng
        :mod(n / nhỏ))
    :compound(l / lên)
    :location(n1 / núi
        :mod(c / cao)
        :quant 1
            :classifier(q / quả)))

#::snt trước đây những núi non duy nhất mà em biết chỉ là ba quả núi lửa cao ngang đầu gối em .
(n2 / núi_lửa
    :domain(n1 / núi_non
        :mod(d / duy_nhất)
        :domain-of(b / biết
            :pivot(e / em)
            :time(b1 / before)))
    :mod(c1 / cao
        :compared-to(đ1 / đầu_gối
            :part-of e)
        :degree(e1 / equal))
    :quant 3
        :classifier(q / quả))

#::snt và em đã dùng quả núi lửa đã tắt làm ghế ngồi .
(a / and
    :op2(d / dùng
        :agent(e / em)
        :tense(đ / đã)
        :theme(n / núi_lửa
            :classifier(q / quả)
            :agent-of(t / tắt
                :tense(đ1 / đã)))
        :purpose(l / làm
            :result-arg1(g / ghế
                :compound(n1 / ngồi)))))

#::snt nhưng em chỉ đã thấy có những mũi nhọn của các tảng đá nhọn hoắt .
(c1 / contrast-01
    :ARG2(t / thấy
        :agent(e / em)
        :degree(c / chỉ)
        :tense(đ / đã)
        :goal(m / mũi_nhọn
            :consist-of(đ1 / đá
                :classifier(t1 / tảng)
                :mod(n2 / nhọn_hoắt)))))

#::snt - chúc một ngày tốt lành , em nói bâng quơ .
(n1 / nói
    :topic(c / chúc
        :topic(n / ngày
            :mod(t / tốt_lành)
            :quant 1))
    :agent(e / em)
    :manner(b / bâng_quơ))

#::snt - chúc một ngày tốt lành !
(c / chúc
    :topic(n / ngày
        :mod(t / tốt_lành)
        :quant 1))

#::snt chúc một ngày tốt lành !
(c / chúc
    :topic(n / ngày
        :mod(t / tốt_lành)
        :quant 1))

#::snt chúc một ngày tốt lành !
(c / chúc
    :topic(n / ngày
        :mod(t / tốt_lành)
        :quant 1))

#::snt tiếng vang đáp lại .
(đ / đáp
    :theme(t / tiếng_vang)
    :manner(l / lại))

#::snt các anh là ai !
(a1 / amr-unknown
    :domain(a / anh)
    :mode interrogative)

#::snt ông hoàng nhỏ hỏi .
(h / hỏi
    :agent(ô / ông_hoàng
        :mod(n / nhỏ)))

#::snt - các anh là ai ?
(a1 / anh
    :mode interrogative
    :domain(a / amr-unknown))

#::snt các anh là ai !
(a1 / amr-unknown
    :domain(a / anh)
    :mode interrogative)

#::snt các anh là ai !
(a1 / amr-unknown
    :domain(a / anh)
    :mode interrogative)

#::snt tiếng vang đáp lại .
(đ / đáp
    :theme(t / tiếng_vang)
    :manner(l / lại))

#::snt - hãy làm bạn với tôi , tôi cô đơn lắm , em nói .
(n / nói
    :agent(e / em)
    :topic(a / and
        :op1(l / làm_bạn
            :accompanier(t / tôi)
            :mode imperative)
        :op2(c / cô_đơn
            :degree(l1 / lắm)
            :domain t)))

#::snt - tôi cô đơn lắm !
(c / cô_đơn
    :domain(t / tôi)
    :degree(l / lắm))

#::snt tôi cô đơn lắm !
(c / cô_đơn
    :domain(t / tôi)
    :degree(l / lắm))

#::snt tiếng vang đáp lại .
(đ / đáp
    :theme(t / tiếng_vang)
    :manner(l / lại))

#::snt " cái hành tinh này buồn cười thật !
(b / buồn_cười
    :domain(h / hành_tinh
        :classifier(c / cái)
        :mod(n / này)))

#::snt lúc đó em nghĩ thầm .
(n / nghĩ
    :time(l / lúc
        :mod(đ / đó))
    :pivot(e / em)
    :compound(t / thầm))

#::snt nó khô khốc , và nhọn hoắt và mặn chát .
(a / and
    :op1(k / khô_khốc
        :domain(n / nó))
    :op2(n1 / nhọn_hoắt
        :domain n)
    :op3(m / mặn
        :compound(c / chát)
        :domain n))

#::snt và những con người thì thiếu hẳn óc tưởng tượng .
(a /__and
    :op2(t1 / thiếu
        :domain(c / con_người)
        :degree(h / hẳn)
        :theme(ó / óc
            :mod(t2 / tưởng_tượng))))

#::snt Họ chỉ lặp lại những gì họ đã nghe ...
(l / lặp
    :agent(h / Họ)
    :degree(c / chỉ)
    :compound(l1 / lại)
    :theme(g / gì
        :theme-of(n1 / nghe
            :tense(đ / đã)
            :agent h)))

#::snt ở chỗ tôi có một bông hoa : nàng bao giờ cũng nói trước ! "
(c1 / có
    :location(c / chỗ
        :poss t)
    :pivot(t / tôi)
    :theme(h / hoa
        :agent-of(n1 / nói
            :time(a / aways)
            :ord(o / ordinal-entity
                :value 1))
        :quant 1
            :classifier(b / bông)))

#::snt nhưng ông hoàng nhỏ , sau khi đi rất lâu qua cát , đá và tuyết , cuối cùng cũng tìm thấy một con đường .
(c11 / contrast-01
    :ARG2(t1 / tìm
        :agent(ô / ông_hoàng
            :mod(n1 / nhỏ))
        :time(c1 / cuối_cùng)
        :compound(t2 / thấy)
        :theme(đ2 / đường
            :quant 1
                :classifier(c3 / con))
        :time(a1 / after
            :op1(đ / đi
                :manner(l / lâu
                    :degree(r / rất))
                :agent ô
                :path(a / and
                    :op1(c / cát)
                    :op2(đ1 / đá)
                    :op3(t / tuyết))))))

#::snt và mọi con đường đều đưa đến chỗ có người ở .
(a / and
    :op2(đ2 / đưa
        :theme(đ / đường
            :classifier(c / con))
        :compound(đ3 / đến)
        :location(c1 / chỗ
            :pivot-of(c2 / có
                :theme(n / người
                    :pivot-of(ở / ở))))))

#::snt - chúc một ngày tốt lành , em nói .
(n1 / nói
    :topic(c / chúc
        :topic(n / ngày
            :mod(t / tốt_lành)
            :quant 1))
    :agent(e / em))

#::snt ấy là một khu vườn đầy hoa hồng
(k / khu
    :domain(ấ / ấy)
    :mod(v / vườn)
    :mod(h / hoa_hồng
        :mod(đ / đầy)))

#::snt - chúc một ngày tốt lành , các hoa hồng trả lời .
(t1 / trả_lời
    :topic(c / chúc
        :topic(n / ngày
            :mod(t / tốt_lành)
            :quant 1))
    :agent(h / hoa_hồng))

#::snt ông hoàng nhỏ nhìn các hoa hồng .
(n1 / nhìn
    :agent(ô / ông_hoàng
        :mod(n / nhỏ))
    :goal(h / hoa_hồng))

#::snt tất cả bọn họ đều giống bông hoa của em .
(r / resemble-01
    :domain(h / họ
        :classifier(b / bọn)
        :mod(a / all))
    :degree(đ / đều)
    :compared-to(h1 / hoa
        :classifier(b1 / bông)
        :poss(e / em))
    :degree(e1 / equal))

#::snt - các nàng là ai ?
(a / amr-unknown
    :domain(n / nàng)
    :mode interrogative)

#::snt em hỏi họ , sững sờ kinh ngạc .
(h / hỏi
    :agent(e / em)
    :goal(h1 / họ)
    :manner(a / and
        :op1(s / sững_sờ
            :domain e)
        :op2(k / kinh_ngạc
            :pivot e)))

#::snt - chúng em là những đoá hoa hồng , các hoa hồng nói .
(n1 / nói
    :topic(h / hoa_hồng
        :classifier(đ / đoá)
        :domain h1)
    :agent(h1 / hoa_hồng))

#::snt - a ! ông hoàng nhỏ kêu lên .
(k / kêu
    :topic(a / a
        :mode expressive)
    :agent(ô / ông_hoàng
        :mod(n / nhỏ))
    :compound(l / lên))

#::snt và em cảm thấy rất đau khổ .
(a / and
    :op2(c / cảm
        :pivot(e / em)
        :compound(t / thấy)
        :manner(đ / đau_khổ
            :degree(r / rất))))

#::snt đoá hoa của em đã kể với em rằng nàng là duy nhất trong giống nòi của nàng khắp trong vũ trụ .
(k / kể
    :agent(h / hoa
        :classifier(đ / đoá)
        :poss(e / em))
    :tense(đ1 / đã)
    :goal(e1 / em)
    :topic(d / duy_nhất
        :domain(n / nàng)
        :consist-of(g / giống_nòi
            :location(v1 / vũ_trụ
                :mod(k1 / khắp))
            :poss n)))

#::snt và ở đây có đến năm nghìn đoá giống như nhau , chỉ mới trong mỗi một khu vườn .
(a / and
    :op2(c / có
        :location(đ / đây)
        :theme(đ2 / đoá
            :theme-of(r / resemble-01
                :compared-to(n2 / nhau)
                :degree(e / equal))
            :quant 5000)
        :location(k / khu
            :mod(c1 / chỉ)
            :compound(v1 / vườn)
            :quant 1)))

#::snt " nàng sẽ ngượng lắm đây , em nghĩ thầm , nếu thấy cảnh này .
(n2 / nghĩ
    :topic(n1 / ngượng
        :domain(n / nàng)
        :tense(s / sẽ)
        :degree(l / lắm)
        :condition(t1 / thấy
            :theme(c / cảnh
                :mod(n4 / này))
            :agent n))
    :pivot(e / em)
    :manner(t / thầm))

#::snt nàng sẽ ho rũ rượi và giả chết cho đỡ ngượng .
(a / and
    :op1(h / ho
        :agent(n / nàng)
        :tense(s / sẽ)
        :manner(r / rũ_rượi))
    :op2(g / giả
        :compound(c / chết)
        :purpose(đ / đỡ
            :manner(n1 / ngượng))
        :pivot n))

#::snt còn ta sẽ phải làm ra vẻ an ủi vỗ về nàng , nếu không , để làm chính ta cũng phải xấu hổ , nàng dám chết thật mất " .
(a / and
    :cause(d / dám
        :compound(c3 / chết)
        :pivot n
        :condition a2
            :purpose(l1 / làm
                :topic(x / xấu_hổ
                    :domain t)
                :agent n)
            :agent t
            :polarity -)
    :op2(wz7 / obligate-01
        :theme(l / làm
            :agent(t / ta)
            :tense(s / sẽ)
            :topic(a1 / and
                :op1(a2 / an_ủi
                    :patient(n / nàng)
                    :agent t)
                :op2(v / vỗ_về
                    :agent t
                    :patient n)))))

#::snt rồi em lại tự bảo : " ta tưởng ta đã giàu lắm với một đoá hoa duy nhất .
(b / bảo
    :agent(e / em)
    :topic(t2 / tưởng
        :topic(g / giàu
            :tense(đ / đã)
            :degree(l1 / lắm)
            :domain e
            :cause(wz2 / có
                :theme(h / hoa
                    :mod(d / duy_nhất)
                    :quant 1
                        :classifier(đ1 / đoá))
                :pivot e))
        :pivot e))

#::snt - giống như nước vậy .
(r / resemble-01
    :compared-to(n1 / nước)
    :degree(e / equal))

#::snt nước mà ông cho tôi uống như là âm nhạc , là vì cái ròng rọc và sợi dây .. ông nhớ chứ ... thật ngon lành .
(n2 / nhớ
    :topic(n3 / ngon_lành
        :degree(t1 / thật)
        :domain(r1 / resemble-01
            :domain(n / nước
                :agent-of(c / cho
                    :agent(ô / ông)
                    :beneficiary-arg1(t / tôi)
                    :purpose(u / uống
                        :agent t)))
            :compared-to(â / âm_nhạc)
            :degree(e / equal))
        :cause(a / and
            :op1(r / ròng_rọc
                :classifier(c1 / cái))
            :op2(d / dây
                :classifier(s / sợi))))
    :pivot ô)

#::snt - đúng thế ...
(đ / đúng)

#::snt - ban đêm , ông sẽ nhìn sao .
(n / nhìn
    :agent(ô / ông)
    :tense(s / sẽ)
    :goal(s1 / sao)
    :time(d / date-entity
        :dayperiod(b / ban_đêm)))

#::snt chỗ tôi bé quá không thể chỉ cho ông đâu là ngôi sao của tôi được .
(p / possible-01
    :cause(b / bé
        :domain(c / chỗ
            :poss(t / tôi))
        :degree(q / quá))
    :theme(c1 / chỉ
        :beneficiary(ô / ông)
        :topic(s / sao
            :domain(đ / đâu)
            :classifier(n / ngôi)
            :poss t)
        :agent t)
    :polarity -)

#::snt thế lại càng hay .
(h / hay
    :domain(t / thế)
    :degree(c / càng))

#::snt ngôi sao của tôi , đối với ông sẽ là một trong các ngôi sao kia ...
(s2 / sao
    :domain(s / sao
        :classifier(n / ngôi)
        :poss(t / tôi))
    :beneficiary(ô / ông)
    :classifier(n1 / ngôi)
    :mod(k / kia))

#::snt như thế , tất cả các ngôi sao , ông đều sẽ thích nhìn .
(a / and
    :op2(t2 / thích
        :domain(ô / ông)
        :tense(s1 / sẽ)
        :theme(n2 / nhìn
            :goal(s / sao
                :classifier(n1 / ngôi)
                :mod(a1 / all))
            :agent ô)))

#::snt tất cả chúng sẽ là bạn của ông .
(h / have-rel-role-91
    :ARG0(c / chúng
        :mod(a / all))
    :ARG2(b / bạn)
    :ARG1(ô / ông))

#::snt và rồi tôi sẽ biếu ông một món quà ...
(a / and
    :op1(b / biếu
        :agent(t / tôi)
        :tense(s / sẽ)
        :beneficiary-arg1(ô / ông)
        :theme(q / quà
            :quant 1
                :classifier(m1 / món))))

#::snt em lại cười thêm nữa .
(c / cười
    :agent(e / em)
    :manner(t / thêm))

#::snt - a !
(a / a
    :mode expressive)

#::snt em ơi , em ơi , tôi thích nghe em cười như thế này !
(a / and
    :op1(e / em
        :mode expressive)
    :op3(t1 / thích
        :pivot(t / tôi)
        :theme(n / nghe
            :topic(c / cười
                :agent e)
            :agent t))
    :op2 e
        :mode expressive)

#::snt - đúng đó là món quà tôi biếu ông ... giống như là nước vậy ...
(q / quà
    :domain(đ1 / đó)
    :classifier(m / món)
    :theme-of(b / biếu
        :agent(t / tôi)
        :beneficiary-arg1(ô / ông))
    :theme-of(r / resemble-01
        :compared-to(n1 / nước)
        :theme-of q
        :degree(e / equal)))

#::snt - em muốn nói sao ?
(m / muốn
    :pivot(e / em)
    :theme(n / nói
        :agent e
        :topic(a / amr-unknown)))

#::snt - mọi người có những ngôi sao không của ai giống ai .
(c / có
    :pivot(n / người)
    :theme(s / sao
        :classifier(n2 / ngôi))
    :manner(r / resemble-01
        :domain(a / ai
            :polarity -)
        :compared-to(a1 / ai)))

#::snt đối với một số ưa thích đi xa , các ngôi sao là những kẻ dẫn đường .
(k / kẻ
    :domain(s1 / sao
        :classifier(n / ngôi))
    :mod(d / dẫn
        :compound(đ2 / đường))
    :goal(p / person
        :pivot-of(ư / ưa_thích
            :theme(đ1 / đi
                :compound(x / xa)))))

#::snt đối với số khác , chúng chỉ là những đốm sáng nhỏ .
(đ1 / đốm
    :domain(c / chúng)
    :degree(c1 / chỉ)
    :compound(s1 / sáng)
    :mod(n1 / nhỏ)
    :goal(p / person
        :mod(k / khác)))

#::snt đối với những nhà bác học , chúng là những bài toán .
(b1 / bài_toán
    :goal(n1 / nhà
        :compound(b / bác_học))
    :domain(c / chúng))

#::snt đối với nhà doanh nghiệp của tôi , chúng là vàng .
(v / vàng
    :goal(n / nhà
        :compound(d / doanh_nghiệp)
        :poss(t / tôi))
    :domain(c1 / chúng))

#::snt nhưng tất cả loại ngôi sao ấy đều câm lặng .
(c1 / contrast-01
    :ARG2(c / câm_lặng
        :domain(l / loại
            :mod(s / sao
                :classifier(n1 / ngôi)
                :mod(ấ / ấy))
            :mod(a / all))))

#::snt ông , ông sẽ có những ngôi sao trước đây không ai có ...
(c / có
    :pivot(ô1 / ông)
    :tense(s / sẽ)
    :theme(s1 / sao
        :classifier(n1 / ngôi)
        :pivot-of(r / resemble-01
            :theme(c1 / có
                :pivot(a / ai
                    :polarity -)
                :time(b / before)))))

#::snt - em muốn nói sao ?
(m / muốn
    :pivot(e / em)
    :theme(n / nói
        :agent e
        :topic(a / amr-unknown)))

#::snt - khi ông nhìn trời , ban đêm , bởi vì ở một trong những ngôi sao đó có tôi ở , bởi vì tôi cười trên một trong những ngôi sao đó , cho nên đối với ông tưởng chừng như tất cả các ngôi sao đều cười .
(t6 / tưởng_chừng
    :time(n / nhìn
        :agent(ô / ông)
        :goal(t / trời)
        :time(d / date-entity
            :dayperiod(b / ban_đêm)))
    :topic(c4 / cười
        :agent(s2 / sao
            :classifier(n6 / ngôi)
            :mod(a / all)))
    :reason(a1 / and
        :op1(s / sao
            :classifier(n2 / ngôi)
            :mod(đ / đó)
            :pivot-of(ở1 / ở
                :pivot(t2 / tôi)))
        :op2(c1 / cười
            :location(s1 / sao
                :prep(t4 / trên)
                :classifier(n4 / ngôi)
                :mod(đ1 / đó))
            :agent t))
    :pivot ô)

#::snt ông , ông sẽ có được những ngôi sao biết cười .
(c / có
    :pivot(ô1 / ông)
    :tense(s / sẽ)
    :theme(s1 / sao
        :classifier(n1 / ngôi)
        :pivot-of(b / biết
            :compound(c1 / cười))))

#::snt rồi em lại cười nữa .
(a / and
    :op2(c / cười
        :agent(e / em)))

#::snt - và khi ông đã nguôi rồi ( người ta bao giờ cũng nguôi đi ) , ông sẽ bằng lòng đã từng được quen biết tôi .
(a / and
    :op2(b1 / bằng_lòng
        :time(n / nguôi
            :pivot(ô / ông)
            :tense(đ / đã)
            :pivot-of(n2 / nguôi
                :pivot(n1 / người_ta)
                :time(a1 / always)))
        :tense(s / sẽ)
        :result-arg1(q / quen_biết
            :tense(đ2 / đã)
            :modality(đ3 / được)
            :theme(t1 / tôi)
            :pivot ô)
        :pivot ô))

#::snt ông mãi mãi là bạn tôi .
(h / have-rel-role-91
    :ARG0(ô / ông)
    :ARG2(b / bạn)
    :ARG1(t / tôi)
    :time(a / always))

#::snt rồi đôi khi ông mở cửa sổ nhà ông , như thế đấy , để cho vui thôi ...
(a / and
    :op1(m / mở
        :agent(ô / ông)
        :patient(c / cửa_sổ
            :part-of(n / nhà
                :poss(ô1 / ông)))
        :purpose(v / vui)
        :time(s / sometimes)))

#::snt bạn hữu của ông sẽ lấy làm lạ khi thấy ông vừa nhìn trời vừa cười .
(l / lấy_làm
    :compound(l1 / lạ)
    :time(t / thấy
        :topic(a / and
            :op1(n / nhìn
                :goal(t1 / trời)
                :agent ô)
            :op2(c1 / cười
                :agent ô))
        :agent b)
    :pivot(p / person
        :pivot-of(h / have-org-role-91
            :ARG2(b / bạn_hữu)
            :ARG1(ô / ông))))

#::snt ông sẽ bảo họ : " phải , các ngôi sao , lúc nào chúng cũng làm cho mình cười ! " .
(b / bảo
    :agent(ô / ông)
    :tense(s / sẽ)
    :goal(h / họ)
    :topic(a / and
        :op1(p / phải)
        :op2(l1 / làm
            :agent(s1 / sao
                :classifier(n / ngôi))
            :topic(c4 / cười
                :agent ô)
            :time(a1 / always))))

#::snt và họ sẽ tưởng ông điên .
(a / and
    :op2(t / tưởng
        :agent(h / họ)
        :tense(s / sẽ)
        :topic(đ / điên
            :domain(ô / ông))))

#::snt hoá ra tôi chơi khăm ông một vố ...
(c / chơi_khăm
    :agent(t / tôi)
    :patient(ô / ông)
    :theme(v / vố
        :quant 1))

#::snt rồi em lại cười nữa .
(a / and
    :op2(c / cười
        :agent(e / em)))

#::snt - xem như tôi đã tặng ông , thay vì những ngôi sao , hàng đống những cái chuông nhỏ biết cười ...
(r / resemble-01
    :topic(t1 / tặng
        :agent(t / tôi)
        :tense(đ / đã)
        :beneficiary-arg1(ô / ông)
        :theme(c1 / chuông
            :quant(đ1 / đống
                :mod(h / hàng)
                :classifier(c / cái))
            :mod(n4 / nhỏ)
            :pivot-of(b / biết
                :theme(c2 / cười)))
        :purpose(i / instead-of-91
            :ARG2 t1
                :theme(s / sao
                    :classifier(n2 / ngôi))
                :beneficiary-arg1 ô
                :agent t)))

#::snt rồi em lại cười nữa .
(a / and
    :op2(c / cười
        :agent(e / em)))

#::snt và em trở lại nghiêm nghị :
(a / and
    :op2(t / trở_lại
        :pivot(e / em)
        :manner(n / nghiêm_nghị)))

#::snt - đêm nay ... ông biết đấy ... đừng đến làm gì .
(b / biết
    :pivot(ô / ông)
    :topic(đ3 / đến
        :agent ô
        :mode imperative
        :polarity -)
    :time(d / date-entity
        :dayperiod(đ / đêm
            :mod(n / nay))))

#::snt - tôi sẽ không rời em đâu .
(r / rời
    :agent(t / tôi)
    :tense(s / sẽ)
    :source(e / em)
    :polarity -)

#::snt - tôi sẽ có vẻ như đau ...
(đ / đau
    :domain(t / tôi)
    :tense(s / sẽ))

#::snt tôi sẽ có vẻ sắp chết .
(c1 / chết
    :pivot(t / tôi)
    :tense(s / sẽ)
    :tense(s1 / sắp))

#::snt thế thôi mà !
(t / thế
    :mode expressive)

#::snt ông đừng đến chứng kiến cảnh đó , không đáng gì đâu ...
(đ1 / đến
    :agent(ô / ông)
    :purpose(c / chứng_kiến
        :theme(c1 / cảnh
            :mod(đ2 / đó))
        :agent ô)
    :reason(đ3 / đáng
        :polarity -
        :theme c1)
    :mode imperative)

#::snt - tôi sẽ không rời em .
(r / rời
    :agent(t / tôi)
    :tense(s / sẽ)
    :source(e / em)
    :polarity -)

#::snt nhưng em có vẻ lo lắng .
(c / contrast-01
    :ARG2(l / lo_lắng
        :pivot(e / em)))

#::snt - tôi nói với ông ... là tại vì con rắn đây .
(n / nói
    :agent(t / tôi)
    :goal(ô / ông)
    :topic(c1 / cause-01
        :theme(r / rắn
            :classifier(c / con)
            :mod(đ / đây))))

#::snt chớ để rắn nó cắn ông .
(o / obligate-01
    :theme(c1 / cắn
        :agent(r / rắn)
        :patient(ô / ông))
    :mode imperative
    :polarity -)

#::snt loài rắn , chúng ác lắm .
(á / ác
    :domain(l / loài
        :compound(r / rắn))
    :degree(l1 / lắm))

#::snt chúng có thể cắn để mà chơi ...
(p / possible-01
    :theme(c2 / cắn
        :agent(c / chúng)
        :purpose(c3 / chơi)))

#::snt - tôi sẽ không rời em .
(r / rời
    :agent(t / tôi)
    :tense(s / sẽ)
    :source(e / em)
    :polarity -)

#::snt nhưng có cái gì đó làm em yên tâm :
(c2 / contrast-01
    :ARG2(c / có
        :theme(g / gì
            :classifier(c1 / cái)
            :mod(đ / đó)
            :domain-of(l / làm
                :topic(y / yên_tâm
                    :domain(e / em))))))

#::snt - nhưng đúng là nó sẽ không còn nọc cho lần cắn thứ hai ...
(c3 / contrast-01
    :ARG2(đ / đúng
        :topic(c / còn
            :pivot(n1 / nó)
            :theme(n2 / nọc
                :purpose(c2 / cắn
                    :ord(o / ordinal-entity
                        :value 2)))
            :polarity -)))

#::snt đêm ấy , tôi không trông thấy em bỏ đi .
(t1 / trông
    :agent(t / tôi)
    :polarity -
    :compound(t2 / thấy)
    :topic(b / bỏ
        :agent(e / em)
        :compound(đ1 / đi))
    :time(d / date-entity
        :dayperiod(đ / đêm
            :mod(ấ / ấy))))

#::snt em đã trốn đi không một tiếng động .
(t / trốn
    :agent(e / em)
    :tense(đ / đã)
    :compound(đ1 / đi)
    :manner(t1 / tiếng_động
        :polarity -))

#::snt khi tôi đuổi kịp em , em bước quả quyết thật nhanh .
(đ / đuổi
    :agent(t / tôi)
    :manner(k1 / kịp)
    :goal(e / em)
    :time(b / bước
        :agent(e1 / em)
        :manner(q / quả_quyết)
        :manner(n / nhanh)))

#::snt em chỉ nói với tôi :
(n / nói
    :agent(e / em)
    :degree(c / chỉ)
    :goal(t / tôi))

#::snt ông lại đến đây rồi ...
(đ / đến
    :agent(ô / ông)
    :location(đ1 / đây))

#::snt rồi em nắm tay tôi .
(a / and
    :op2(n / nắm
        :agent(e / em)
        :theme(t / tay
            :part-of(t1 / tôi))))

#::snt nhưng em lại dằn vặt nữa :
(c / contrast-01
    :ARG2(d / dằn_vặt
        :pivot(e / em)))

#::snt - ông không đúng .
(đ / đúng
    :domain(ô / ông)
    :polarity -)

#::snt ông sẽ khổ cho xem .
(k / khổ
    :domain(ô / ông)
    :tense(s / sẽ))

#::snt tôi sẽ có vẻ chết nhưng không phải là thật đâu ...
(c2 / contrast-01
    :ARG1(c1 / chết
        :pivot(t / tôi)
        :tense(s / sẽ))
    :ARG2(t1 / thật
        :ARG2(p / phải
            :polarity -)))

#::snt tôi , tôi im lặng .
(i / im_lặng
    :domain(t1 / tôi))

#::snt - ông biết đấy ...
(b / biết
    :pivot(ô / ông))

#::snt đường xa lắm ! tôi không mang nổi cái thân xác này .
(m1 / multi-sentence
    :snt1(x / xa
        :domain(đ / đường)
        :degree(l / lắm)
        :mode expressive)
    :snt2(m / mang
        :agent(t / tôi)
        :manner(n / nổi)
        :theme(t1 / thân_xác
            :classifier(c / cái)
            :mod(n1 / này))
        :polarity -))

#::snt nặng lắm .
(n / nặng
    :degree(l / lắm))

#::snt tôi , tôi im lặng .
(i / im_lặng
    :domain(t1 / tôi))

#::snt - nhưng nó cũng sẽ chỉ như cái vỏ già bỏ lại .
(c / contrast-01
    :ARG2(r / resemble-01
        :theme(n1 / nó)
        :tense(s / sẽ)
        :degree(c1 / chỉ)
        :compared-to(v / vỏ
            :classifier(c2 / cái)
            :mod(g / già)
            :patient-of(b / bỏ
                :compound(l / lại)))))

#::snt những cái vỏ già thì có gì đáng buồn ...
(đ / đáng
    :theme(v / vỏ
        :classifier(c / cái)
        :mod(g / già))
    :compound(b / buồn)
    :polarity -)

#::snt tôi , tôi im lặng .
(i / im_lặng
    :domain(t1 / tôi))

#::snt em có hơi nản .
(n / nản
    :pivot(e / em)
    :degree(h / hơi))

#::snt nhưng em gắng thêm một lần nữa :
(c / contrast-01
    :ARG2(g / gắng
        :agent(e / em)
        :degree(t / thêm)
        :mod(m / more
            :quant 1)))

#::snt - sẽ hay lắm chứ , ông biết đấy .
(b / biết
    :topic(h / hay
        :tense(s / sẽ)
        :degree(l / lắm))
    :pivot(ô / ông))

#::snt tôi cũng sẽ nhìn các ngôi sao .
(n / nhìn
    :agent(t / tôi)
    :tense(s / sẽ)
    :goal(s1 / sao
        :classifier(n1 / ngôi)))

#::snt các ngôi sao sẽ là những cái giếng với một cái ròng rọc han rỉ .
(g / giếng
    :domain(s / sao
        :classifier(n / ngôi))
    :tense(s1 / sẽ)
    :classifier(c1 / cái)
    :pivot-of(c / có
        :theme(r / ròng_rọc
            :classifier(c2 / cái)
            :mod(h / han
                :compound(r1 / rỉ)))
        :pivot g))

#::snt tất cả mọi ngôi sao sẽ rót cho tôi uống ...
(r / rót
    :agent(s / sao
        :classifier(n / ngôi)
        :mod(a / all))
    :tense(s1 / sẽ)
    :purpose(u / uống
        :agent(t1 / tôi)))

#::snt tôi , tôi im lặng .
(i / im_lặng
    :domain(t1 / tôi))

#::snt - sẽ thật buồn cười !
(b / buồn_cười
    :tense(s / sẽ)
    :degree(t / thật))

#::snt ông sẽ có năm trăm triệu chiếc chuông , còn tôi , năm trăm triệu nguồn nước ...
(a / and
    :op1(c / có
        :pivot(ô / ông)
        :tense(s / sẽ)
        :theme(c2 / chuông
            :quant 500000000
                :classifier(c1 / chiếc)))
    :op2 c
        :pivot(t / tôi)
        :theme(n2 / nguồn
            :mod(n3 / nước)
            :quant 500000000))

#::snt và em cũng im luôn , bởi vì em khóc ...
(a / and
    :op2(i / im
        :domain(e / em)
        :reason(k / khóc
            :agent(e1 / em))))

#::snt - đây rồi .
(đ / đây)

#::snt ông để tôi bước một mình thôi .
(a / allow-01
    :agent(ô / ông)
    :theme(b / bước
        :agent(t / tôi)
        :manner(m / một_mình)))

#::snt và em ngồi xuống vì sợ .
(a / and
    :op2(n / ngồi
        :agent(e / em)
        :compound(x / xuống)
        :reason(s / sợ
            :pivot e)))

#::snt em lại nói nữa :
(n / nói
    :agent(e / em))

#::snt - ông biết đấy ... đoá hoa của tôi ...
(b / biết
    :pivot(ô / ông)
    :theme(h / hoa
        :classifier(đ1 / đoá)
        :poss(t / tôi)))

#::snt tôi phải có trách nhiệm !
(o / obligate-01
    :topic(c / có
        :pivot(t / tôi)
        :theme(t1 / trách_nhiệm)))

#::snt nàng thật là yếu đuối !
(y / yếu_đuối
    :domain(n / nàng)
    :degree(t / thật))

#::snt nàng thật ngây thơ !
(n1 / ngây_thơ
    :domain(n / nàng)
    :degree(t / thật))

#::snt nàng chỉ có bốn cái gai chẳng thấm vào đâu để mà chống chọi trên đời ...
(c1 / có
    :pivot(n / nàng)
    :degree(c / chỉ)
    :theme(g / gai
        :theme-of(t / thấm
            :polarity -)
        :quant 4
            :classifier(c2 / cái))
    :purpose(c4 / chống_chọi
        :theme(đ2 / đời)
        :agent n
        :instrument g))

#::snt tôi ngồi xuống vì không thể giữ mình đứng được nữa .
(n / ngồi
    :agent(t / tôi)
    :compound(x / xuống)
    :reason(p / possible-01
        :theme(g / giữ_mình
            :purpose(đ / đứng)
            :agent t)
        :polarity -))

#::snt em nói :
(n / nói
    :agent(e / em))

#::snt - kia rồi ... chỉ có thế thôi ...
(a / and
    :op1(k / kia)
    :op2(c1 / có
        :degree(c / chỉ)
        :theme(t / thế)))

#::snt em lưỡng lự một chút , rồi đứng lên .
(m1 / multi-sentence
    :snt1(l / lưỡng_lự
        :pivot(e / em)
        :degree(m / một_chút))
    :snt2(đ / đứng
        :compound(l1 / lên)
        :time(t / then)
        :agent e))

#::snt em bước một bước .
(b / bước
    :agent(e / em))

#::snt còn tôi , tôi không thể nào cử động được .
(p / possible-01
    :theme(c1 / cử_động
        :agent(t1 / tôi))
    :polarity -)

#::snt chỉ có một loáng chớp màu vàng gần bên mắt cá chân em .
(c1 / có
    :degree(c / chỉ)
    :theme(l / loáng
        :compound(c2 / chớp)
        :mod(m1 / màu
            :mod(v / vàng))
        :location(b / bên
            :mod(g / gần)
            :mod(m2 / mắt_cá
                :compound(c3 / chân)
                :part-of(e / em)))
        :quant 1))

#::snt em đứng một lúc không động đậy .
(đ / đứng
    :pivot(e / em)
    :duration(l / lúc
        :mod(m / một))
    :manner(đ1 / động_đậy
        :polarity -))

#::snt em không kêu .
(k1 / kêu
    :agent(e / em)
    :polarity -)

#::snt em ngã xuống nhẹ nhàng như một cái cây .
(n / ngã
    :patient(e / em)
    :compound(x / xuống)
    :manner(n1 / nhẹ_nhàng
        :compared-to(c1 / cây
            :quant 1
                :classifier(c / cái))
        :degree(e1 / equal)))

#::snt cả một tiếng động cũng không có , là bởi vì cát .
(c2 / có
    :theme(t / tiếng_động
        :quant 1)
    :cause(c3 / cát)
    :polarity -)

#::snt và giờ đây , đúng vậy , sáu năm đã trôi qua ... tôi chưa bao giờ kể lại câu chuyện này .
(a / and
    :op2(t / trôi
        :pivot(n / năm
            :quant 6)
        :tense(đ1 / đã)
        :compound(q / qua)
        :time(n11 / now))
    :op2(k / kể
        :agent(t1 / tôi)
        :compound(l / lại)
        :theme(c1 / câu_chuyện
            :mod(n1 / này))
        :polarity -
        :time(e / ever)))

#::snt những bạn bè gặp lại tôi rất lấy làm hài lòng thấy tôi còn sống .
(l1 / lấy_làm
    :pivot(b / bạn_bè
        :agent-of(g / gặp
            :compound(l / lại)
            :goal(t / tôi)))
    :degree(r / rất)
    :manner(h / hài_lòng)
    :cause(t1 / thấy
        :topic(s / sống
            :pivot t)
        :pivot b))

#::snt tôi đã rất buồn , nhưng tôi nói với họ : đó là vì mệt ...
(c / contrast-01
    :ARG1(b / buồn
        :pivot(t / tôi)
        :tense(đ / đã)
        :degree(r / rất))
    :ARG2(n1 / nói
        :goal(h / họ)
        :topic(m / mệt
            :domain t)
        :agent t))

#::snt bây giờ tôi đã nguôi nguôi .
(n / nguôi_nguôi
    :pivot(t / tôi)
    :tense(đ / đã)
    :time(n1 / now))

#::snt nghĩa là ... không hẳn là như thế .
(n / nghĩa_là
    :topic(h / hẳn
        :compared-to(t / thế)
        :polarity -))

#::snt nhưng tôi biết em đã trở về tinh cầu của mình , vì sáng sớm hôm sau , tôi đã không tìm thấy thân xác em .
(c / contrast-01
    :ARG2(b / biết
        :pivot(t / tôi)
        :topic(t1 / trở
            :agent(e / em)
            :tense(đ / đã)
            :compound(v / về)
            :location(t2 / tinh_cầu
                :poss e))
        :reason(t4 / tìm
            :time(s / sáng
                :mod(s1 / sớm)
                :mod(h / hôm
                    :mod(s2 / sau)))
            :tense(đ1 / đã)
            :polarity -
            :manner(t5 / thấy)
            :theme(t6 / thân_xác
                :poss e)
            :agent t)))

#::snt cái thân xác chẳng nặng nề gì mấy ...
(n / nặng_nề
    :theme(t / thân_xác
        :classifier(c / cái))
    :polarity -)

#::snt và ban đêm , tôi thích lắng nghe các ngôi sao .
(a / and
    :op2(t1 / thích
        :pivot(t / tôi)
        :theme(l / lắng_nghe
            :theme(s / sao
                :classifier(n / ngôi))
            :agent t
            :time(d / date-entity
                :dayperiod(b / ban_đêm)))))

#::snt chúng như năm trăm triệu cái chuông nhỏ ...
(r / resemble-01
    :theme(c / chúng)
    :compared-to(c2 / chuông
        :mod(n2 / nhỏ)
        :quant 500000000
            :classifier(c1 / cái)))

#::snt nhưng có xảy ra một điều gì đó không bình thường .
(c1 / contrast-01
    :ARG2(x / xảy
        :compound(r / ra)
        :theme(đ / điều
            :mod(g / gì
                :mod(đ1 / đó))
            :theme-of(b / bình_thường
                :polarity -))))

#::snt chiếc rọ mõm tôi đã vẽ cho ông hoàng nhỏ , tôi đã quên vẽ thêm cái đai da .
(q / quên
    :theme(r / rọ_mõm
        :classifier(c / chiếc)
        :patient-of(v / vẽ
            :agent(t / tôi)
            :tense(đ / đã)
            :beneficiary(ô / ông_hoàng
                :mod(n / nhỏ))))
    :tense(đ1 / đã)
    :topic(v1 / vẽ
        :compound(t2 / thêm)
        :patient(đ2 / đai
            :classifier(c2 / cái)
            :consist-of(d / da)))
    :pivot t)

#::snt khi thì tôi tự nhủ : " chắc là không !
(t2 / tự_nhủ
    :pivot(t1 / tôi)
    :topic(c / chắc
        :polarity -)
    :time(s / sometimes))

#::snt ông hoàng nhỏ đêm nào cũng đậy hoa trong cái bầu kính , và em cũng trông chừng con cừu cẩn thận . "
(a / and
    :op1(đ1 / đậy
        :agent(ô / ông_hoàng
            :mod(n / nhỏ))
        :patient(h / hoa)
        :location(b / bầu
            :prep(t / trong)
            :classifier(c1 / cái)
            :consist-of(k / kính))
        :time(r / rate-entity-91
            :ARG2(đ / đêm
                :mod(n1 / nào))))
    :op2(t1 / trông_chừng
        :theme(c4 / cừu
            :classifier(c3 / con))
        :manner(c5 / cẩn_thận)
        :agent ô))

#::snt thế là tôi vui sướng .
(v / vui_sướng
    :pivot(t1 / tôi))

#::snt và tất cả các ngôi sao mỉm cười dịu dàng .
(a / and
    :op2(m / mỉm
        :agent(s / sao
            :classifier(n / ngôi)
            :mod(a1 / all))
        :compound(c1 / cười)
        :manner(d / dịu_dàng)))

#::snt khi thì tôi tự nhủ : " thế nào chẳng có lúc người ta lơ đãng , và thế là đủ !
(t2 / tự_nhủ
    :pivot(t1 / tôi)
    :time(s / sometimes)
    :topic(a / and
        :op1(l1 / lơ_đãng
            :pivot(n / người_ta))
        :op2(t4 / thế_là
            :mod(đ / đủ))))

#::snt em đã quên mất , một đêm nào đó , cái bầu kính , hoặc con cừu lẻn ra không một tiếng động trong đêm ... "
(o / or
    :op1(q / quên
        :pivot(e / em)
        :tense(đ / đã)
        :theme(b / bầu
            :classifier(c / cái)
            :consist-of(k / kính)))
    :op2(l / lẻn
        :agent(c2 / cừu
            :classifier(c1 / con))
        :compound(r / ra)
        :manner(t / tiếng_động
            :quant 1
            :polarity -
            :time(d1 / date-entity
                :dayperiod(đ3 / đêm))))
    :time(d2 / date-entity
        :dayperiod(đ1 / đêm)
        :mod(n / nào
            :mod(đ2 / đó))))

#::snt thế là những cái chuông nhỏ đều biến thành nước mắt ! ...
(a / and
    :op2(b / biến
        :patient(c1 / chuông
            :classifier(c / cái)
            :mod(n1 / nhỏ))
        :compound(t1 / thành)
        :result-arg1(n2 / nước_mắt)))

#::snt đó là một bí ẩn lớn lao .
(b / bí_ẩn
    :domain(đ / đó)
    :mod(l1 / lớn_lao))

#::snt với bạn , là người cũng yêu ông hoàng bé nhỏ , cũng như với tôi , cả vũ trụ này sẽ chẳng còn như cũ nếu như ở đâu đó , không biết ở đâu , một con cừu mà ta không biết , đã có hay là không ăn một đoá hoa hồng ...
(c4 / còn
    :domain(v2 / vũ_trụ
        :mod(a / all))
    :compared-to(c5 / cũ)
    :condition(ă / ăn
        :location(đ / đâu_đó
            :location-of(b3 / biết
                :location(đ1 / đâu
                    :prep(ở1 / ở))
                :pivot t1
                :polarity -))
        :agent(c7 / cừu
            :pivot-of(b2 / biết
                :pivot(t1 / ta)
                :polarity -)
            :quant 1
                :classifier(c6 / con))
        :theme(h1 / hoa_hồng
            :quant 1
                :classifier(đ3 / đoá))
        :mode interrogative)
    :goal(a1 / and
        :op1(n / người
            :domain(b / bạn)
            :pivot-of(y / yêu
                :goal(ô / ông_hoàng
                    :mod(b1 / bé_nhỏ))))
        :op2(t / tôi))
    :degree(e / equal)
    :polarity -
        :tense(s / sẽ))

#::snt hãy nhìn lên trời .
(n / nhìn
    :direction(l / lên)
    :location(t / trời)
    :mode imperative)

#::snt hãy tự hỏi : con cừu đã có ăn hay không ăn đoá hoa ?
(h1 / hỏi
    :mode imperative
    :topic(o / or
        :op1(ă / ăn
            :agent(c1 / cừu
                :classifier(c / con))
            :tense(đ / đã)
            :patient h3)
        :op2(ă1 / ăn
            :patient(h3 / hoa
                :classifier(đ1 / đoá))
            :polarity -)
        :mode interrogative))

#::snt và bạn sẽ thấy tất cả đều thay đổi ...
(a / and
    :op2(t / thấy
        :pivot(b / bạn)
        :tense(s / sẽ)
        :topic(t2 / thay_đổi
            :domain(t1 / tất_cả))))

#::snt và không một người lớn nào lại hiểu được chuyện ấy quan trọng đến nhường nào .
(a / and
    :op2(h / hiểu
        :pivot(n / người_lớn
            :polarity -
            :mod(n1 / nào))
        :topic(q / quan_trọng
            :domain(c / chuyện
                :mod(ấ / ấy))
            :degree(n2 / nhường
                :compound(n3 / nào)))))

#::snt thế là , theo sự chỉ dẫn của ông hoàng nhỏ , tôi đã vẽ tinh cầu đó .
(v / vẽ
    :manner(t1 / theo
        :source(c / chỉ_dẫn
            :classifier(s / sự)
            :poss(ô / ông_hoàng
                :mod(n / nhỏ))))
    :agent(t2 / tôi)
    :tense(đ / đã)
    :theme(t3 / tinh_cầu
        :mod(đ1 / đó)))

#::snt tôi tuyệt không thích lên mặt dạy đời .
(t2 / thích
    :pivot(t / tôi)
    :polarity -
        :degree(t1 / tuyệt)
    :theme(l / lên_mặt
        :purpose(d / dạy_đời)))

#::snt nhưng cái hoạ baobab còn ít người biết quá , mà những nguy hiểm mà một cậu bé một mai lạc vào một tiểu tinh cầu sẽ gặp phải thì rất là đáng kể , cho nên , chỉ một lần thôi , tôi làm khác với nguyên tắc của tôi .
(c3 / contrast-01
    :ARG2(l3 / làm
        :frequency(l2 / lần
            :degree(c4 / chỉ)
            :quant 1)
        :agent(t3 / tôi)
        :manner(k / khác
            :topic(n4 / nguyên_tắc
                :poss(t4 / tôi)))
        :cause(a / and
            :op1(b1 / biết
                :theme(h / hoạ
                    :classifier(c / cái)
                    :mod(b / baobab))
                :pivot(n1 / người
                    :degree(í / ít))
                :degree(q / quá))
            :op2(đ / đáng_kể
                :theme(n3 / nguy_hiểm
                    :agent-of(g / gặp
                        :agent-of(l / lạc
                            :agent(b2 / bé
                                :quant 1
                                    :classifier(c2 / cậu))
                            :time(m3 / một_mai)
                            :compound(v / vào)
                            :location(t / tiểu_tinh_cầu
                                :quant 1))
                        :tense(s / sẽ)
                        :compound(p / phải)))
                :degree(r / rất)))))

#::snt tôi xin nói : " hỡi các em ! hãy coi chừng bọn baobab ! " ấy chính là để báo trước cho các bạn tôi về một nguy cơ mà các bạn cũng như tôi vẫn gần kề bên nó mà không hay biết , nên tôi ra sức thật nhiều để vẽ bức vẽ đó !
(n / nói
    :agent(t / tôi)
    :manner(x / xin)
    :topic(a / and
        :op1(e / em
            :mode expressive)
        :op2(c1 / coi_chừng
            :mode imperative
            :theme(b1 / baobab
                :classifier(b / bọn)))
        :op3(c / cause
            :cause(ấ / ấy
                :purpose(b2 / báo
                    :manner(t1 / trước)
                    :about(n1 / nguy_cơ
                        :agent-of(k / kề
                            :manner(g / gần)
                            :location(b5 / bên
                                :mod(n3 / nó))
                            :agent-of(h2 / hay_biết
                                :agent(b4 / bạn
                                    :source(t3 / tôi))
                                :polarity -))
                        :quant 1)
                    :goal(a1 / goal
                        :op1(p / person
                            :goal-of(h11 / have-rel-role-91
                                :goal(b3 / bạn)
                                :accompanier(t2 / tôi))))))
            :theme(r / ra_sức
                :agent(t4 / tôi)
                :manner(n5 / nhiều
                    :degree(t5 / thật))
                :purpose(v2 / vẽ
                    :result-arg1(b6 / bức
                        :compound(v3 / vẽ)
                        :mod(đ2 / đó)))))))

#::snt bài học mà tôi đưa ra rất xứng công .
(x / xứng
    :domain(b / bài
        :mod(h / học)
        :agent-of(đ / đưa
            :agent(t / tôi)
            :compound(r / ra)))
    :degree(r1 / rất)
    :theme(c / công))

#::snt có lẽ bạn sẽ tự hỏi : tại sao trong cuốn sách này không có bức vẽ nào to lớn bằng bức vẽ những cây baobab ?
(p / possible-01
    :ARG1(h / hỏi
        :agent(b / bạn)
        :tense(s / sẽ)
        :topic(c2 / có
            :location(s2 / sách
                :classifier(c1 / cuốn)
                :mod(n / này))
            :polarity -
            :theme(t3 / to_lớn
                :domain(v / vẽ
                    :classifier(b1 / bức)
                    :mod(n1 / nào))
                :compared-to(v1 / vẽ
                    :classifier(b3 / bức)
                    :about(b4 / baobab
                        :classifier(c3 / cây)))
                :degree(e / equal))
            :cause(w1 / amr-unknown))))

#::snt câu trả lời đơn giản thôi : tôi có thử vẽ nhưng không thành .
(đ / đơn_giản
    :domain(c / câu
        :compound(t / trả_lời))
    :topic(c2 / contrast-01
        :ARG1(t3 / thử
            :agent(t2 / tôi)
            :theme(v / vẽ))
        :ARG2(t4 / thành
            :polarity -)))

#::snt khi vẽ cây baobab , tôi bị thôi thúc bởi một tình cảm cấp bách .
(t1 / thôi_thúc
    :time(v / vẽ
        :result-arg1(b / baobab
            :classifier(c / cây)))
    :patient(t / tôi)
    :modality(b1 / bị)
    :reason(t2 / tình_cảm
        :mod(c1 / cấp_bách)
        :quant 1))

#::snt ôi !
(ô / ôi
    :mode expressive)

#::snt ông hoàng bé nhỏ ơi , dần dà , như vậy đó , tôi hiểu ra cuộc đời nhỏ nhoi buồn bã của em .
(w1 / multi-sentence
    :snt1(ơ / ơi
        :pivot(ô / ông_hoàng
            :mod(b / bé_nhỏ))
        :mode expressive)
    :snt2(h / hiểu
        :manner(d / dần_dà)
        :pivot(t / tôi)
        :compound(r / ra)
        :theme(c / cuộc_đời
            :poss(e / em)
            :mod(w2 / and
                :op1(n1 / nhỏ_nhoi)
                :op2(b1 / buồn_bã)))))

#::snt bao lâu nay em chỉ nhờ sự êm đềm của hoàng hôn để mà khuây khoả .
(n / nhờ
    :time(l / lâu_nay)
    :pivot(e / em)
    :degree(c / chỉ)
    :theme(s / sự
        :mod(ê / êm_đềm)
        :poss(h / hoàng_hôn))
    :purpose(k / khuây_khoả))

#::snt tôi biết được nét mới đó vào buổi sáng ngày thứ tư , khi em bảo tôi :
(b / biết
    :pivot(t / tôi)
    :theme(n / nét
        :mod(m / mới)
        :mod(đ1 / đó))
    :time(b2 / bảo
        :agent(e / em)
        :goal(t2 / tôi))
    :time(w3 / date-entity
        :dayperiod(b1 / buổi
            :compound(s / sáng)
            :mod(n1 / ngày
                :ord(o / ordinal-entity
                    :value 4)))))

#::snt - tôi rất thích cảnh mặt trời lặn .
(t1 / thích
    :pivot(t / tôi)
    :degree(r / rất)
    :theme(c / cảnh
        :mod(m / mặt_trời
            :theme-of(l / lặn))))

#::snt ta đi xem mặt trời lặn đi .
(đ / đi
    :agent(t / ta)
    :compound(x / xem
        :theme(m / mặt_trời
            :theme-of(l / lặn)))
    :mode imperative)

#::snt - nhưng phải đợi chứ ...
(c / contrast-01
    :ARG2(o / obligate-01
        :result-arg1(đ / đợi)
        :agent(t / ta)))

#::snt - đợi cái gì ?
(đ / đợi
    :theme(a / amr-unknown))

#::snt - đợi lúc mặt trời đó lặn .
(đ / đợi
    :theme(l / lúc
        :mod(l1 / lặn
            :theme-of(m / mặt_trời
                :mod(đ1 / đó)))))

#::snt thoạt nhiên em có vẻ kinh ngạc , và rồi em tự cười mình .
(a / and
    :op1(k / kinh_ngạc
        :time(t / thoạt_nhiên)
        :pivot(e / em))
    :op2(c1 / cười
        :pivot(e1 / em)))

#::snt và em bảo tôi :
(a / and
    :op2(b / bảo
        :agent(e / em)
        :goal(t / tôi)))

#::snt - tôi cứ tưởng còn ở nhà !
(t1 / tưởng
    :pivot(t / tôi)
    :topic(ở / ở
        :mod(c1 / còn)
        :location(n / nhà))
    :mode expressive)

#::snt thế đấy .
(t / thế
    :mod(đ / đấy))

#::snt khi ở nước Mỹ là buổi trưa thì ai cũng biết là mặt trời đang lặn ở nước Pháp .
(b1 / biết
    :pivot(a / ai)
    :topic(d1 / date-entity
        :location(n / nước
            :mod(c / country
                :wiki(m / Mỹ
                    :name(n1 / name
                        :op1(m1 / Mỹ)))))
        :result(l2 / lặn
            :theme(m11 / mặt_trời)
            :tense(đ / đang)
            :location(n2 / nước
                :wiki(p / Pháp
                    :name(n3 / name
                        :op1(p1 / Pháp)))))
        :time(w1 / 12h00)))

#::snt nếu chỉ cần đi một phút là đến được nước pháp là xem được cảnh mặt trời lặn .
(x / xem
    :condition(đ / đi
        :modality(c1 / cần
            :degree(c / chỉ))
        :result(đ1 / đến
            :location(n / nước
                :wiki(p / pháp
                    :name(n1 / name
                        :op1(p1 / pháp)))))
        :duration(t / temporal-quantity
            :unit(p11 / phút)
            :quant 1))
    :theme(c2 / cảnh
        :mod(m1 / mặt_trời
            :theme-of(l2 / lặn))))

#::snt không may nước pháp ở quá xa .
(ở / ở
    :manner(m / may
        :polarity -)
    :pivot(n / nước
        :wiki(p / pháp
            :name(n2 / name
                :op1(p2 / pháp))))
    :extent(x / xa
        :degree(q / quá)))

#::snt nhưng , trên cái hành tinh bé đến thế của em , em chỉ cần dịch ghế vài bước .
(c / contrast-01
    :ARG2(o / obligate
        :location(h / hành_tinh
            :prep(t / trên)
            :classifier(c11 / cái)
            :mod(b / bé)
            :poss(e / em))
        :agent(e1 / em)
        :degree(c2 / chỉ)
        :result-arg1(d / dịch
            :patient(g / ghế)
            :result-arg1(b1 / bước
                :quant(v / vài)))))

#::snt khi nào em thích là em nhìn thấy mặt trời lặn ...
(n1 / nhìn
    :time(t / thích
        :pivot(e / em))
    :agent(e1 / em)
    :compound(t1 / thấy)
    :theme(m / mặt_trời
        :theme-of(l1 / lặn)))

#::snt - có một ngày , tôi nhìn mặt trời lặn bốn mươi ba lần !
(n1 / nhìn
    :time(n / ngày
        :quant 1)
    :agent(t / tôi)
    :theme(m1 / mặt_trời
        :theme-of(l / lặn))
    :frequency(l1 / lần
        :quant 43)
    :mode expressive)

#::snt một chốc sau đó em nói thêm :
(n / nói
    :time(c / chốc
        :mod(s / sau
            :mod(đ / đó)))
    :agent(e / em)
    :compound(t / thêm))

#::snt - ông biết đấy ... khi người ta buồn quá , người ta thích cảnh mặt trời lặn ...
(b / biết
    :pivot(ô / ông)
    :topic(t / thích
        :time(b1 / buồn
            :pivot(n / người_ta)
            :degree(q / quá))
        :pivot(n1 / người_ta)
        :theme(c / cảnh
            :mod(l / lặn
                :theme(m / mặt_trời)))))

#::snt - thế cái ngày bốn mươi ba lần mặt trời lặn ấy , có phải em buồn quá không ?
(b1 / buồn
    :time(n / ngày
        :classifier(c / cái)
        :mod(m / mặt_trời
            :theme-of(l1 / lặn
                :frequency(l / lần
                    :quant 43))))
    :pivot(e / em)
    :degree(q / quá)
    :polarity(w1 / amr-unknown))

#::snt nhưng ông hoàng bé nhỏ không trả lời .
(c / contrast-01
    :ARG2(t / trả_lời
        :agent(ô / ông_hoàng
            :mod(b / bé_nhỏ))
        :polarity -))

#::snt ngày thứ năm , vẫn là nhờ ở con cừu , tôi biết được cái bí mật ấy trong cuộc đời ông hoàng bé nhỏ .
(b / biết
    :time(n / ngày
        :ord(o / ordinal-entity
            :quant 5))
    :cause(c1 / cừu
        :classifier(c / con))
    :pivot(t1 / tôi)
    :theme(b1 / bí_mật
        :classifier(c2 / cái)
        :mod(ấ / ấy)
        :about(c3 / cuộc_đời
            :prep(t2 / trong)
            :poss(ô / ông_hoàng
                :mod(b2 / bé_nhỏ)))))

#::snt bất ngờ em hỏi tôi , không cần mào đầu , y như đó là kết quả của một vấn đề được âm thầm suy nghĩ từ lâu rồi :
(h / hỏi
    :manner(b / bất_ngờ)
    :agent(e / em)
    :goal(t / tôi)
    :compared-to(k1 / kết_quả
        :domain(đ / đó)
        :poss(v / vấn_đề
            :patient-of(s / suy_nghĩ
                :modality(đ1 / được)
                :manner(â / âm_thầm)
                :time(l1 / lâu
                    :prep(t1 / từ))
                :pivot e)
            :quant 1)
        :degree(e1 / equal))
    :manner(w1 / need
        :polarity -
        :time(m / mào_đầu)))

#::snt - một con cừu , nếu nó ăn cây non , tất nó cũng ăn hoa chứ ?
(ă1 / ăn
    :condition(ă / ăn
        :agent(n1 / nó
            :domain-of(c1 / cừu
                :quant 1
                    :classifier(c / con)))
        :patient(c2 / cây
            :mod(n2 / non)))
    :agent(n3 / nó)
    :patient(h / hoa)
    :polarity(w12 / amr-unknown))

#::snt - cừu thì gặp cái gì nó ăn cái ấy .
(ă / ăn
    :condition(g / gặp
        :agent(c / cừu)
        :theme(g1 / gì
            :classifier(c1 / cái)))
    :patient(ấ / ấy
        :classifier(c2 / cái))
    :agent c)

#::snt - cả những bông hoa có gai ư ?
(h / hoa
    :classifier(b / bông)
    :pivot-of(c1 / có
        :theme(g / gai))
    :polarity(w1 / amr-unknown))

#::snt - phải . cả những bông hoa có gai .
(h / hoa
    :classifier(b / bông)
    :pivot-of(c1 / có
        :theme(g / gai))
    :mode expressive)

#::snt - thế thì gai dùng để làm gì nào ?
(d / dùng
    :patient(g / gai)
    :purpose(l / làm
        :theme(a / amr-unknown))
    :mode interrogative)

#::snt tôi không biết .
(b / biết
    :pivot(t / tôi)
    :polarity -)

#::snt tôi bấy giờ đang bận tháo một đinh ốc vặn quá chặt trong động cơ của tôi .
(t1 / tháo
    :agent(t / tôi)
    :time(b / bấy_giờ)
    :tense(đ / đang)
    :manner(b1 / bận)
    :patient(đ1 / đinh_ốc
        :patient-of(v / vặn
            :manner(c / chặt
                :degree(q / quá)))
        :location(đ2 / động_cơ
            :prep(t2 / trong)
            :poss(t3 / tôi))
        :quant 1))

#::snt tôi đã rất lo lắng vì thấy cái máy có vẻ hỏng nặng lắm , mà nước uống thì cạn dần làm cho tôi sợ xảy ra điều tệ hại nhất .
(l / lo_lắng
    :pivot(t / tôi)
    :tense(đ / đã)
    :degree(r / rất)
    :result(l2 / làm
        :topic(s / sợ
            :pivot(t3 / tôi)
            :topic(x / xảy
                :compound(r1 / ra)
                :theme(đ1 / điều
                    :mod(t4 / tệ_hại
                        :degree(n2 / nhất))))))
    :reason(w2 / and
        :op1(t1 / thấy
            :topic(h / hỏng
                :domain(m / máy
                    :classifier(c / cái))
                :manner(n / nặng
                    :degree(l1 / lắm)))
            :pivot t)
        :op2(c2 / cạn
            :domain(n1 / nước
                :compound(u / uống))
            :degree(d / dần))))

#::snt - những cái gai , chúng dùng để làm gì ?
(d / dùng
    :patient(c1 / chúng
        :domain(g / gai
            :classifier(c / cái)))
    :purpose(w1 / amr-unknown))

#::snt ông hoàng nhỏ không bao giờ chịu bỏ một câu hỏi , một khi đã nói ra .
(c / chịu
    :agent(ô / ông_hoàng
        :mod(n / nhỏ))
    :polarity -
    :compound(b1 / bỏ)
    :theme(c1 / câu
        :compound(h / hỏi)
        :quant 1)
    :time(m1 / một_khi
        :op1(n1 / nói
            :tense(đ / đã)
            :compound(r / ra))
        :agent(ô1 / ô))
    :time(e / ever))

#::snt tôi thì đang bực quá với cái đinh ốc , và tôi trả lời bừa :
(a / and
    :op1(b / bực
        :pivot(t / tôi)
        :tense(đ / đang)
        :degree(q / quá)
        :goal(đ1 / đinh_ốc
            :classifier(c / cái)))
    :op2(t3 / trả_lời
        :agent(t2 / tôi)
        :manner(b1 / bừa)))

#::snt - gai , nó chẳng dùng được vào việc gì sất . nó chỉ là cái tính độc ác của hoa thôi !
(m / multi-sentence
    :snt1(d / dùng
        :pivot(n / nó
            :domain(g / gai))
        :polarity -
        :purpose(v1 / việc
            :mod(g1 / gì)))
    :snt2(t / tính
        :domain(n1 / nó)
        :mod(đ1 / độc_ác)
        :poss(h / hoa
            :classifier(c2 / cái))))

#::snt - ồ !
(ồ / ồ
    :mode expressive)

#::snt nhưng sau một lát im lặng em kêu lên một cách giận dỗi :
(c / contrast-01
    :ARG2(k / kêu
        :agent(e / em)
        :compound(l1 / lên)
        :manner(g / giận_dỗi)
        :time(a / after
            :op1(l / lát
                :mod(i / im_lặng)
                :quant 1))))

#::snt - tôi không tin !
(t1 / tin
    :pivot(t / tôi)
    :polarity -
    :mode expressive)

#::snt loài hoa yếu đuối lắm .
(y / yếu_đuối
    :pivot(h / hoa
        :classifier(l / loài))
    :degree(l1 / lắm))

#::snt chúng ngây thơ lắm .
(n / ngây_thơ
    :pivot(c / chúng)
    :degree(l / lắm))

#::snt chúng cố tự làm cho chúng được vững tâm .
(c1 / cố
    :agent(c / chúng)
    :manner(t / tự)
    :theme(l / làm
        :beneficiary-arg1(c3 / chúng
            :pivot-of(v / vững_tâm))))

#::snt chúng cho là với những cái gai , chúng đã ghê gớm lắm ...
(c1 / cho
    :pivot(c / chúng)
    :compound(l / là)
    :accompanier(g / gai
        :classifier(c2 / cái))
    :topic(g1 / ghê_gớm
        :pivot(c3 / chúng)
        :tense(đ / đã)
        :degree(l1 / lắm)))

#::snt tôi không trả lời gì cả .
(t1 / trả_lời
    :agent(t / tôi)
    :polarity -
    :patient(g / gì))

#::snt lúc ấy , tôi tự nhủ : " cái đinh ốc này mà còn ngoan cố , ông sẽ cho mày một búa văng xương . "
(t1 / tự_nhủ
    :time(l / lúc
        :mod(ấ / ấy))
    :agent(t / tôi)
    :topic(c2 / cho
        :condition(n1 / ngoan_cố
            :pivot(đ / đinh_ốc
                :classifier(c / cái)
                :mod(n / này)))
        :agent(ô / ông)
        :tense(s / sẽ)
        :patient(m1 / mày)
        :theme(b / búa
            :quant 1)
        :result(v / văng
            :theme(x / xương))))

#::snt ông hoàng nhỏ lại làm sao lãng những suy nghĩ của tôi :
(l1 / làm
    :cause(ô / ông_hoàng
        :mod(n / nhỏ))
    :theme(s / sao_lãng
        :theme(s1 / suy_nghĩ
            :poss(t / tôi))))

#::snt - còn ông , ông tưởng rằng hoa ...
(t / tưởng
    :agent(ô1 / ông)
    :topic(h / hoa))

#::snt - không ! !
(k / không
    :mode expressive)

#::snt không !
(k / không
    :mode expressive)

#::snt tôi có tưởng gì đâu !
(t1 / tưởng
    :pivot(t / tôi)
    :theme(g / gì)
    :mode expressive
    :polarity -)

#::snt tôi trả lời đại thế thôi .
(t1 / trả_lời
    :agent(t / tôi)
    :manner(đ / đại))

#::snt tôi đang bận những việc hệ trọng !
(b / bận
    :pivot(t / tôi)
    :tense(đ / đang)
    :theme(v / việc
        :mod(h / hệ_trọng))
    :mode expressive)

#::snt cậu nhìn tôi ngạc nhiên :
(n / nhìn
    :agent(c / cậu)
    :goal(t / tôi)
    :manner(n1 / ngạc_nhiên))

#::snt - những việc hệ trọng !
(v / việc
    :mod(h / hệ_trọng)
    :mode expressive)

#::snt cậu em nhìn thấy tôi tay cầm búa , các ngón đen thui vì dầu máy , cúi xuống một vật mà em xem ra thật là xấu xí .
(n / nhìn
    :agent(e / em
        :classifier(c / cậu))
    :compound(t / thấy)
    :topic(w1 / and
        :op1(c1 / cầm
            :agent(t1 / tôi)
            :instrument(t2 / tay)
            :theme(b / búa))
        :op2(đ / đen_thui
            :pivot(n1 / ngón)
            :cause(d / dầu_máy))
        :op3(c3 / cúi
            :compound(x / xuống)
            :goal(v1 / vật
                :mod(x1 / xem_ra
                    :pivot(e1 / em)
                    :topic(x2 / xấu_xí
                        :degree(t3 / thật
                            :compound(l / là))))
                :quant 1)
            :agent t)))

#::snt - ông nói như các người lớn ấy !
(n / nói
    :agent(ô / ông)
    :manner(w1 / resemble
        :compared-to(n2 / người_lớn
            :mod(ấ / ấy))))

#::snt câu ấy làm tôi hơi xấu hổ .
(l / làm
    :cause(c / câu
        :mod(ấ / ấy))
    :patient(t / tôi
        :pivot-of(x / xấu_hổ
            :degree(h / hơi))))

#::snt nhưng không thương xót , em nói thêm :
(c / contrast-01
    :ARG2(n1 / nói
        :manner(t / thương_xót
            :polarity -)
        :agent(e / em)
        :compound(t1 / thêm)))

#::snt - ông lẫn lộn hết ... ông xáo trộn hết !
(m / multi-sentence
    :snt1(l / lẫn_lộn
        :agent(ô / ông))
    :snt2(x / xáo_trộn
        :agent(ô1 / ông))
    :mode expressive)

#::snt cậu em thực sự bực tức .
(b / bực_tức
    :pivot(e / em
        :classifier(c / cậu))
    :degree(t / thực_sự))

#::snt mái tóc của em vàng xoã tung ra trước gió :
(t1 / tung
    :patient(m / mái
        :mod(t / tóc
            :mod(v / vàng))
        :poss(e / em)
        :manner(x / xoã))
    :compound(r / ra)
    :setting(g / gió
        :prep(t2 / trước)))

#::snt tôi có biết một tinh cầu , trên ấy có một gã lười .
(b / biết
    :pivot(t / tôi)
    :theme(t1 / tinh_cầu
        :location-of(c1 / có
            :theme(g / gã
                :mod(l / lười)
                :quant 1))
        :quant 1))

#::snt ông ta không hề ngửi một bông hoa .
(n / ngửi
    :agent(ô / ông
        :mod(t / ta))
    :polarity -
    :theme(h1 / hoa
        :quant 1
            :classifier(b / bông)))

#::snt không hề ngắm một vì sao .
(n / ngắm
    :polarity -
    :theme(s / sao
        :quant 1
            :classifier(v / vì)))

#::snt không hề yêu một người nào .
(y / yêu
    :polarity -
    :theme(n / người
        :mod(n1 / nào)))

#::snt ông ta chẳng bao giờ làm cái gì khác những bài tính cộng .
(l / làm
    :agent(ô / ông
        :mod(t / ta))
    :polarity -
    :theme(g / gì
        :classifier(c1 / cái)
        :domain-of(k / khác
            :theme(b1 / bài_tính
                :compound(c2 / cộng))))
    :time(e / ever))

#::snt và suốt ngày ông ta cứ lặp đi lặp lại như ông : " tôi là một người đúng đắn ! tôi là một người đúng đắn ! " , và cái đó làm ông ta vênh vang hợm hĩnh .
(w1 / and
    :op1(l / lặp
        :frequency(n / ngày
            :mod(a / all))
        :agent(ô / ông
            :mod(t / ta))
        :compound(đ / đi)
        :compound(l1 / lặp
            :compound(l2 / lại))
        :topic(a1 / and
            :op1(n2 / người
                :domain(t1 / tôi)
                :mod(đ1 / đúng_đắn)
                :quant 1)
            :op2(n3 / người
                :domain(t2 / tôi)
                :mod(wz1 / đúng_đắn)
                :quant 1))
        :manner(w4 / resemble
            :compared-to(ô1 / ông)))
    :op2(l5 / làm
        :cause(c1 / cái
            :mod(đ3 / đó))
        :result(w11 / and
            :op1(v2 / vênh_vang
                :domain(ô2 / ông
                    :mod(t3 / ta)))
            :op2(h / hợm_hĩnh
                :pivot ô2))))

#::snt nhưng ông ta đâu có phải là người , ông ta là một cái nấm !
(c / contrast-01
    :ARG2(w1 / and
        :snt1(n1 / người
            :domain(ô / ông
                :mod(t / ta))
            :modality(p / phải
                :polarity -))
        :op2(n2 / nấm
            :domain(ô1 / ông
                :mod(t1 / ta))
            :quant 1
                :classifier(c1 / cái))))

#::snt - một cái gì ?
(c / cái
    :theme(w2 / amr-unknown)
    :quant 1)

#::snt - một cái nấm !
(n / nấm
    :quant 1
        :classifier(c / cái)
    :mode expressive)

#::snt ông hoàng bé nhỏ lúc này tái xanh vì giận .
(t / tái_xanh
    :pivot(ô / ông_hoàng
        :mod(b / bé_nhỏ))
    :time(l / lúc
        :mod(n / này))
    :reason(g / giận))

#::snt - đã hàng triệu năm nay , hoa làm ra gai .
(l / làm
    :cause(h1 / hoa)
    :compound(r / ra)
    :theme(g / gai)
    :duration(m / multiple
        :op1(t / temporal-quantity
            :unit(n / năm)
            :quant 1000000)))

#::snt hàng triệu năm nay , cừu vẫn cứ ăn hoa .
(ă / ăn
    :agent(c / cừu)
    :patient(h1 / hoa)
    :duration(m / multiple
        :op1(t / temporal-quantity
            :unit(n / năm)
            :quant 1000000)))

#::snt vậy mà tìm hiểu xem vì sao hoa lại cứ khổ sở làm ra những cái gai vô tích sự
(t / tìm_hiểu
    :compound(x / xem)
    :cause(v1 / vì
        :compound(s / sao)
        :agent-of(l1 / làm
            :agent(h / hoa)
            :manner(k / khổ_sở)
            :compound(r / ra)
            :patient(g / gai
                :classifier(c1 / cái)
                :mod(v2 / vô_tích_sự)))))

#::snt không đúng đắn hơn, không quan trọng hơn những bài tính cộng của một cái ông to tướng mặt mũi đỏ gay hay sao ?
(a / and
    :op1(đ / đúng_đắn
        :polarity -
        :degree(h / hơn))
    :op2(q / quan_trọng
        :polarity -
        :degree(h1 / hơn))
    :compared-to(b / bài_tính
        :compound(c / cộng)
        :poss(ô / ông
            :mod(w1 / and
                :op1(t / to_tướng)
                :op2(m1 / mặt_mũi
                    :mod(đ1 / đỏ_gay)))
            :quant 1
                :classifier(c2 / cái)))
    :mode interrogative)

#::snt em đỏ mặt rồi nói tiếp :
(a / and
    :op1(đ / đỏ
        :pivot(e / em)
        :compound(m / mặt))
    :op2(n / nói
        :compound(t / tiếp)
        :agent e))

#::snt - khi một người yêu một đoá hoa duy nhất trong hàng triệu triệu ngôi sao , thì chỉ nhìn những ngôi sao là đủ làm cho anh ta hạnh phúc .
(l1 / làm
    :condition(y / yêu
        :pivot(n / người
            :quant 1)
        :theme(h / hoa
            :classifier(đ / đoá
                :quant 1)
            :mod(d / duy_nhất)
            :mod(s / sao
                :prep(t / trong)
                :classifier(n1 / ngôi)
                :quant(m / multiple
                    :quant 1000000))))
    :cause(n2 / nhìn
        :degree(c / chỉ)
        :agent(s1 / sao
            :classifier(n4 / ngôi)))
    :degree(đ1 / đủ)
    :patient(a / anh
        :mod(t4 / ta))
    :result-arg2(h2 / hạnh_phúc))

#::snt anh ta nghĩ : " đoá hoa của mình ở đâu đó trên kia ... "
(n / nghĩ
    :agent(a / anh
        :mod(t / ta))
    :topic(ở / ở
        :pivot(h / hoa
            :classifier(đ / đoá)
            :poss(m / mình))
        :location(đ1 / đâu_đó
            :mod(k / kia
                :prep(t1 / trên)))))

#::snt nhưng nếu con cừu mà ăn đoá hoa đi , thì anh ta sẽ thấy như là tất cả các ngôi sao tự nhiên tắt lịm !
(c / contrast-01
    :condition(ă / ăn
        :agent(c1 / cừu
            :classifier(c11 / con))
        :patient(h / hoa
            :classifier(đ / đoá)))
    :ARG2(t2 / thấy
        :pivot(a / anh
            :mod(t1 / ta))
        :tense(s / sẽ)
        :mod(w1 / resemble
            :compared-to(t5 / tắt
                :agent(s1 / sao
                    :classifier(n3 / ngôi)
                    :mod(a1 / all))
                :manner(l1 / lịm))
            :degree(e / equal))))

#::snt và chuyện đó không quan trọng hay sao !
(a / and
    :op2(q / quan_trọng
        :pivot(c / chuyện
            :mod(đ / đó))
        :polarity -)
    :mode interrogative)

#::snt em nghẹn ngào không nói được nữa .
(a / and
    :op1(n / nghẹn_ngào
        :pivot(e / em))
    :op2(p / possible-01
        :polarity -
        :topic(n1 / nói
            :agent e)))

#::snt thốt nhiên em bật lên nức nở .
(b / bật
    :agent(e / em)
    :compound(l / lên)
    :manner(n / nức_nở))

#::snt đêm đã buông xuống .
(b / buông
    :pivot(đ / đêm)
    :tense(đ1 / đã)
    :compound(x / xuống))

#::snt tôi đã bỏ các đồ nghề xuống .
(b / bỏ
    :agent(t / tôi)
    :tense(đ / đã)
    :theme(đ1 / đồ_nghề)
    :direction(x / xuống))

#::snt tôi cóc cần cái búa của tôi , cái đinh ốc của tôi , cóc cần cái khát , cóc cần cái chết .
(z1 / and
    :op1(c1 / cần
        :pivot(t / tôi)
        :polarity -
        :theme(w2 / and
            :op1(b / búa
                :classifier(c6 / cái)
                :poss(t3 / tôi))
            :op2(đ / đinh_ốc
                :classifier(c4 / cái)
                :poss(t2 / tôi))))
    :op2(c7 / cần
        :polarity -
        :theme(c8 / cái
            :mod(k / khát))
        :pivot t)
    :op3(c10 / cần
        :polarity -
        :theme(c11 / cái
            :mod(c12 / chết))
        :pivot t))

#::snt trên một ngôi sao , trên một hành tinh , hành tinh của tôi , trái đất , có một ông hoàng bé nhỏ cần được an ủi !
(c1 / có
    :theme(ô / ông_hoàng
        :mod(b / bé_nhỏ)
        :pivot-of(c2 / cần
            :theme(a / an_ủi))
        :quant 1)
    :location(w3 / and
        :op1(s / sao
            :quant 1
                :classifier(n / ngôi))
        :op2(h / hành_tinh
            :prep(t1 / trên)
            :quant 1)
        :op3(h1 / hành_tinh
            :poss(t2 / tôi))
        :op4(t3 / trái_đất)))

#::snt tôi ôm em trong vòng tay .
(ô / ôm
    :agent(t / tôi)
    :theme(e / em)
    :location(v / vòng_tay
        :prep(t1 / trong)
        :part-of t))

#::snt tôi ru em .
(r / ru
    :agent(t / tôi)
    :patient(e / em))

#::snt tôi nói với em : " đoá hoa mà em yêu không bị nguy đâu ...
(n / nói
    :agent(t / tôi)
    :goal(e / em)
    :topic(n1 / nguy
        :patient(h / hoa
            :classifier(đ / đoá)
            :mod(y / yêu
                :pivot(e1 / em)))
        :modality(b / bị
            :polarity -)))

#::snt tôi sẽ vẽ một cái rọ mõm , cho con cừu của em ...
(v / vẽ
    :agent(t / tôi)
    :tense(s / sẽ)
    :result-arg1(r / rọ_mõm
        :quant 1
            :classifier(c / cái))
    :beneficiary(c3 / cừu
        :classifier(c2 / con)
        :poss(e / em)))

#::snt tôi ... "
(t / tôi)

#::snt tôi không biết nói với em thế nào nữa .
(b / biết
    :pivot(t / tôi)
    :polarity -
    :topic(n / nói
        :goal(e / em)
        :manner(t1 / thế_nào)
        :agent t))

#::snt tôi cảm thấy mình rất vụng về .
(c / cảm
    :pivot(t / tôi)
    :compound(t1 / thấy)
    :topic(v / vụng_về
        :domain(m / mình)
        :degree(r / rất)))

#::snt tôi không biết làm sao với tới được em , đi đâu để gặp được em ...
(b / biết
    :pivot(t / tôi)
    :polarity -
    :manner(l / làm_sao)
    :purpose(z1 / and
        :op1(v / với
            :compound(t1 / tới)
            :goal(e / em))
        :op2(đ1 / đi
            :location(đ2 / đâu)
            :purpose(g / gặp
                :goal(e1 / em)))))

#::snt thật huyền bí làm sao , cái xứ sở của nước mắt .
(h / huyền_bí
    :degree(t / thật)
    :manner(l / làm_sao)
    :domain(x / xứ_sở
        :classifier(c / cái)
        :location-of(n / nước_mắt)))

#::snt tôi đã tìm hiểu rất nhanh để hiểu hơn về đoá hoa này .
(t1 / tìm_hiểu
    :agent(t / tôi)
    :tense(đ / đã)
    :manner(n / nhanh
        :degree(r / rất))
    :purpose(h / hiểu
        :degree(h1 / hơn)
        :topic(h2 / hoa
            :classifier(đ2 / đoá)
            :mod(n1 / này))))

#::snt trên tinh cầu của ông hoàng nhỏ , vẫn thường có những bông hoa rất đơn giản , điểm trang chỉ bằng một vòng cánh hoa , và chẳng chiếm bao nhiêu chỗ , và chẳng làm phiền ai .
(w1 / and
    :op1(c1 / có
        :location(t1 / tinh_cầu
            :prep(t / trên)
            :poss(ô / ông_hoàng
                :mod(n / nhỏ)))
        :op1(đ / đơn_giản
            :domain(h / hoa
                :classifier(b / bông))
            :degree(r / rất)))
    :op2(đ1 / điểm_trang
        :means(v1 / vòng
            :degree(c2 / chỉ)
            :prep(b1 / bằng)
            :mod(c3 / cánh
                :mod(h1 / hoa))
            :quant 1)
        :agent h)
    :op3(c5 / chiếm
        :polarity -
        :theme(c6 / chỗ)
        :agent h)
    :op4(l / làm
        :polarity -
        :compound(p / phiền)
        :patient(a / ai)
        :pivot h))

#::snt một buổi sáng , chúng hiện ra trong cỏ rồi lại héo tàn vào chiều tối .
(a / and
    :op1(h / hiện
        :agent(c / chúng)
        :compound(r / ra)
        :location(c1 / cỏ
            :prep(t / trong))
        :time(d / date-entity
            :dayperiod(b / buổi
                :mod(m / một)
                :mod(s / sáng))))
    :op2(h1 / héo
        :compound(t1 / tàn)
        :time(d1 / date-entity
            :dayperiod(c2 / chiều_tối))
        :patient c))

#::snt nhưng cái cây hoa ấy , một ngày kia , đã nảy mầm từ một cái hạt không biết từ đâu tới và ông hoàng nhỏ đã theo dõi cái mầm con không giống với các mầm con nào khác .
(c / contrast-01
    :ARG2(w2 / and
        :op1(n2 / nảy
            :agent(c1 / cây
                :classifier(c11 / cái)
                :mod(h / hoa)
                :mod(ấ / ấy))
            :time(n1 / ngày_kia
                :mod(m / một))
            :tense(đ / đã)
            :theme(m1 / mầm)
            :source(h1 / hạt
                :theme-of(b / biết
                    :polarity -
                    :agent-of(t2 / tới
                        :initialLocation(w11 / amr-unknown)))
                :quant 1
                    :classifier(c2 / cái)))
        :op2(t3 / theo_dõi
            :agent(ô / ông_hoàng
                :mod(n3 / nhỏ))
            :tense(đ2 / đã)
            :theme(m3 / mầm
                :classifier(c3 / cái)
                :mod(c4 / con)
                :compared-to(g / giống
                    :polarity -
                    :theme(m4 / mầm
                        :mod(c6 / con
                            :mod(n4 / nào))
                        :mod(k2 / khác))
                    :degree(e / equal))))))

#::snt nó có thể là một loại baobab mới .
(p / possible-01
    :domain(n / nó)
    :theme(b / baobab
        :mod(m1 / mới)
        :quant 1
            :classifier(l1 / loại)))

#::snt nhưng cái cây nhỏ liền thôi không lớn lên nữa , và bắt đầu sửa soạn để ra hoa .
(w1 / contrast-01
    :ARG2(w2 / and
        :op1(t / thôi
            :agent(c1 / cây
                :classifier(c / cái)
                :mod(n1 / nhỏ))
            :manner(l / liền)
            :theme(l1 / lớn
                :polarity -
                :compound(l2 / lên)))
        :op2(b / bắt_đầu
            :theme(s / sửa_soạn)
            :purpose(r / ra
                :theme(h / hoa))
            :agent c)))

#::snt ông hoàng nhỏ chứng kiến sự xuất hiện một cái nụ lớn , cảm thấy rõ ràng từ cái nụ này sẽ lộ ra một điều kỳ diệu , nhưng đoá hoa vẫn cứ điểm trang hoài , nấp kín trong căn buồng xanh của nó .
(c11 / contrast-01
    :ARG1(c2 / cảm
        :pivot(ô / ông_hoàng
            :mod(n / nhỏ)
            :agent-of(c / chứng_kiến
                :theme(s / sự
                    :mod(x / xuất_hiện)
                    :mod(n1 / nụ
                        :mod(l / lớn)
                        :quant 1
                            :classifier(c1 / cái)))))
        :compound(t / thấy)
        :manner(r / rõ_ràng)
        :topic(l1 / lộ
            :source(n2 / nụ
                :classifier(c3 / cái)
                :mod(n3 / này))
            :tense(s1 / sẽ)
            :compound(r1 / ra)
            :theme(đ / điều
                :mod(k / kỳ_diệu)
                :quant 1)))
    :ARG2(a / and
        :op1(đ2 / điểm_trang
            :agent(h / hoa
                :classifier(đ1 / đoá))
            :frequency(h1 / hoài))
        :op2(n5 / nấp
            :degree(k1 / kín)
            :location(b / buồng
                :prep(t2 / trong)
                :classifier(c5 / căn)
                :mod(x1 / xanh)
                :poss(n6 / nó))
            :agent h)))

#::snt hoa chưa chọn kỹ mầu sắc của mình .
(c1 / chọn
    :agent(h / hoa)
    :polarity -
    :manner(k / kỹ)
    :theme(m / mầu_sắc
        :part-of(m1 / mình)))

#::snt hoa chậm rãi trang phục , sửa lại ngay ngắn từng cánh hoa .
(a / and
    :op1(t / trang_phục
        :agent(h / hoa)
        :manner(c / chậm_rãi))
    :op2(s / sửa
        :compound(l / lại)
        :manner(n / ngay_ngắn)
        :theme(c1 / cánh
            :mod(h1 / hoa)
            :mod(w1 / all))))

#::snt hoa không muốn hiện ra nhàu nát như cái mồng gà .
(m / muốn
    :pivot(h / hoa)
    :polarity -
    :theme(h1 / hiện
        :compound(r / ra)
        :manner(n / nhàu_nát
            :compared-to(m1 / mồng
                :classifier(c / cái)
                :part-of(g / gà)
                :degree(e / equal)))))

#::snt hoa chỉ muốn lộ ra trong sắc hương rực rỡ .
(m / muốn
    :pivot(h / hoa)
    :degree(c / chỉ)
    :theme(l / lộ
        :compound(r / ra)
        :setting(s / sắc
            :prep(t / trong)
            :mod(h1 / hương)
            :mod(r1 / rực_rỡ))))

#::snt ôi chao !
(ô / ôi_chao
    :mode expressive)

#::snt hoa thật là điệu !
(đ / điệu
    :domain(h / hoa)
    :degree(t / thật)
    :mode expressive)

#::snt cuộc trang điểm huyền bí của nàng kéo dài từ ngày này sang ngày nọ .
(k / kéo
    :pivot(c / cuộc
        :mod(t / trang_điểm)
        :mod(h / huyền_bí)
        :source(n / nàng))
    :compound(d / dài)
    :time(w11 / temporal-quantity
        :initialTime(n1 / ngày
            :mod(n2 / này))
        :finalTime(n3 / ngày
            :mod(n4 / nọ))))

#::snt và rồi tới một sớm mai , đúng giờ mặt trời mọc , nàng hiện ra .
(a / and
    :op2(h / hiện
        :time(g / giờ
            :time(s / sớm
                :mod(m / một)
                :mod(m1 / mai))
            :agent-of(m3 / mọc
                :agent(m2 / mặt_trời)))
        :agent(n / nàng)
        :compound(r1 / ra)))

#::snt và nàng , vốn đã công phu đến như thế , bây giờ vừa ngáp vừa nói :
(a / and
    :time(b / bây_giờ)
    :op1(n2 / ngáp
        :agent(n / nàng))
    :op2(n3 / nói
        :agent n)
    :time(a1 / after
        :op1(c / công_phu
            :tense(đ / đã)
            :resemble-01(r / resemble
                :compared-to(t / thế)))))

#::snt - ôi ! em chỉ vừa thức dậy ... em xinlỗi anh ...
(m / multi-sentence
    :snt1(ô / ôi
        :mode expressive)
    :snt2(t / thức
        :agent(e / em)
        :degree(c / chỉ)
        :compound(d / dậy))
    :snt3(x / xinlỗi
        :agent(e1 / em)
        :patient(a / anh)))

#::snt tóc tai em còn rũ rượi thế này ...
(r / rũ_rượi
    :pivot(t / tóc_tai
        :part-of(e / em)))

#::snt thế là ông hoàng nhỏ không nén nổi sự ngưỡng mộ :
(n1 / nén
    :agent(ô / ông_hoàng
        :mod(n / nhỏ))
    :polarity -
    :theme(s / sự
        :mod(n3 / ngưỡng_mộ)))

#::snt - nàng thật là đẹp !
(đ / đẹp
    :pivot(n / nàng)
    :degree(t / thật))

#::snt - thật vậy sao , - hoa trả lời một cách nhẹ nhàng - và em lại cùng sinh ra với vầng dương ...
(a / and
    :op1(t1 / trả_lời
        :topic(t / thật
            :mod(s / sao))
        :agent(h / hoa)
        :manner(n / nhẹ_nhàng))
    :op2(s1 / sinh
        :agent(e / em)
        :compound(r / ra)
        :accompanier(v3 / vầng_dương)))

#::snt ông hoàng nhỏ biết ngay cô nàng không lấy gì làm khiêm tốn lắm , nhưng nàng thật là dễ thương !
(c1 / contrast-01
    :ARG1(b / biết
        :pivot(ô / ông_hoàng
            :mod(n / nhỏ))
        :manner(n1 / ngay)
        :topic(k1 / khiêm_tốn
            :pivot(n2 / nàng
                :classifier(c / cô))
            :polarity -
            :degree(l2 / lắm)))
    :ARG2(d / dễ_thương
        :domain(n4 / nàng)
        :degree(t / thật)))

#::snt - đã đến giờ điểm tâm , có phải anh không , - nàng nói thêm ngay sau đó , - xin anh hãy nhớ đến em ...
(n1 / nói
    :agent(n / nàng)
    :compound(t / thêm)
    :time(s / sau
        :mod(n2 / ngay)
        :mod(đ3 / đó))
    :topic(w1 / and
        :op1(p / phải
            :time(g / giờ
                :prep(đ1 / đến)
                :compound(đ2 / điểm_tâm))
            :goal(a / anh)
            :polarity(a11 / amr-unknown))
        :op2(x / xin
            :theme(n3 / nhớ
                :pivot(a1 / anh)
                :mode imperative
                :goal(e / em)))))

#::snt thế là ông hoàng nhỏ , đầy xấu hổ , đi tìm một chiếc thùng tưới đầy nước mát và tưới cho bông hoa .
(a / and
    :op1(đ1 / đi
        :agent(ô / ông_hoàng
            :mod(n / nhỏ)
            :pivot-of(x / xấu_hổ
                :degree(đ / đầy)))
        :compound(t1 / tìm)
        :theme(t2 / thùng
            :compound(t3 / tưới)
            :mod(đ2 / đầy
                :mod(n1 / nước
                    :mod(m1 / mát)))
            :quant 1
                :classifier(c / chiếc)))
    :op2(t4 / tưới
        :beneficiary-arg1(h / hoa
            :classifier(b / bông))
        :agent ô))

#::snt như vậy đấy , cô nàng đã nhanh chóng làm cho cậu em lo nghĩ với tính kiêu kỳ hơi u ám của cô .
(l / làm
    :cause(n1 / nàng
        :classifier(c / cô))
    :tense(đ1 / đã)
    :manner(n2 / nhanh_chóng)
    :beneficiary-arg2(e / em
        :classifier(c2 / cậu)
        :pivot-of(l1 / lo_nghĩ
            :about(t / tính
                :mod(k / kiêu_kỳ
                    :mod(u / u_ám
                        :degree(h / hơi)))
                :poss(c4 / cô)))))

#::snt chẳng hạn một hôm , cô đã nói với ông hoàng
(n / nói
    :example(c / chẳng_hạn
        :time(h / hôm
            :mod(m / một)))
    :agent(c1 / cô)
    :tense(đ / đã)
    :goal(ô / ông_hoàng))

#::snt - chúng có thể tới đây , bọn hổ ấy , với móng vuốt của chúng .
(p / possible-01
    :result-arg1(t / tới
        :agent(c / chúng
            :domain-of(h / hổ
                :classifier(b / bọn)
                :mod(ấ / ấy)))
        :location(đ / đây)
        :accompanier(m / móng_vuốt
            :part-of(c3 / chúng))))

#::snt - trên tinh cầu của anh không có hổ , ông hoàng nhỏ nhận xét .
(n1 / nhận_xét
    :topic(c1 / có
        :location(t1 / tinh_cầu
            :prep(t / trên)
            :poss(a / anh))
        :polarity -
        :theme(h / hổ))
    :agent(ô / ông_hoàng
        :mod(n / nhỏ)))

#::snt vả lại , hổ đâu có ăn cỏ .
(a / and
    :op2(ă / ăn
        :agent(h / hổ)
        :polarity -
        :patient(c1 / cỏ)))

#::snt - em đâu phải là cỏ , bông hoa nói nhẹ nhàng .
(n / nói
    :topic(c / cỏ
        :domain(e / em)
        :modality(p / phải
            :polarity -))
    :agent(h / hoa
        :classifier(b / bông))
    :manner(n1 / nhẹ_nhàng))

#::snt - xin lỗi ...
(x / xin_lỗi)

#::snt - em chẳng sợ gì hổ , nhưng em khiếp gió luồn .
(c / contrast-01
    :ARG1(s / sợ
        :pivot(e / em)
        :polarity -
        :theme(h / hổ))
    :ARG2(k / khiếp
        :pivot(e1 / em)
        :theme(l / luồn
            :theme(g1 / gió))))

#::snt anh có một tấm chắn gió nào không ?
(c / có
    :pivot(a / anh)
    :theme(t / tấm
        :theme-of(c1 / chắn
            :theme(g / gió))
        :mod(n / nào)
        :quant 1)
    :polarity(a1 / amr-unknown))

#::snt " khiếp gió luồn ...
(k / khiếp
    :theme-of(l / luồn
        :theme(g / gió)))

#::snt đối với một cây nhỏ thế là không hay , ông hoàng nhỏ nhận xét .
(n2 / nhận_xét
    :beneficiary(c / cây
        :mod(n / nhỏ)
        :quant 1)
    :topic(h / hay
        :polarity -
        :domain c)
    :agent(ô / ông_hoàng
        :mod(n1 / nhỏ)))

#::snt cô nàng này thật phức tạp ... "
(p / phức_tạp
    :pivot(n / nàng
        :classifier(c / cô)
        :mod(n1 / này))
    :degree(t / thật))

#::snt - chiều tối anh hãy đặt em trong bầu kính nhé .
(đ / đặt
    :agent(a / anh)
    :mode imperative
    :patient(e / em)
    :setting(b / bầu
        :prep(t1 / trong)
        :mod(k / kính))
    :time(w2 / date-entity
        :dayperiod(c / chiều
            :mod(t / tối))))

#::snt chỗ anh rét lắm .
(r / rét
    :domain(c / chỗ
        :poss(a / anh))
    :degree(l / lắm))

#::snt thiếu tiện nghi quá .
(t / thiếu
    :theme(t1 / tiện_nghi)
    :degree(q / quá)
    :pivot ch)

#::snt ở chỗ em ...
(c / chỗ
    :prep(ở / ở)
    :poss(e / em))

#::snt nhưng cô nàng im bặt .
(c / contrast-01
    :ARG2(i / im_bặt
        :pivot(n1 / nàng
            :classifier(c1 / cô))))

#::snt cô đến đây lúc hãy còn là hạt .
(đ / đến
    :agent(c / cô)
    :location(đ1 / đây)
    :time(h1 / hạt
        :mod(c1 / còn)
        :domain c))

#::snt cô chẳng thể hiểu được gì về các thế giới khác .
(p / possible-01
    :result-arg1(h / hiểu
        :pivot(c / cô)
        :theme(g / gì)
        :about(t1 / thế_giới
            :mod(k / khác)))
    :polarity -)

#::snt ngượng vì trót để lộ là mình bốc phét một cách ngây ngô quá như thế , cô húng hoáng ho hai ba lượt để dồn ông hoàng nhỏ vào lúng túng :
(h1 / ho
    :reason(n / ngượng
        :agent-of(t / trót
            :result-arg1(đ / để
                :compound(l / lộ)
                :topic(b / bốc_phét
                    :agent(m / mình)
                    :manner(n1 / ngây_ngô
                        :degree(q / quá))))
            :agent c))
    :agent(c / cô)
    :degree(h / húng_hoáng)
    :frequency(l2 / lượt
        :quant(w1 / or
            :op2 3
            :op1 2))
    :purpose(d / dồn
        :prep(đ1 / để)
        :patient(ô / ông_hoàng
            :mod(n3 / nhỏ))
        :manner(l3 / lúng_túng)))

#::snt - cái chắn gió , anh có không ? ...
(c2 / có
    :theme(c1 / chắn
        :classifier(c / cái)
        :theme(g / gió))
    :pivot(a / anh)
    :polarity(w1 / amr-unknown))

#::snt - anh đã định đi lấy thì em bắt đầu nói !
(đ2 / đi
    :agent(a / anh)
    :tense(đ / đã)
    :modality(đ1 / định)
    :compound(l / lấy)
    :time(b / bắt_đầu
        :agent(e / em)
        :theme(n / nói)))

#::snt thế là cô nàng cố ho mạnh hơn nữa để bắt buộc cậu phải nhận lỗi .
(c1 / cố
    :agent(n / nàng
        :classifier(c / cô))
    :result-arg1(h / ho
        :degree(m / mạnh))
    :purpose(b / bắt_buộc
        :theme(n1 / nhận
            :agent(c2 / cậu)
            :theme(l / lỗi))))

#::snt vậy mà ông hoàng nhỏ , bởi vì ý tốt của tình yêu , vẫn đối xử với cô rất tốt .
(đ / đối_xử
    :agent(ô / ông_hoàng
        :mod(n / nhỏ))
    :cause(ý / ý
        :mod(t / tốt)
        :poss(t1 / tình_yêu))
    :beneficiary-arg2(c1 / cô)
    :manner(t2 / tốt
        :degree(r / rất)))

#::snt chàng đã nghĩ ngợi nghiêm trang về những lời nói vớ vẩn của nàng , và trở nên khổ sở lắm .
(a / and
    :op1(n / nghĩ_ngợi
        :pivot(c / chàng)
        :tense(đ / đã)
        :manner(n1 / nghiêm_trang)
        :about(l / lời_nói
            :mod(v1 / vớ_vẩn)
            :poss(n3 / nàng)))
    :op2(t / trở_nên
        :result-arg1(k / khổ_sở
            :degree(l1 / lắm))))

#::snt " đáng lẽ tôi không nên nghe , một hôm cậu em thú nhận với tôi , không bao giờ nên nghe loài hoa cả .
(t1 / thú_nhận
    :time(h / hôm
        :mod(m / một))
    :agent(e / em
        :classifier(c / cậu))
    :goal(t2 / tôi)
    :topic(w1 / and
        :op2(r / recommend-01
            :time(b / bao_giờ
                :polarity -)
            :theme(n3 / nghe
                :theme(l / loài
                    :mod(h1 / hoa)))
            :agent t)
        :op1(r1 / recommend-01
            :agent(t / tôi)
            :polarity -
            :theme(n1 / nghe))))

#::snt chỉ nên nhìn chúng và thở hương thơm của chúng thôi .
(r / recommend-01
    :degree(c / chỉ)
    :theme(w1 / and
        :op1(n1 / nhìn
            :goal(c1 / chúng))
        :op2(t / thở
            :theme(h / hương
                :mod(t1 / thơm)
                :poss(c3 / chúng)))))

#::snt cái hoa của tôi làm thơm ngát tinh cầu của tôi , nhưng tôi lại không biết vui lòng .
(c1 / contrast-01
    :ARG1(l / làm
        :cause(h / hoa
            :classifier(c / cái)
            :poss(t / tôi))
        :manner(t1 / thơm_ngát
            :location(t2 / tinh_cầu
                :poss(t3 / tôi))))
    :ARG2(b / biết
        :pivot(t4 / tôi)
        :polarity -
        :manner(v / vui_lòng)))

#::snt câu chuyện móng vuốt ấy đáng lẽ làm cho tôi cảm động thì tôi lại bực ... "
(c1 / contrast-01
    :ARG1(l / làm
        :cause(c / câu_chuyện
            :mod(m / móng_vuốt)
            :mod(ấ / ấy))
        :beneficiary-arg2(t / tôi
            :pivot-of(c2 / cảm_động)))
    :ARG2(b / bực
        :pivot(t2 / tôi)))

#::snt cậu còn thú nhận với tôi : " ngày ấy , tôi chẳng biết cách hiểu .
(t / thú_nhận
    :agent(c / cậu)
    :goal(t1 / tôi)
    :topic(b / biết
        :time(n / ngày
            :mod(ấ / ấy))
        :pivot(t2 / tôi)
        :polarity -
        :theme(c3 / cách
            :purpose(h / hiểu))))

#::snt đáng lẽ tôi phải xét đoán nàng trên việc làm chứ không phải bằng lời nói .
(o / obligate-01
    :theme(x / xét_đoán
        :agent(t / tôi)
        :patient(n / nàng)
        :about(w2 / and
            :op1(v / việc_làm
                :prep(t1 / trên))
            :op2(p1 / phải
                :polarity -
                :manner(l / lời_nói)))))

#::snt nàng toả thơm tôi , làm cho tôi sáng rực lên .
(t / toả
    :agent(n / nàng)
    :compound(t1 / thơm)
    :beneficiary-arg2(t2 / tôi)
    :result(l / làm
        :beneficiary-arg1(t3 / tôi)
        :manner(s / sáng_rực)
        :cause n))

#::snt đáng lẽ tôi không bao giờ nên bỏ đi cả .
(r / recommend-01
    :agent(t / tôi)
    :polarity -
    :theme(b1 / bỏ
        :compound(đ1 / đi))
    :time(e / ever))

#::snt đáng lẽ tôi phải thấy được cái dịu hiền của nàng đằng sau mọi đòi hỏi đáng thương ấy .
(o / obligate-01
    :result-arg1(t1 / thấy
        :agent(t / tôi)
        :theme(c / cái
            :mod(d / dịu_hiền)
            :poss(n / nàng)
            :mod(đ2 / đằng
                :mod(s / sau)
                :mod(đ3 / đòi_hỏi)
                    :manner(đ4 / đáng
                        :compound(t2 / thương))
                    :mod(ấ / ấy)))))

#::snt loài hoa thường hay mâu thuẫn !
(m / mâu_thuẫn
    :pivot(l / loài
        :mod(h / hoa))
    :frequency(wz1 / always))

#::snt nhưng bấy giờ tôi còn quá trẻ để mà biết yêu nàng . "
(c / contrast-01
    :time(b / bấy_giờ)
    :ARG2(t1 / trẻ
        :pivot(t / tôi)
        :degree(q / quá)
        :purpose(b1 / biết
            :theme(y / yêu
                :beneficiary-arg1(n1 / nàng))
            :pivot t)))

#::snt tôi đoán rằng em nhờ vào một chuyến thiên di của loài chim hoang để mà thoát đi .
(đ / đoán
    :agent(t / tôi)
    :topic(n / nhờ
        :beneficiary-arg0(e / em)
        :beneficiary(c / chuyến
            :compound(t1 / thiên_di)
            :poss(l / loài
                :mod(c2 / chim
                    :mod(h / hoang)))
            :quant 1)
        :purpose(t2 / thoát
            :compound(đ2 / đi))))

#::snt buổi sáng hôm ra đi , em đã dọn dẹp tinh cầu thật ngăn nắp .
(d / dọn_dẹp
    :agent(e / em)
    :tense(đ1 / đã)
    :theme(t / tinh_cầu)
    :manner(n / ngăn_nắp)
    :time(d1 / date-entity
        :dayperiod(b / buổi
            :compound(s / sáng)
            :mod(h / hôm
                :agent-of(r / ra
                    :compound(đ / đi)
                    :agent e)))))

#::snt em nạo vét kỹ càng các quả núi lửa đang hoạt động của em .
(n / nạo_vét
    :agent(e / em)
    :manner(k / kỹ_càng)
    :patient(n1 / núi_lửa
        :classifier(q / quả)
        :tense(đ / đang)
        :agent-of(h / hoạt_động)
        :poss(e1 / em)))

#::snt em có hai quả núi lửa đang hoạt động .
(c / có
    :pivot(e / em)
    :theme(n / núi_lửa
        :agent-of(h1 / hoạt_động
            :tense(đ / đang))
        :quant 2
            :classifier(q / quả)))

#::snt và chúng rất thuận tiện cho việc nấu ăn buổi sáng .
(a / and
    :op2(t / thuận_tiện
        :pivot(c / chúng)
        :degree(r / rất)
        :purpose(v1 / việc
            :theme(n / nấu_ăn
                :time(d / date-entity
                    :dayperiod(b / buổi
                        :compound(s / sáng)))))))

#::snt em cũng có một quả núi lửa đã tắt ...
(c1 / có
    :pivot(e / em)
    :theme(n / núi_lửa
        :pivot-of(t / tắt
            :tense(đ / đã))
        :quant 1
            :classifier(q / quả)))

#::snt nhưng , như lời em nói : " biết đâu đấy ! "
(c / contrast-01
    :ARG2(n2 / nói
        :agent(e / em)
        :topic(b / biết_đâu_đấy)))

#::snt nên em cũng nạo vét cả quả núi lửa đã tắt nữa .
(n1 / nạo_vét
    :agent(e / em)
    :patient(n2 / núi_lửa
        :classifier(q / quả)
        :pivot-of(t / tắt
            :tense(đ / đã))))

#::snt nạo vét kỹ , các quả núi lửa sẽ cháy đỏ và đều , không có phun trào .
(c1 / cháy
    :condition(n / nạo_vét
        :manner(k / kỹ))
    :theme(n1 / núi_lửa
        :classifier(q / quả))
    :tense(s / sẽ)
    :result(w1 / and
        :op2(đ / đỏ)
        :op1(đ1 / đều)
        :op3(p / phun
            :polarity -
            :compound(t / trào))))

#::snt các trận phun trào của núi lửa cũng giống như lửa trong lò sưởi .
(r / resemble
    :pivot(t / trận
        :mod(p / phun
            :compound(t1 / trào))
        :poss(n / núi_lửa))
    :compared-to(l / lửa
        :location(l1 / lò_sưởi))
    :degree(e / equal))

#::snt tất nhiên là trên trái đất của chúng ta , chúng ta thật nhỏ bé quá , không nạo vét được các quả núi lửa của mình .
(a / and
    :location(t2 / trái_đất
        :prep(t1 / trên)
        :poss(c1 / chúng_ta))
    :op1(n / nhỏ_bé
        :domain(c2 / chúng_ta)
        :degree(q / quá))
    :op2(n1 / nạo_vét
        :polarity -
        :patient(n2 / núi_lửa
            :classifier(q1 / quả)
            :poss(m / mình))
        :agent c2))

#::snt cho nên chúng gây cho ta nhiều điều phiền phức .
(g / gây
    :cause(c1 / chúng)
    :beneficiary-arg1(t / ta)
    :theme(đ / điều
        :degree(n / nhiều)
        :mod(p / phiền_phức)))

#::snt ông hoàng nhỏ cũng nhổ , với một chút ngậm ngùi , những cái mầm vừa nhú của bọn baobab .
(n1 / nhổ
    :agent(ô / ông_hoàng
        :mod(n / nhỏ))
    :manner(n2 / ngậm_ngùi)
    :patient(m1 / mầm
        :classifier(c1 / cái)
        :pivot-of(n4 / nhú
            :tense(v1 / vừa)
            :poss(b1 / baobab
                :classifier(b / bọn)))))

#::snt em đã nghĩ rằng mình sẽ không bao giờ về nữa .
(n / nghĩ
    :agent(e / em)
    :tense(đ / đã)
    :topic(v / về
        :agent(m / mình)
        :tense(s / sẽ)
        :polarity -
        :time(wz1 / ever)))

#::snt nhưng mọi việc quen thuộc này buổi sáng hôm nay sao đối với em thật vô cùng êm đềm .
(c / contrast-01
    :ARG2(ê / êm_đềm
        :pivot(v / việc
            :mod(q / quen_thuộc)
            :mod(n1 / này))
        :source(e / em)
        :degree(v1 / vô_cùng)
        :time(d / date-entity
            :dayperiod(b / buổi
                :compound(s / sáng)
                :mod(h / hôm_nay)))))

#::snt và , khi em tưới hoa lần cuối , và sửa soạn đậy nàng trong lồng kính , em cảm thấy muốn khóc .
(a / and
    :op2(c1 / cảm
        :agent(e1 / em)
        :compound(t2 / thấy
            :topic(m / muốn
                :topic(k2 / khóc)))
        :time(w2 / and
            :op1(t / tưới
                :agent(e / em)
                :theme(h / hoa)
                :time(l / lần
                    :mod(c / cuối)))
            :op2(s / sửa_soạn
                :purpose(đ / đậy
                    :patient(n / nàng)
                    :location(l1 / lồng
                        :prep(t1 / trong)
                        :mod(k1 / kính)))
                :agent e))))

#::snt - vĩnh biệt , em nói với hoa .
(n / nói
    :topic(v / vĩnh_biệt)
    :agent(e / em)
    :goal(h / hoa))

#::snt nhưng nàng không đáp .
(c / contrast-01
    :ARG2(đ / đáp
        :agent(n1 / nàng)
        :polarity -))

#::snt - vĩnh biệt , em nhắc lại .
(n / nhắc
    :topic(v / vĩnh_biệt)
    :agent(e / em)
    :compound(l / lại))

#::snt hoa ho lên .
(h1 / ho
    :agent(h / hoa)
    :compound(l / lên))

#::snt nhưng không phải vì viêm họng .
(c / contrast-01
    :ARG2(p / phải
        :polarity -
        :reason(v1 / viêm
            :compound(h / họng))))

#::snt - em đã khờ dại lắm , sau cùng cô nói .
(n / nói
    :topic(k / khờ_dại
        :pivot(e / em)
        :tense(đ / đã)
        :mod(l / lắm))
    :time(s / sau
        :mod(c / cùng))
    :agent(c1 / cô))

#::snt anh tha lỗi cho em .
(t / tha
    :agent(a / anh)
    :compound(l / lỗi)
    :beneficiary-arg1(e / em))

#::snt hãy cố gắng mà sống hạnh phúc .
(c / cố_gắng
    :mode imperative
    :purpose(s / sống
        :manner(h1 / hạnh_phúc)))

#::snt ông hoàng nhỏ ngạc nhiên vì không thấy nàng trách móc .
(n1 / ngạc_nhiên
    :pivot(ô / ông_hoàng
        :mod(n / nhỏ))
    :reason(t / thấy
        :polarity -
        :topic(t1 / trách_móc
            :agent(n2 / nàng))
        :agent ô))

#::snt em đứng sững , tay cầm nguyên cái bầu kính .
(a / and
    :op1(đ / đứng
        :agent(e / em)
        :compound(s / sững))
    :op2(c / cầm
        :agent(t / tay)
        :theme(b / bầu
            :classifier(c1 / cái)
            :mod(k / kính))))

#::snt em không hiểu được vẻ dịu dàng bình tĩnh ấy của nàng .
(h / hiểu
    :pivot(e / em)
    :polarity -
    :theme(v / vẻ
        :mod(ấ / ấy)
        :poss(n / nàng)
        :mod(w1 / and
            :op1(d / dịu_dàng)
            :op2(b / bình_tĩnh))))

#::snt - vâng , em yêu anh , hoa nói với em .
(n / nói
    :topic(y / yêu
        :pivot(e / em)
        :beneficiary-arg1(a / anh))
    :agent(h / hoa)
    :goal(e1 / em))

#::snt anh không biết gì cả , ấy là lỗi tại em .
(l1 / lỗi
    :pivot-of(b / biết
        :pivot(a / anh)
        :polarity -
        :theme(g / gì))
    :domain(ấ / ấy)
    :poss(e / em))

#::snt điều ấy không quan trọng .
(q / quan_trọng
    :domain(đ / điều
        :mod(ấ / ấy))
    :polarity -)

#::snt nhưng anh , anh cũng khờ dại như em .
(c / contrast-01
    :ARG2(k / khờ_dại
        :pivot(a1 / anh)
        :compared-to(e / em)
        :degree(e1 / equal)))

#::snt hãy cố gắng mà sống hạnh phúc ...
(c / cố_gắng
    :mode imperative
    :purpose(s / sống
        :manner(h1 / hạnh_phúc)))

#::snt anh bỏ cái bầu kính đó xuống đi .
(b / bỏ
    :agent(a / anh)
    :patient(b1 / bầu
        :classifier(c / cái)
        :mod(k / kính)
        :mod(đ / đó))
    :direction(x / xuống)
    :mode imperative)

#::snt em không cần đâu ...
(c / cần
    :pivot(e / em)
    :polarity -)

#::snt - thế gió ...
(g / gió
    :mode interrogative)

#::snt - em không hay bị cảm nhiều thế đâu ...
(c / cảm
    :pivot(e / em)
    :frequency(h / hay
        :polarity -)
    :modality(b / bị)
    :degree(n / nhiều
        :mod(t / thế)))

#::snt gió mát ban đêm tốt cho em lắm .
(t / tốt
    :cause(g / gió
        :mod(m / mát))
    :beneficiary-arg1(e / em)
    :degree(l / lắm)
    :time(d / date-entity
        :dayperiod(b / ban_đêm)))

#::snt em là một cái hoa mà .
(h / hoa
    :domain(e / em)
    :quant 1
        :classifier(c / cái))

#::snt - nhưng bọn thú ...
(c / contrast-01
    :ARG2(t / thú
        :classifier(b / bọn)))

#::snt - chắc em phải chịu đựng vài ba con sâu nếu em muốn biết bươm bướm là thế nào .
(o / obligate-01
    :result-arg1(c1 / chịu_đựng
        :agent(e / em)
        :theme(s / sâu
            :classifier(c2 / con))
        :condition(m / muốn
            :pivot(e1 / em)
            :theme(b / biết
                :topic(b1 / bươm_bướm
                    :domain-of(t / thế_nào))))))

#::snt hình như lũ bướm ấy thật là đẹp .
(đ / đẹp
    :domain(b / bướm
        :classifier(l / lũ)
        :mod(ấ / ấy))
    :degree(t / thật))

#::snt nếu không ai sẽ viếng thăm em ?
(v / viếng_thăm
    :tense(s / sẽ)
    :goal(e / em)
    :agent(a / amr-unknown))

#::snt anh sẽ đi xa .
(đ / đi
    :agent(a / anh)
    :tense(s / sẽ)
    :manner(x / xa))

#::snt còn bọn thú dữ , em không sợ .
(s / sợ
    :theme(t / thú_dữ
        :classifier(b / bọn))
    :pivot(e / em)
    :polarity -)

#::snt em có móng vuốt của em .
(c / có
    :pivot(e / em)
    :theme(m / móng_vuốt
        :part-of(e1 / em)))

#::snt nàng ngây thơ chìa ra bốn cái gai của mình .
(c / chìa
    :agent(n / nàng)
    :manner(n1 / ngây_thơ)
    :compound(r / ra)
    :theme(g / gai
        :poss(m / mình)
        :quant 4
            :classifier(c1 / cái)))

#::snt rồi nàng nói thêm :
(n1 / nói
    :agent(n / nàng)
    :compound(t / thêm))

#::snt - đừng chần chờ như vậy nữa , khó chịu lắm .
(c / chần_chờ
    :compared-to(v / vậy)
    :reason(k / khó_chịu
        :degree(l / lắm)))

#::snt anh đã quyết ra đi mà .
(q / quyết
    :agent(a / anh)
    :tense(đ / đã)
    :topic(r / ra
        :compound(đ1 / đi)))

#::snt hãy đi đi anh .
(đ / đi
    :mode imperative
    :agent(a / anh))

#::snt bởi vì nàng không muốn em nhìn thấy nàng khóc .
(m / muốn
    :pivot(n / nàng)
    :polarity -
    :topic(n1 / nhìn
        :agent(e / em)
        :compound(t / thấy)
        :topic(n2 / nàng
            :agent-of(k1 / khóc))))

#::snt đó là một đoá hoa vô cùng kiêu hãnh ...
(h / hoa
    :domain(đ / đó)
    :mod(k / kiêu_hãnh
        :degree(v / vô_cùng))
    :quant 1
        :classifier(đ1 / đoá))

#::snt cậu em đã đi qua vùng có các tiểu tinh cầu 325 , 326 , 327 , 328 , 329 và 330 .
(đ1 / đi
    :agent(e / em
        :classifier(c / cậu))
    :tense(đ / đã)
    :compound(q / qua)
    :location(v / vùng
        :pivot-of(c1 / có
            :theme(t / tiểu_tinh_cầu
                :mod(w2 / and
                    :op5(a4 / asteroid
                        :name(n4 / name
                            :op1(xx / 329)))
                    :op6(w3 / asteroid
                        :name(n5 / name
                            :op1(xx1 / 330)))
                    :op4(a3 / asteroid
                        :name(n3 / name
                            :op1(33 / 328)))
                    :op3(a2 / asteroid
                        :name(n2 / name
                            :op1(32 / 327)))
                    :op2(a1 / asteroid
                        :name(n1 / name
                            :op1(31 / 326)))
                    :op1(a / asteroid
                        :name(n / name
                            :op1(3 / 325))))))))

#::snt em bắt đầu đi thăm các tiểu tinh cầu ấy để kiếm việc và để học hỏi .
(b / bắt_đầu
    :agent(e / em)
    :theme(đ / đi
        :compound(t / thăm)
        :theme(t1 / tiểu_tinh_cầu
            :mod(ấ / ấy)))
    :purpose(a / and
        :op1(k / kiếm
            :theme(v / việc))
        :op2(h / học_hỏi)))

#::snt tiểu tinh cầu thứ nhất có một ông vua ở .
(c / có
    :location(t / tiểu_tinh_cầu
        :ord(o / ordinal-entity
            :value 1))
    :theme(v / vua
        :theme-of(ở / ở)
        :quant 1
            :classifier(ô / ông)))

#::snt nhà vua mặc áo đỏ tía đính lông thú , ngự trên một cái ngai vàng thật giản dị nhưng đồng thời cũng thật uy nghi .
(a / and
    :op1(m / mặc
        :agent(n / nhà_vua)
        :theme(á / áo
            :mod(đ / đỏ
                :mod(t / tía))
            :agent-of(đ1 / đính
                :theme(l / lông
                    :mod(t1 / thú)))))
    :op2(n1 / ngự
        :location(n2 / ngai_vàng
            :prep(t2 / trên)
            :quant 1
                :classifier(c / cái)
            :mod(c1 / contrast-01
                :ARG1(g / giản_dị
                    :degree(t3 / thật))
                :ARG2(u / uy_nghi
                    :degree(t4 / thật))))
        :agent n))

#::snt - à !
(à / à
    :mode expressive)

#::snt đây là một thần dân ! nhà vua kêu lên khi thấy ông hoàng nhỏ .
(k / kêu
    :topic(t / thần_dân
        :domain(đ / đây)
        :quant 1)
    :agent(n / nhà_vua)
    :compound(l1 / lên)
    :time(t1 / thấy
        :goal(ô / ông_hoàng
            :mod(n1 / nhỏ))
        :agent n))

#::snt và ông hoàng bé tự hỏi :
(a / and
    :op2(h / hỏi
        :agent(ô / ông_hoàng
            :mod(b / bé))))

#::snt - làm sao ông ta nhận được ra mình khi mà chưa gặp mình bao giờ nhỉ !
(n / nhận
    :pivot(ô / ông
        :mod(t / ta))
    :compound(r / ra)
    :theme(m / mình)
    :condition(g / gặp
        :polarity -
        :goal(m2 / mình)
        :agent ô
        :time(e / ever))
    :manner(a / amr-unknown))

#::snt em không biết rằng , đối với các bậc đế vương , thế giới đơn giản lắm .
(b / biết
    :pivot(e / em)
    :polarity -
    :topic(đ2 / đơn_giản
        :beneficiary(b1 / bậc
            :mod(đ1 / đế_vương))
        :domain(t / thế_giới)
        :degree(l / lắm)))

#::snt Det mọi người đều là thần dân .
(t / thần_dân
    :domain(n / người))

#::snt - ngươi hãy đến gần cho ta nhìn ngươi được kỹ , nhà vua nói với em , ngài rất khoái được làm vua với một người nào đó .
(n4 / nói
    :topic(đ / đến
        :agent(n / ngươi)
        :mode imperative
        :manner(g / gần)
        :purpose(n1 / nhìn
            :agent(t / ta)
            :goal(n2 / ngươi)
            :manner(k / kỹ)))
    :agent(n3 / nhà_vua
        :agent-of(k1 / khoái
            :pivot(n5 / ngài)
            :degree(r / rất)
            :theme(l / làm
                :modality(đ2 / được)
                :patient(v1 / vua)
                :goal(n6 / người
                    :mod(n7 / nào
                        :mod(đ3 / đó))
                    :quant 1))))
    :goal(e / em))

#::snt ông hoàng nhỏ đưa mắt tìm chỗ ngồi , nhưng cả tinh cầu đã bị cái áo choàng lông thú tuyệt đẹp choán hết chỗ .
(c111 / contrast-01
    :ARG1(đ / đưa_mắt
        :agent(ô / ông_hoàng
            :mod(n / nhỏ))
        :purpose(t / tìm
            :theme(c / chỗ
                :purpose(n1 / ngồi))))
    :ARG2(c3 / choán
        :patient(t1 / tinh_cầu)
        :tense(đ1 / đã)
        :modality(b / bị)
        :cause(á / áo_choàng
            :classifier(c2 / cái)
            :mod(l / lông
                :mod(t2 / thú))
            :mod(đ2 / đẹp
                :degree(t3 / tuyệt)))
        :compound(h / hết
            :theme(c4 / chỗ))))

#::snt em đành phải đứng , và , vì nhọc quá , em ngáp một cái .
(a / and
    :op1(đ / đành
        :theme(e / em)
        :result-arg1(đ1 / đứng
            :modality(p / phải)))
    :op2(n1 / ngáp
        :reason(n / nhọc
            :degree(q / quá))
        :agent(e1 / em)
        :frequency(c / cái
            :quant 1)))

#::snt - đứng trước một bậc đế vương mà ngáp là vô lễ , vua phán .
(p / phán
    :topic(v / vô_lễ
        :beneficiary-arg1(đ1 / đế_vương
            :quant 1
                :mod(b / bậc))
        :domain(n / ngáp))
    :agent(v1 / vua))

#::snt ta cấm ngươi ngáp .
(c / cấm
    :agent(t / ta)
    :patient(n / ngươi)
    :theme(n1 / ngáp))

#::snt - chỉ vì tôi không giữ được ạ !
(p / possible
    :agent(t / tôi)
    :polarity -
    :theme(g / giữ))

#::snt ông hoàng nhỏ rất ngượng đáp lại .
(đ / đáp
    :agent(ô / ông_hoàng
        :mod(n / nhỏ))
    :manner(n1 / ngượng
        :degree(r / rất))
    :compound(l / lại))

#::snt tôi từ xa đến đây mà chưa được ngủ ...
(a / and
    :op1(đ / đến
        :agent(t / tôi)
        :initialLocation(x / xa)
        :finalLocation(đ1 / đây))
    :op2(n / ngủ
        :modality(đ2 / được
            :polarity -)
        :agent t))

#::snt - thế thì , vua phán , ta ra lệnh cho ngươi ngáp .
(p / phán
    :agent(v / vua)
    :topic(r / ra_lệnh
        :agent(t1 / ta)
        :patient(n / ngươi)
        :theme(n1 / ngáp)))

#::snt bao nhiêu năm nay , ta chưa được thấy ai ngáp .
(t1 / thấy
    :time(n / năm
        :quant(b / bao_nhiêu)
        :mod(n1 / nay))
    :agent(t / ta)
    :polarity -
    :goal(a / ai
        :agent-of(n2 / ngáp)))

#::snt những cái ngáp đối với ta là cái lạ đấy .
(c1 / cái
    :domain(c / cái
        :mod(n1 / ngáp))
    :goal(t / ta)
    :mod(l1 / lạ))

#::snt ngươi ngáp nữa đi .
(n1 / ngáp
    :agent(n / ngươi)
    :mode imperative)

#::snt đó là lệnh ta .
(l1 / lệnh
    :domain(đ / đó)
    :poss(t / ta))

#::snt - cái này khó quá ... tôi không ngáp được nữa ...
(n1 / ngáp
    :reason(k / khó
        :domain(c / cái
            :mod(n / này))
        :degree(q / quá))
    :agent(t / tôi)
    :polarity -)

#::snt ông hoàng nhỏ nói , mặt đỏ bừng .
(n1 / nói
    :agent(ô / ông_hoàng
        :mod(n / nhỏ))
    :manner(đ / đỏ_bừng
        :pivot(m / mặt)))

#::snt - hừm ! hừm ! vua đáp .
(đ / đáp
    :agent(v / vua)
    :topic(m / multi-sentence
        :snt1(h / hừm
            :mode expressive)
        :snt2(h1 / hừm
            :mode expressive)))

#::snt thế thì ta ra lệnh cho ngươi khi thì ngáp khi thì ...
(r / ra_lệnh
    :agent(t1 / ta)
    :patient(n / ngươi)
    :theme(w1 / and
        :op1(n1 / ngáp
            :agent(ng / ngươi))))

#::snt nhà vua hơi lúng túng và có vẻ phật ý .
(a / and
    :op1(l / lúng_túng
        :domain(n / nhà_vua)
        :degree(h / hơi))
    :op2(p / phật_ý
        :agent(nh / nhà_vua)))

#::snt vì vua chú trọng nhất là uy quyền của mình phải được tuân theo .
(u / uy_quyền
    :domain(v1 / vua
        :domain-of(c / chú_trọng
            :degree(n / nhất)))
    :poss(m / mình)
    :patient-of(t / tuân
        :modality(p / phải)
        :compound(t1 / theo)))

#::snt ngài không tha thứ được sự trái lệnh .
(p / possible
    :polarity -
    :theme(t / tha_thứ
        :pivot(n / ngài)
        :theme(s / sự
            :mod(t1 / trái
                :compound(l / lệnh)))))

#::snt đó là một nhà vua chuyên chế .
(n / nhà_vua
    :domain(đ / đó)
    :mod(c / chuyên_chế)
    :quant 1)

#::snt nhưng , vì ngài rất tốt bụng , nên chỉ ra những cái lệnh hợp lý thôi .
(w1 / contrast-01
    :ARG2(r1 / ra
        :reason(t / tốt_bụng
            :domain(n1 / ngài)
            :degree(r / rất))
        :degree(c / chỉ)
        :theme(l / lệnh
            :classifier(c1 / cái)
            :mod(h / hợp_lý))))

#::snt ngài thường phán : " nếu ta mà ra lệnh cho một võ tướng phải biến thành chim biển , và võ tướng ấy chẳng tuân lệnh ta , thì ấy không phải là lỗi của võ tướng đó .
(p / phán
    :agent(n / ngài)
    :topic(l2 / lỗi
        :condition(r / ra_lệnh
            :agent(t1 / ta)
            :patient(v / võ_tướng
                :quant 1)
            :result-arg2(b / biến
                :compound(t2 / thành)
                :result-arg1(c1 / chim
                    :mod(b1 / biển)))
            :agent(t3 / tuân
                :agent(v2 / võ_tướng
                    :mod(ấ / ấy))
                :polarity -
                :theme(l / lệnh
                    :poss(t4 / ta))))
        :domain(ấ1 / ấy)
        :modality(p2 / phải
            :polarity -)
        :poss(v3 / võ_tướng
            :mod(đ / đó)))
    :frequency(wz1 / often))

#::snt ấy là lỗi của ta . "
(l1 / lỗi
    :domain(ấ / ấy)
    :poss(t / ta))

#::snt - tôi ngồi được không ạ ? ông hoàng nhỏ rụt rè hỏi .
(h / hỏi
    :topic(n / ngồi
        :agent(t / tôi)
        :mode interrogative)
    :agent(ô / ông_hoàng
        :mod(n1 / nhỏ))
    :manner(r / rụt_rè))

#::snt - ta lệnh cho ngươi ngồi , vua đáp lại , vừa uy nghi kéo một vạt áo choàng lông thú lên .
(a / and
    :op1(đ / đáp
        :topic(l / lệnh
            :agent(t / ta)
            :patient(n / ngươi)
            :theme(n1 / ngồi))
        :agent(v / vua)
        :compound(l1 / lại))
    :op2(k / kéo
        :manner(u / uy_nghi)
        :theme(v2 / vạt
            :mod(á / áo_choàng
                :mod(l2 / lông
                    :mod(t1 / thú)))
            :quant 1)
        :direction(l3 / lên)
        :agent v))

#::snt nhưng ông hoàng bé nhỏ lấy làm kinh ngạc .
(c / contrast-01
    :ARG2(l / lấy_làm
        :agent(ô / ông_hoàng
            :mod(b / bé_nhỏ))
        :theme(k / kinh_ngạc)))

#::snt em uống , hai mắt nhắm nghiền .
(a / and
    :op1(u / uống
        :agent(e / em))
    :op2(n / nhắm_nghiền
        :pivot(m / mắt
            :part-of e
            :quant 2)))

#::snt êm đềm như một ngày hội .
(ê / êm_đềm
    :compared-to(n1 / ngày
        :mod(h / hội)
        :quant 1)
    :degree(e / equal))

#::snt thứ nước này còn là một cái gì khác hơn mọi thứ nước uống .
(g / gì
    :pivot(t / thứ
        :mod(n / nước)
        :mod(n1 / này))
    :mod(k / khác
        :compared-to(n2 / nước
            :compound(u / uống))
        :degree(wz1 / more)
        :quant 1
            :classifier(c1 / cái)))

#::snt nó sinh ra từ cuộc đi bộ dưới trời sao , từ tiếng hát của cái ròng rọc , từ sự gắng sức của cánh tay tôi .
(s / sinh
    :patient(n / nó)
    :compound(r / ra)
    :source(w1 / and
        :op1(c / cuộc
            :mod(đ / đi
                :compound(b / bộ))
            :location(t1 / trời
                :prep(d / dưới)
                :mod(s1 / sao)))
        :op2(t3 / tiếng
            :compound(h / hát)
            :poss(r1 / ròng_rọc
                :classifier(c2 / cái)))
        :op3(s2 / sự
            :mod(g / gắng_sức)
            :mod(c4 / cánh_tay
                :part-of t))))

#::snt nó tốt lành cho tim ta , như một món quà tặng .
(t / tốt_lành
    :pivot(n / nó)
    :beneficiary(t1 / tim
        :part-of(t2 / ta))
    :mod(w1 / resemble
        :compared-to(q / quà
            :compound(t3 / tặng)
            :quant 1
                :classifier(m1 / món))))

#::snt ngày tôi còn là một cậu bé , ánh sáng của cây noel , tiếng nhạc của buổi lễ nửa đêm , những nụ cười dịu dàng cũng đã làm nên sự rực rỡ của món quà noel mà tôi được nhận .
(l2 / làm
    :time(b / bé
        :domain(t / tôi)
        :quant 1
            :classifier(c1 / cậu))
    :tense(đ / đã)
    :compound(n8 / nên)
    :result-arg1(s / sự
        :mod(r / rực_rỡ)
        :poss(q / quà
            :classifier(m1 / món)
            :wiki(n10 / noel
                :name(n11 / name
                    :op1(n12 / noel)))
            :theme-of(n9 / nhận
                :agent(t2 / tôi))))
    :cause(a / and
        :op1(á / ánh_sáng
            :poss(c3 / cây
                :wiki(n2 / noel
                    :name(n3 / name
                        :op1(n4 / noel)))))
        :op2(t1 / tiếng
            :mod(n5 / nhạc)
            :poss(b1 / buổi
                :mod(l1 / lễ))
            :dayperiod(n6 / nửa_đêm))
        :op3(n7 / nụ_cười
            :mod(d / dịu_dàng))))

#::snt - loài người nơi ông , ông hoàng nhỏ nói , trồng năm nghìn hoa hồng cũng trong một khu vườn ... thế mà họ chẳng tìm thấy cái họ tìm ...
(n2 / nói
    :agent(ô1 / ông_hoàng
        :mod(n1 / nhỏ))
    :topic(w1 / and
        :op1(t / trồng
            :agent(l / loài_người
                :location(n / nơi
                    :mod(ô / ông)))
            :theme(h / hoa_hồng
                :quant 5000)
            :location(k / khu
                :prep(t1 / trong)
                :mod(v / vườn)
                :quant 1))
        :op2(t3 / tìm
            :agent(h1 / họ)
            :polarity -
            :compound(t4 / thấy
                :theme(c2 / cái
                    :theme-of(t5 / tìm
                        :agent(h2 / họ)))))))

#::snt - họ chẳng tìm thấy đâu , tôi nói ...
(n / nói
    :topic(t / tìm
        :agent(h / họ)
        :polarity -
        :compound(t1 / thấy))
    :agent(t2 / tôi))

#::snt - trong khi cái họ muốn tìm lại có thể gặp trong chỉ một đoá hồng hoặc chỉ một ít nước ...
(c1 / contrast-01
    :ARG2(w1 / possible-01
        :theme(c / cái
            :patient-of(m / muốn
                :pivot(h / họ)
                :theme(t1 / tìm)))
        :theme(g / gặp
            :location(a / and
                :op1(h1 / hồng
                    :prep(t2 / trong)
                    :degree(c2 / chỉ)
                    :quant 1
                        :classifier(đ / đoá))
                :op2(n / nước
                    :degree(c3 / chỉ)
                    :quant(m2 / một_ít))))))

#::snt - đúng thế , cáo nói .
(n / nói
    :topic(đ / đúng)
    :agent(c / cáo))

#::snt và ông hoàng nhỏ nói thêm :
(a / and
    :op2(n1 / nói
        :agent(ô / ông_hoàng
            :mod(n / nhỏ))
        :compound(t / thêm)))

#::snt - con mắt vốn mù loà .
(m1 / mù_loà
    :domain(m / mắt
        :classifier(c / con)))

#::snt phải tìm kiếm với trái tim .
(r / recommend-01
    :theme(t / tìm_kiếm
        :manner(t1 / trái_tim)))

#::snt tôi đã uống .
(u / uống
    :agent(t / tôi)
    :tense(đ / đã))

#::snt tôi đã nghỉ ngơi thoả thuê .
(n / nghỉ_ngơi
    :agent(t / tôi)
    :tense(đ / đã)
    :manner(t1 / thoả_thuê))

#::snt vào lúc tinh mơ , cát một màu mật ong .
(r / resemble
    :time(l / lúc
        :mod(t / tinh_mơ))
    :compared-to(m1 / màu
        :poss(m2 / mật_ong))
    :degree(e / equal)
    :domain(m / màu
        :poss(c / cát)))

#::snt tôi thấy sung sướng cả vì cái màu mật ong ấy nữa .
(t1 / thấy
    :pivot(t / tôi)
    :topic(s / sung_sướng)
    :reason(m / màu
        :classifier(c1 / cái)
        :poss(m1 / mật_ong)
        :mod(ấ / ấy)))

#::snt tại sao tôi cứ phải khổ sở ...
(o / obligate-01
    :result-arg1(k / khổ_sở
        :pivot(t1 / tôi)
        :reason(wz1 / amr-unknown)))

#::snt - ông phải giữ lời hứa , ông hoàng nhỏ bây giờ lại ngồi xuống bên tôi , nhẹ nhàng nói .
(n3 / nói
    :agent(ô1 / ông_hoàng
        :mod(n / nhỏ))
    :time(n1 / ngồi
        :time(b / bây_giờ)
        :compound(x / xuống)
        :location(b1 / bên
            :mod(t / tôi)))
    :manner(n2 / nhẹ_nhàng)
    :topic(o / obligate-01
        :result-arg1(g / giữ
            :agent(ô / ông)
            :theme(l / lời
                :compound(h / hứa)))
        :agent ô1))

#::snt - lời hứa nào ?
(l / lời
    :compound(h / hứa)
    :mode interrogative)

#::snt - ông biết đấy .
(b / biết
    :pivot(ô / ông))

#::snt một cái rọ mõm cho con cừu của tôi ...
(r / rọ_mõm
    :beneficiary(c3 / cừu
        :classifier(c2 / con)
        :poss(t / tôi))
    :quant 1
        :classifier(c / cái))

#::snt tôi chịu trách nhiệm về cái hoa ấy !
(c / chịu
    :agent(t / tôi)
    :compound(t1 / trách_nhiệm)
    :about(h / hoa
        :classifier(c1 / cái)
        :mod(ấ / ấy)))

#::snt tôi rút từ trong túi áo ra các bản vẽ phác của tôi .
(r / rút
    :agent(t / tôi)
    :location(t3 / túi
        :prep(t2 / trong)
        :part-of(á / áo))
    :direction(r1 / ra)
    :theme(b / bản_vẽ
        :compound(p / phác)
        :poss(t4 / tôi)))

#::snt ông hoàng nhỏ trông thấy các bức vẽ bèn cười bảo :
(a / and
    :op1(t / trông
        :agent(ô / ông_hoàng
            :mod(n / nhỏ))
        :compound(t1 / thấy)
        :theme(v / vẽ
            :classifier(b / bức)))
    :op2(c1 / cười
        :theme(b2 / bảo)
        :agent ô))

#::snt - các cây baobap của ông , trông giống như các cây cải hoa ấy ...
(m / multi-sentence
    :snt1(d / dùng
        :pivot(n / nó
            :domain(g / gai))
        :polarity -
        :purpose(v1 / việc
            :mod(g1 / gì)))
    :snt2(t / tính
        :domain(n1 / nó)
        :mod(đ1 / độc_ác)
        :poss(h / hoa
            :classifier(c2 / cái))))

#::snt - ồ !
(ồ / ồ
    :mode expressive)

#::snt tôi vốn tự hào biết bao với bức vẽ các cây baobap !
(t1 / tự_hào
    :pivot(t / tôi)
    :degree(b / biết_bao)
    :about(v2 / vẽ
        :classifier(b1 / bức)
        :mod(c1 / cây
            :mod(b2 / baobap))))

#::snt - con cáo của ông ...
(c1 / cáo
    :classifier(c / con)
    :poss(ô / ông))

#::snt hai tai nó ... trông giống như hai cái sừng ... và lại dài quá !
(a / and
    :op1(t1 / trông
        :theme(t / tai
            :part-of(n / nó)
            :quant 2)
        :theme(w2 / resemble
            :compared-to(g / giống
                :theme(s / sừng
                    :quant 2
                        :classifier(c / cái)))
            :degree(e / equal)))
    :op2(d / dài
        :mod(q / quá)
        :pivot t))

#::snt và em lại cười nữa .
(a / and
    :op2(c / cười
        :agent(e / em)))

#::snt - cậu không công bằng , cậu nhỏ ơi , tôi vốn chỉ biết vẽ trăn kín với trăn mở thôi mà !
(m / multi-sentence
    :snt1(c1 / công_bằng
        :pivot(c / cậu)
        :polarity -)
    :snt2(b / biết
        :pivot(t / tôi)
        :degree(c3 / chỉ)
        :theme(v1 / vẽ
            :about(w22 / and
                :op1(t1 / trăn
                    :mod(k1 / kín))
                :op2(t2 / trăn
                    :mod(m1 / mở))))))

#::snt - ồ ! được cả thôi , em nói , trẻ con chúng hiểu hết .
(n / nói
    :agent(e / em)
    :topic(a / and
        :op1(ồ / ồ
            :mode expressive)
        :op2(đ / được)
        :op3(h / hiểu
            :pivot(c1 / chúng
                :domain(t1 / trẻ_con)))))

#::snt thế là tôi dùng bút chì phác một cái rọ mõm .
(d / dùng
    :agent(t1 / tôi)
    :instrument(b / bút_chì)
    :purpose(p / phác
        :theme(r / rọ_mõm
            :quant 1
                :classifier(c / cái))))

#::snt và lòng tôi se lại khi đưa cái rọ mõm đó cho em :
(a / and
    :op2(s / se
        :pivot(l / lòng
            :part-of(t / tôi))
        :compound(l1 / lại)
        :time(đ / đưa
            :theme(r / rọ_mõm
                :classifier(c / cái)
                :mod(đ1 / đó))
            :beneficiary-arg2(e / em)
            :agent t)))

#::snt - em có những dự định mà tôi không được rõ ...
(c / có
    :pivot(e / em)
    :theme(d / dự_định
        :theme-of(r / rõ
            :pivot(t / tôi)
            :polarity -)))

#::snt nhưng em chẳng trả lời tôi .
(c1 / contrast-01
    :ARG2(t / trả_lời
        :agent(e / em)
        :polarity -
        :goal(t1 / tôi)))

#::snt em bảo tôi :
(b / bảo
    :agent(e / em)
    :goal(t / tôi))

#::snt - ông biết không , ngày tôi rơi xuống Trái Đất ... mai đã là tròn một năm ...
(b / biết
    :pivot(ô / ông)
    :topic(n1 / năm
        :domain(m / mai)
        :tense(đ / đã)
        :time(d / date-entity
            :dayperiod(n / ngày
                :theme-of(r / rơi
                    :agent(t / tôi)
                    :compound(x / xuống
                        :location(wz1 / planet
                            :wiki(t1 / Trái_Đất
                                :name(wz2 / name
                                    :op2(wz3 / Đất)
                                    :op1(wz4 / Trái))))))))
        :quant 1)
    :polarity -)

#::snt rồi , sau một lát im lặng , em lại nói :
(n / nói
    :time(s / sau
        :mod(l / lát
            :mod(i / im_lặng)
            :quant 1))
    :agent(e / em))

#::snt - tôi rơi xuống ngay gần đây ...
(r / rơi
    :agent(t / tôi)
    :compound(x / xuống)
    :location(g / gần
        :degree(n / ngay)
        :mod(đ / đây)))

#::snt và em đỏ mặt .
(a / and
    :op2(đ / đỏ
        :pivot(e / em)
        :compound(m / mặt)))

#::snt và một lần nữa , chẳng hiểu tại sao , tôi cảm thấy buồn bã một cách kỳ lạ .
(a / and
    :op2(h / hiểu
        :frequency(l / lần
            :mod(n / nữa)
            :quant 1)
        :polarity -
        :topic(c1 / cảm
            :pivot(t1 / tôi)
            :compound(t2 / thấy)
            :manner(b / buồn_bã)
            :manner(c2 / cách
                :mod(k / kỳ_lạ)))
        :reason(w1 / amr-unknown)))

#::snt khi ấy tôi bỗng buột miệng hỏi :
(b1 / buột
    :time(k / khi
        :mod(ấ / ấy))
    :agent(t / tôi)
    :manner(b / bỗng)
    :compound(m / miệng)
    :purpose(h / hỏi))

#::snt - thế ra không phải là ngẫu nhiên mà , buổi sáng ấy , tôi gặp em , cách đây tám ngày , em lang thang một mình một nghìn dặm cách mọi vùng có người ở ! em trở lại nơi em rơi xuống hay sao ?
(m / multi-sentence
    :snt1(p / phải
        :polarity -
        :theme(n / ngẫu_nhiên
            :mod(l1 / lang_thang
                :agent(e1 / em)
                :manner(m1 / một_mình)
                :location(c1 / cách
                    :theme(v / vùng
                        :pivot-of(c2 / có
                            :pivot(n2 / người
                                :pivot-of(ở / ở)))))
                :quant(d1 / distance-quantity
                    :quant 1000
                        :unit(d / dặm))))
        :time(g / gặp
            :agent(t1 / tôi)
            :goal(e / em)
            :time(d2 / date-entity
                :dayperiod(b / buổi
                    :compound(s / sáng)
                    :mod(ấ / ấy)))
            :time(b1 / before
                :op1(n1 / now
                    :quant(t2 / temporal-quantity
                        :quant 1
                            :unit(t3 / tuần))))))
    :snt2(t31 / trở_lại
        :agent(e2 / em)
        :location(n3 / nơi
            :location-of(r / rơi
                :agent(e3 / em)
                :direction(x / xuống)))
        :mode interrogative))

#::snt ông hoàng nhỏ lại đỏ mặt .
(đ / đỏ
    :pivot(ô / ông_hoàng
        :mod(n / nhỏ))
    :compound(m / mặt))

#::snt và tôi nói thêm , ngập ngừng :
(a / and
    :op2(n / nói
        :agent(t / tôi)
        :compound(t1 / thêm)
        :manner(n1 / ngập_ngừng)))

#::snt - là vì , có lẽ , vì ngày kỷ niệm chăng ?
(p / possible-01
    :cause(n / ngày
        :mod(k / kỷ_niệm)
        :mode interrogative))

#::snt ông hoàng lại đỏ mặt lần nữa .
(đ / đỏ
    :domain(ô / ông_hoàng)
    :compound(m / mặt)
    :mod(a / again
        :quant 1))

#::snt em không bao giờ trả lời các câu hỏi , nhưng khi người ta đỏ mặt , như thế có nghĩa là " phải " , phải không ?
(c / contrast-01
    :ARG1(t / trả_lời
        :agent(e / em)
        :polarity -
        :theme(c1 / câu
            :compound(h / hỏi))
        :time(wz1 / ever))
    :ARG2(c2 / có
        :time(đ / đỏ
            :pivot(n1 / người_ta)
            :compound(m / mặt))
        :domain(t1 / thế)
        :compound(n3 / nghĩa
            :theme(p / phải))
        :mode interrogative))

#::snt - a , tôi nói , tôi sợ ...
(n / nói
    :agent(t / tôi)
    :topic(a / and
        :op1(a1 / a
            :mode expressive)
        :op2(s / sợ
            :pivot(t1 / tôi))))

#::snt nhưng em trả lời tôi :
(c / contrast-01
    :ARG2(t / trả_lời
        :agent(e / em)
        :goal(t1 / tôi)))

#::snt - bây giờ ông phải làm việc thôi .
(o / obligate-01
    :time(b / bây_giờ)
    :topic(l / làm_việc
        :agent(ô / ông)))

#::snt ông phải trở về chỗ cái máy của ông .
(o / obligate-01
    :topic(t / trở
        :agent(ô / ông)
        :compound(v / về)
        :location(c / chỗ
            :mod(m / máy
                :classifier(c1 / cái)
                :poss(ô1 / ông)))))

#::snt tôi đợi ông ở đây .
(đ / đợi
    :agent(t / tôi)
    :theme(ô / ông)
    :location(đ1 / đây
        :prep(ở / ở)))

#::snt chiều mai ông hãy đến ...
(đ / đến
    :agent(ô / ông)
    :mode imperative
    :time(d / date-entity
        :dayperiod(c / chiều
            :mod(m / mai))))

#::snt song tôi không yên tâm .
(c / contrast-01
    :ARG2(y / yên_tâm
        :pivot(t / tôi)
        :polarity -))

#::snt tôi nhớ chuyện con cáo .
(n / nhớ
    :pivot(t / tôi)
    :theme(c / chuyện
        :about(c2 / cáo
            :classifier(c1 / con))))

#::snt có nguy cơ là ta có thể khóc một tí nếu ta lỡ để cho ai cảm hoá mình ...
(k / khóc
    :domain(n / nguy_cơ)
    :agent(t / ta)
    :condition(l1 / lỡ
        :agent(t1 / ta)
        :theme(đ / để
            :theme(c3 / cảm_hoá
                :agent(a / ai)
                :patient(m1 / mình)))))

#::snt cạnh cái giếng , có một bức tường đổ nát .
(c2 / có
    :location(c / cạnh
        :mod(g / giếng
            :classifier(c1 / cái)))
    :theme(t / tường
        :mod(đ / đổ_nát)
        :quant 1
            :classifier(b / bức)))

#::snt khi ở chỗ làm việc trở lại vào chiều hôm sau , từ xa tôi đã thấy ông hoàng nhỏ của tôi ngồi trên đó , hai chân lơ lửng .
(t3 / thấy
    :time(t / trở_lại
        :location(c / chỗ
            :mod(l / làm_việc))
        :time(d / date-entity
            :dayperiod(c1 / chiều
                :mod(h / hôm_sau))))
    :location(x / xa
        :prep(t1 / từ))
    :agent(t2 / tôi)
    :tense(đ / đã)
    :topic(n1 / ngồi
        :agent(ô / ông_hoàng
            :mod(n / nhỏ)
            :poss(t4 / tôi))
        :location(đ1 / đó
            :prep(t5 / trên))
        :manner(l1 / lơ_lửng
            :theme(c3 / chân
                :quant 2))))

#::snt và tôi nghe em nói :
(a / and
    :op2(n / nghe
        :agent(t / tôi)
        :topic(e / em
            :agent-of(n1 / nói))))

#::snt - thế anh không nhớ sao ?
(n / nhớ
    :pivot(a / anh)
    :polarity -
    :mode interrogative)

#::snt không phải là chỗ này đâu !
(p / phải
    :polarity -
    :theme(c / chỗ
        :mod(n / này)))

#::snt một giọng nói khác có lẽ trả lời em , vì em lại đáp :
(t / trả_lời
    :agent(g / giọng
        :compound(n / nói)
        :mod(k / khác)
        :quant 1)
    :goal(e / em)
    :reason(đ / đáp
        :agent(e1 / em)))

#::snt - phải !
(p / phải
    :mode expressive)

#::snt phải !
(p / phải
    :mode expressive)

#::snt ngày thì đúng , nhưng không phải chỗ này ...
(c1 / contrast-01
    :ARG1(đ / đúng
        :domain(n / ngày))
    :ARG2(p / phải
        :polarity -
        :theme(c / chỗ
            :mod(n2 / này))))

#::snt tôi bước tiếp đến chỗ bức thành .
(b / bước
    :agent(t / tôi)
    :compound(t1 / tiếp)
    :purpose(đ / đến
        :location(c / chỗ
            :mod(t2 / thành
                :classifier(b1 / bức)))))

#::snt tôi vẫn không nhìn thấy , cũng chẳng nghe thấy ai .
(w1 / and
    :op1(n / nhìn
        :agent(t / tôi)
        :polarity -
        :compound(t1 / thấy))
    :op2(n1 / nghe
        :mod(c / cũng)
        :polarity -
        :compound(t2 / thấy)
        :theme(a / ai)
        :agent t))

#::snt thế nhưng , ông hoàng nhỏ lại đáp nữa :
(c / contrast-01
    :ARG2(đ / đáp
        :agent(ô / ông_hoàng
            :mod(n1 / nhỏ))))

#::snt - ... đúng thế .
(đ / đúng)

#::snt anh cứ xem nơi nào bắt đầu có dấu chân của tôi ở trên cát .
(x / xem
    :agent(a / anh)
    :theme(n / nơi
        :mod(n1 / nào)
        :theme-of(b / bắt_đầu
            :theme(c1 / có
                :theme(d / dấu
                    :mod(c2 / chân)
                    :poss(t / tôi)
                    :location(c4 / cát
                        :prep(t1 / trên)))))))

#::snt anh chỉ việc đợi tôi ở đấy .
(v / việc
    :agent(a / anh)
    :degree(c / chỉ)
    :agent-of(đ / đợi
        :theme(t / tôi)
        :location(đ1 / đấy
            :prep(ở / ở))))

#::snt tôi sẽ đến đêm nay .
(đ / đến
    :agent(t / tôi)
    :tense(s / sẽ)
    :time(d / date-entity
        :dayperiod(đ1 / đêm
            :mod(n / nay))))

#::snt tôi chỉ cách bức tường có hai mươi mét và tôi vẫn chẳng nhìn thấy gì .
(a / and
    :op1(c1 / cách
        :agent(t / tôi)
        :degree(c / chỉ)
        :theme(t1 / tường
            :classifier(b / bức))
        :quant(d / distance-quantity
            :quant 20
                :unit(m / mét)))
    :op2(n / nhìn
        :agent(t2 / tôi)
        :polarity -
        :compound(t3 / thấy)
        :theme(g / gì)))

#::snt ông hoàng nhỏ lại nói , sau một lát im lặng :
(n1 / nói
    :agent(ô / ông_hoàng
        :mod(n / nhỏ))
    :time(s / sau
        :mod(l1 / lát
            :mod(i / im_lặng)
            :quant 1)))

#::snt - anh có nọc tốt đấy chứ ? anh chắc là không làm tôi đau lâu chứ ?
(m / multi-sentence
    :snt1(c / có
        :pivot(a / anh)
        :theme(n / nọc
            :mod(t / tốt))
        :mode interrogative)
    :snt2(l1 / làm
        :cause(a1 / anh)
        :polarity -
        :topic(đ1 / đau
            :pivot(t1 / tôi)
            :manner(l2 / lâu))
        :mode interrogative))

#::snt tôi dừng lại , trái tim se thắt , nhưng tôi vẫn không hiểu .
(c / contrast-01
    :ARG2(h / hiểu
        :pivot(t2 / tôi)
        :polarity -)
    :ARG1(a / and
        :op1(d / dừng
            :agent(t / tôi)
            :compound(l / lại))
        :op2(s / se_thắt
            :pivot(t1 / trái_tim))))

#::snt - thôi bây giờ hãy đi đi , em nói .
(n / nói
    :topic(đ / đi
        :mode imperative
        :time(wz1 / now))
    :agent(e / em))

#::snt tôi muốn xuống .
(m / muốn
    :pivot(t / tôi)
    :theme(x / xuống))

#::snt thế là chính tôi nhìn xuống chân tường , và tôi nhảy dựng lên .
(a / and
    :op1(n / nhìn
        :agent(t1 / tôi)
        :compound(x / xuống)
        :location(c1 / chân
            :mod(t2 / tường)))
    :op2(n1 / nhảy
        :agent(t3 / tôi)
        :theme(d / dựng
            :compound(l / lên))))

#::snt nó ở đó , nó ngẩng đầu lên phía ông hoàng nhỏ , một giống rắn vàng có thể diệt ta trong ba mươi
(wz1 / multi-sentence
    :snt1(wz2 / and
        :op1(ở / ở
            :location(đ / đó)
            :agent(n / nó))
        :op2(n2 / ngẩng
            :theme(đ1 / đầu)
            :direction(l / lên)
            :location(p / phía
                :mod(ô / ông_hoàng
                    :mod(n3 / nhỏ)))
            :agent n))
    :snt2(wz4 / possible-01
        :op2(d / diệt
            :agent(g / giống
                :mod(r / rắn
                    :mod(v / vàng))
                :quant 1
                :domain n)
            :patient(t / ta)
            :time(w11 / duration
                :quant 30
                    :unit(gi / giây)))))

#::snt vừa lục túi tìm khẩu súng ngắn , tôi vừa chạy tới , nhưng , nghe tiếng tôi , con rắn liền chuồn trong cát , như thể một dòng nước chảy đi , và chẳng cần phải vội vàng , nó luồn lách giữa các tảng đá với một tiếng động nhè nhẹ như tiếng va chạm của kim khí .
(c111 / contrast-01
    :ARG1(a / and
        :op1(l / lục
            :theme(t / túi)
            :purpose(t1 / tìm
                :theme(s / súng_ngắn
                    :classifier(k / khẩu))))
        :op2(c / chạy
            :agent(t2 / tôi)
            :direction(t3 / tới)))
    :ARG2(a1 / and
        :op1(c2 / chuồn
            :time(n1 / nghe
                :theme(t4 / tiếng
                    :poss(t5 / tôi)))
            :agent(r / rắn
                :classifier(c1 / con))
            :manner(l1 / liền)
            :location(c3 / cát
                :prep(t6 / trong))
            :mod(w13 / resemble-01
                :compared-to(d / dòng
                    :compound(n3 / nước)
                    :theme-of(c4 / chảy
                        :compound(đ / đi))
                    :quant 1)
                :degree(e / equal)))
        :op2(l2 / luồn_lách
            :manner(v3 / vội_vàng
                :modality(c6 / cần
                    :polarity -)
                :modality(p / phải))
            :agent(n4 / nó)
            :location(t7 / tảng
                :prep(g / giữa)
                :mod(đ1 / đá))
            :manner(t8 / tiếng_động
                :mod(n5 / nhè_nhẹ)
                :mod(w12 / resemble
                    :compared-to(t9 / tiếng
                        :mod(v5 / va_chạm)
                        :poss(k1 / kim_khí))
                    :degree(e1 / equal))
                :quant 1))))

#::snt tôi đến bên bức tường vừa đúng lúc để đón trong vòng tay tôi ông hoàng bé nhỏ , trắng bệch như tuyết .
(w1 / and
    :op1(đ / đến
        :agent(t / tôi)
        :location(b / bên
            :mod(t1 / tường
                :classifier(b1 / bức)))
        :time(l / lúc
            :mod(đ1 / đúng))
        :purpose(đ3 / đón
            :location(v1 / vòng_tay
                :prep(t2 / trong)
                :part-of(t3 / tôi))
            :patient(ô / ông_hoàng
                :mod(b2 / bé_nhỏ))))
    :op2(t4 / trắng_bệch
        :compared-to(t5 / tuyết)
        :degree(e / equal)))

#::snt - chuyện quái quỉ gì thế !
(c / chuyện
    :mod(q / quái_quỉ)
    :mod(g / gì
        :mod(t / thế))
    :mode expressive)

#::snt bây giờ em lại đi trò chuyện với rắn !
(t / trò_chuyện
    :agent(e / em)
    :goal(r / rắn)
    :time(n / now))

#::snt tôi tháo chiếc khăn vàng kim bao giờ cũng khoác ở cổ em .
(t1 / tháo
    :agent(t / tôi)
    :patient(k / khăn
        :classifier(c / chiếc)
        :mod(v / vàng
            :compound(k1 / kim))
        :agent-of(k2 / khoác
            :location(c2 / cổ
                :prep(ở / ở)
                :part-of(e / em))
            :agent e
            :time(wz1 / always))))

#::snt tôi dấp nước vào trán em và cho em uống .
(a / and
    :op1(d / dấp
        :agent(t / tôi)
        :theme(n / nước)
        :goal(t1 / trán
            :part-of(e / em)))
    :op2(c / cho
        :beneficiary-arg2(e1 / em
            :agent-of(u / uống))
        :agent t))

#::snt và bây giờ , tôi không dám hỏi em điều gì nữa .
(a / and
    :op2(d / dám
        :agent(t / tôi)
        :polarity -
        :theme(h / hỏi
            :goal(e / em)
            :topic(đ / điều
                :mod(g / gì)))
        :time(wz1 / now)))

#::snt em nhìn tôi nghiêm nghị và đưa hai tay ôm cổ tôi .
(a / and
    :op1(n / nhìn
        :agent(e / em)
        :goal(t / tôi)
        :manner(n1 / nghiêm_nghị))
    :op2(đ / đưa
        :theme(t1 / tay
            :part-of e
            :quant 2)
        :purpose(ô / ôm
            :theme(c / cổ
                :part-of(t2 / tôi)))
        :agent e))

#::snt tôi nghe tiếng tim em đập như tiếng đập của một con chim sắp chết , khi bị trúng đạn súng săn .
(n / nghe
    :agent(t / tôi)
    :theme(t1 / tiếng
        :mod(t2 / tim
            :part-of(e / em)
            :agent-of(đ / đập
                :resemble-01(r / resemble
                    :compared-to(t3 / tiếng
                        :compound(đ1 / đập)
                        :poss(c2 / chim
                            :agent-of(c3 / chết
                                :tense(s / sắp)
                                :time(t4 / trúng
                                    :modality(b / bị)
                                    :instrument(đ2 / đạn
                                        :poss(s1 / súng
                                            :compound(s2 / săn)))))
                            :quant 1
                                :classifier(c1 / con)))
                    :degree(e1 / equal))))))

#::snt em bảo tôi :
(b / bảo
    :agent(e / em)
    :goal(t / tôi))

#::snt - tôi rất mừng , vì biết ông đã tìm ra máy bay của ông thiếu cái gì .
(m / mừng
    :pivot(t / tôi)
    :degree(r / rất)
    :reason(b / biết
        :topic(t1 / tìm
            :agent(ô / ông)
            :tense(đ / đã)
            :compound(r1 / ra)
            :topic(t2 / thiếu
                :theme(m1 / máy_bay
                    :poss(ô1 / ông))
                :theme(g / gì
                    :classifier(c1 / cái))))
        :pivot t))

#::snt ông sắp trở về nhà ông ...
(t / trở
    :agent(ô / ông)
    :tense(s / sắp)
    :compound(v / về)
    :location(n / nhà
        :poss(ô1 / ông)))

#::snt - sao em biết ?
(b / biết
    :pivot(e / em)
    :manner(a / arm-unknown))

#::snt đúng là lúc ấy tôi vừa định báo cho em biết , tưởng đã tuyệt vọng rồi , bỗng dưng tôi lại sửa được máy .
(wz1 / multi-sentence
    :snt1(b / báo
        :agent(t / tôi)
        :modality(đ1 / định
            :time(l1 / lúc
                :mod(ấ / ấy))
            :tense(v / vừa))
        :purpose(b1 / biết
            :pivot(e / em)))
    :snt2(c / contrast-01
        :ARG1(t1 / tưởng
            :topic(t2 / tuyệt_vọng
                :tense(đ2 / đã)
                :pivot t)
            :pivot t)
        :ARG2(s / sửa
            :manner(b2 / bỗng_dưng)
            :agent(t3 / tôi)
            :patient(m / máy))))

#::snt em chẳng trả lời câu hỏi của tôi , nhưng lại nói thêm :
(c11 / contrast-01
    :ARG1(t / trả_lời
        :agent(e / em)
        :polarity -
        :theme(c1 / câu
            :compound(h / hỏi)
            :poss(t1 / tôi)))
    :ARG2(n1 / nói
        :compound(t2 / thêm)
        :agent e))

#::snt - tôi cũng như ông , hôm nay tôi về nhà tôi ...
(v / về
    :time(h / hôm_nay)
    :agent(t1 / tôi)
    :finalLocation(n1 / nhà
        :poss(t2 / tôi))
    :mod(w1 / resemble
        :ARG1(t / tôi)
        :ARG2(ô / ông)))

#::snt rồi , giọng ngậm ngùi :
(n / ngậm_ngùi
    :domain(g / giọng))

#::snt - xa hơn nhiều lắm ... khó hơn nhiều lắm ...
(w1 / multi-sentence
    :snt1(x / xa
        :degree(m / more
            :quant(m1 / much)))
    :snt2(k / khó
        :degree(m2 / more
            :quant(m3 / much))))

#::snt tôi có cảm giác vừa xảy ra một việc gì dị thường .
(c1 / cảm_giác
    :pivot(t / tôi)
    :topic(x / xảy
        :tense(v / vừa)
        :compound(r / ra)
        :theme(v1 / việc
            :mod(g / gì)
            :mod(d / dị_thường)
            :quant 1)))

#::snt tôi siết chặt em trong vòng tay tôi như một em bé , nhưng khi ấy tôi vẫn có cảm giác em đang tuột thẳng xuống một vực thẳm nào đó dù tôi cố níu giữ lại ...
(c1 / contrast-01
    :op1(s / siết
        :agent(t / tôi)
        :manner(c / chặt)
        :patient(e / em)
        :location(v / vòng_tay
            :prep(t1 / trong)
            :part-of(t2 / tôi))
        :mod(w2 / resemble
            :compared-to(e1 / em
                :mod(b / bé)
                :quant 1)))
    :op2(c2 / cảm_giác
        :time(k / khi
            :mod(ấ / ấy))
        :pivot(t3 / tôi)
        :topic(t4 / tuột
            :agent(e2 / em)
            :tense(đ / đang)
            :direction(t5 / thẳng)
            :direction(x / xuống
                :location(v2 / vực
                    :mod(t6 / thẳm)
                    :mod(n2 / nào)
                    :mod(đ1 / đó)
                    :quant 1))
            :concession(c3 / cố
                :agent(t7 / tôi)
                :theme(n3 / níu
                    :compound(g / giữ))))))

#::snt ánh mắt em nghiêm nghị , mất hút vào một nơi rất xa :
(w11 / and
    :op1(n / nghiêm_nghị
        :theme(á / ánh
            :mod(m / mắt)
            :poss(e / em)))
    :op2(m1 / mất_hút
        :location(n1 / nơi
            :prep(v / vào)
            :mod(x / xa
                :degree(r / rất))
            :quant 1)
        :theme á))

#::snt - tôi có con cừu của ông .
(c / có
    :pivot(t / tôi)
    :theme(c2 / cừu
        :classifier(c1 / con)
        :poss(ô / ông)))

#::snt và tôi có cái thùng cho con cừu .
(a / and
    :op2(c / có
        :pivot(t / tôi)
        :theme(t1 / thùng
            :classifier(c1 / cái))
        :beneficiary(c4 / cừu
            :classifier(c3 / con))))

#::snt và tôi có cái rọ mõm ...
(a / and
    :op2(c / có
        :pivot(t / tôi)
        :theme(r / rọ_mõm
            :classifier(c1 / cái))))

#::snt và em mỉm cười buồn buồn .
(a / and
    :op2(m / mỉm
        :agent(e / em)
        :compound(c / cười)
        :manner(b / buồn_buồn)))

#::snt tôi đợi rất lâu .
(đ / đợi
    :agent(t / tôi)
    :manner(l / lâu
        :degree(r / rất)))

#::snt tôi thấy em dần dà ấm lại :
(t1 / thấy
    :pivot(t / tôi)
    :topic(ấ / ấm
        :pivot(e / em)
        :manner(d / dần_dà)
        :compound(l / lại)))

#::snt - cậu em ạ , em đã sợ hãi ...
(s / sợ_hãi
    :domain(e1 / em)
    :tense(đ / đã))

#::snt em có sợ hãi , đúng rồi !
(wz1 / multi-sentence
    :snt1(s / sợ_hãi
        :domain(e / em))
    :snt2(đ / đúng
        :mode expressive))

#::snt nhưng em cười dịu dàng :
(c1 / contrast-01
    :ARG2(c / cười
        :agent(e / em)
        :manner(d / dịu_dàng)))

#::snt - chiều nay tôi sẽ còn sợ nhiều hơn ...
(s1 / sợ
    :pivot(t / tôi)
    :tense(s / sẽ)
    :degree(n1 / nhiều
        :mod(h / hơn))
    :time(d / date-entity
        :dayperiod(c / chiều
            :mod(n / nay))))

#::snt một lần nữa , tôi lại cảm thấy lạnh buốt người vì một cái gì đó không thể cứu vãn được nữa .
(c / cảm
    :pivot(t / tôi)
    :compound(t1 / thấy)
    :topic(l2 / lạnh
        :compound(b / buốt)
        :pivot(n1 / người))
    :cause(g / gì
        :mod(đ / đó)
        :patient-of(c2 / cứu_vãn
            :modality(k / không_thể)
            :agent t)
        :quant 1
            :classifier(c1 / cái))
    :mod(a / again
        :frequency(w11 / 1)))

#::snt và tôi hiểu rằng tôi không thể chịu nổi ý nghĩ rồi đây không bao giờ còn nghe thấy tiếng cười này nữa .
(a / and
    :op2(h / hiểu
        :pivot(t / tôi)
        :topic(p / possible-01
            :agent(t1 / tôi)
            :theme(c / chịu
                :polarity -
                :degree(n / nổi)
                :theme(ý / ý_nghĩ)
                :result(n1 / nghe
                    :time(r1 / rồi_đây)
                    :polarity -
                    :compound(t2 / thấy
                        :theme(t3 / tiếng
                            :compound(c2 / cười)
                            :mod(n2 / này)))
                    :time(wz1 / ever)
                    :agent t)))))

#::snt tiếng cười ấy đối với tôi như một nguồn nước trong sa mạc .
(r / resemble
    :theme(t / tiếng
        :compound(c / cười)
        :mod(ấ / ấy))
    :goal(t1 / tôi)
    :compared-to(n1 / nguồn
        :mod(n2 / nước)
        :location(s / sa_mạc
            :prep(t2 / trong))
        :quant 1
        :degree(e / equal)))

#::snt - cậu em ạ , tôi còn muốn được nghe em cười ...
(m / muốn
    :pivot(t / tôi)
    :theme(n / nghe
        :modality(đ / được)
        :topic(c2 / cười
            :agent(e1 / em
                :domain(c / cậu
                    :mod(e / em))))))

#::snt nhưng em bảo tôi :
(c / contrast-01
    :ARG2(b / bảo
        :agent(e / em)
        :goal(t / tôi)))

#::snt - đêm nay , vừa đúng một năm .
(đ1 / đúng
    :duration(n1 / năm
        :quant 1)
    :time(d / date-entity
        :dayperiod(đ / đêm
            :mod(n / nay))))

#::snt ngôi sao của tôi sẽ lại ở đúng bên trên chỗ tôi rơi xuống năm ngoái ...
(ở / ở
    :theme(s / sao
        :classifier(n / ngôi)
        :poss(t / tôi))
    :tense(s1 / sẽ)
    :location(b1 / bên
        :mod(t1 / trên)
        :mod(c1 / chỗ
            :mod(đ / đúng)
            :location-of(r / rơi
                :agent(t2 / tôi)
                :compound(x / xuống)
                :time(b / before
                    :op1(n1 / now
                        :quant(t21 / temporal-quantity
                            :quant 1
                                :unit(y / year))))))))

#::snt - cậu em ạ , có phải là một cơn ác mộng không , chuyện rắn , cuộc hẹn gặp với ngôi sao này ...
(p / phải
    :theme(á / ác_mộng
        :theme(w1 / and
            :op1(wz1 / chuyện
                :mod(r / rắn))
            :op2(c4 / cuộc
                :compound(h / hẹn)
                :purpose(g / gặp))
            :op3(s / sao
                :classifier(n / ngôi)
                :mod(n1 / này)))
        :quant 1
            :classifier(c2 / cơn))
    :polarity(a / amr-unknown))

#::snt nhưng em không trả lời câu tôi hỏi .
(c1 / contrast-01
    :ARG2(t / trả_lời
        :agent(e / em)
        :polarity -
        :goal(t1 / tôi)))

#::snt em bảo tôi :
(b / bảo
    :agent(e / em)
    :goal(t / tôi))

#::snt - cái gì mà quan trọng , cái đó không nhìn thấy được ...
(w1 / multi-sentence
    :snt1(q / quan_trọng
        :domain(g / gì
            :classifier(c / cái)))
    :snt2(n / nhìn
        :theme(đ / đó
            :classifier(c1 / cái))
        :polarity -
        :compound(t / thấy)))

#::snt - đúng thế ...
(đ / đúng
    :mod(t / thế))

#::snt - giống như bông hoa của tôi .
(r / resemble
    :compared-to(h / hoa
        :classifier(b / bông)
        :poss(t / tôi))
    :degree(e / equal))

#::snt khi ông yêu một bông hoa ở trên một ngôi sao , thật là êm đềm , ban đêm , khi ông nhìn trời .
(ê / êm_đềm
    :condition(y / yêu
        :pivot(ô / ông)
        :theme(h / hoa
            :location(s / sao
                :prep(t / trên)
                :quant 1
                    :classifier(n / ngôi))
            :quant 1
                :classifier(b / bông)))
    :time(n1 / nhìn
        :agent(ô1 / ông)
        :theme(t2 / trời
            :time(d / date-entity
                :dayperiod(b1 / ban_đêm)))))

#::snt tất cả các ngôi sao đều nở hoa .
(n1 / nở
    :pivot(s / sao
        :classifier(n / ngôi)
        :mod(a / all))
    :theme(h / hoa))

#::snt - đúng thế ...
(đ / đúng
    :mod(t / thế))
	
#::snt ông hoàng bé nhỏ , vốn rất hay đặt câu hỏi cho tôi , lại dường như không bao giờ chú ý nghe tôi hỏi .
(c2 / chú_ý
    :pivot(ô / ông_hoàng
        :mod(b / bé_nhỏ)
        :pivot-of(đ / đặt
            :degree(h / hay
                :degree(r / rất))
            :theme(c / câu
                :compound(h1 / hỏi))
            :beneficiary(t / tôi)
            :agent ô))
    :modality(d / dường_như)
    :topic(n / nghe
        :topic(h2 / hỏi
            :agent t)
        :pivot ô)
    :time(a / always)
    :polarity -)

#::snt ví dụ ông gọi nó là tiểu hành tinh 3251 .
(e / example
    :topic(g / gọi
        :agent(ô / ông)
        :theme(n / nó)
        :result-arg1(p / planet
            :wiki(wz1 / Tiểu_hành_tinh_3251)
            :name(n2 / name
                :op1(wz2 / tiểu_hành_tinh)
                :op2(wz3 / 3251)))))

#::snt tôi có những lý do chính đáng để coi rằng cái hành tinh từ đó ông hoàng nhỏ đến đây là tiểu hành tinh b612 .
(c2 / coi
    :reason(c / có
        :pivot(t / tôi)
        :theme(l / lý_do
            :mod(c1 / chính_đáng)))
    :pivot t
    :topic(p / planet
        :domain(h / hành_tinh
            :domain-of(đ2 / đến
                :agent(ô / ông_hoàng
                    :mod(n1 / nhỏ))
                :location(đ3 / đây)))
        :wiki(wz2 / Tiểu_hành_tinh_B612)
        :name(n3 / name
            :op2(wz3 / b612)
            :op1(wz4 / tiểu_hành_tinh))))

#::snt tiểu hành tinh đó chỉ được trông thấy có một lần trong kính viễn vọng năm 1909 , bởi một nhà thiên văn Thổ Nhĩ Kỳ .
(t1 / trông
    :goal(t / tiểu_hành_tinh
        :mod(đ / đó))
    :modality(đ1 / được
        :degree(c / chỉ))
    :compound(t2 / thấy)
    :instrument(k / kính_viễn_vọng)
    :agent(n1 / nhà
        :compound(t4 / thiên_văn)
        :mod(c3 / country
            :wiki(wz1 / Thổ_Nhĩ_Kỳ)
            :name(n3 / name
                :op1(wz2 / Thổ)
                :op2(wz3 / Nhĩ)
                :op3(wz4 / Kỳ))))
    :time(d / date-entity
        :year 1909)
    :frequency(h2 / have-frequency-91
        :unit(l / lần)
        :quant 1))

#::snt người lớn là thế đấy .
(t / thế
    :domain(n / người_lớn)
    :mod(đ / đấy))

#::snt và lần này , tất cả mọi người đồng ý với ông ta .
(a / and
    :op2(đ / đồng_ý
        :time(l / lần
            :mod(n / này))
        :agent(n1 / người
            :mod(a1 / all))
        :goal(ô / ông
            :mod(t1 / ta))))

#::snt những người lớn rất thích chữ số .
(t / thích
    :pivot(n1 / người_lớn)
    :degree(r / rất)
    :theme(c / chữ_số))

#::snt khi bạn nói chuyện với họ về một người bạn mới , không bao giờ họ hỏi bạn về cái cốt yếu đâu .
(h2 / hỏi
    :time(n / nói_chuyện
        :agent(b / bạn)
        :goal(h / họ)
        :topic(n1 / người
            :mod(b1 / bạn)
            :mod(m1 / mới)
            :quant 1))
    :polarity -
    :time(b2 / bao_giờ)
    :goal(b3 / bạn)
    :topic(c / cái
        :mod(c1 / cốt_yếu))
    :agent h)

#::snt họ không bao giờ hỏi : " giọng nói hắn ta thế nào ?
(h1 / hỏi
    :agent(h / họ)
    :polarity -
    :time(b / bao_giờ)
    :topic(g / giọng
        :mod(n / nói)
        :poss(h2 / hắn
            :mod(t / ta))
        :manner(a / amr-unknown)))

#::snt như vậy đó , nếu các bạn bảo họ : " ông hoàng bé nhỏ là có thật chứ , chứng cứ là cậu ta rất đẹp , cậu ta cười và cậu ta thích có một con cừu .
(b1 / bảo
    :manner(v / vậy
        :mod(đ / đó))
    :agent(b / bạn)
    :goal(h / họ)
    :topic(c1 / có
        :domain(ô / ông_hoàng
            :mod(b2 / bé_nhỏ))
        :degree(t / thật)
        :modality(c2 / chứ)
        :reason(c3 / chứng_cứ
            :example(a / and
                :op1(đ1 / đẹp
                    :degree(r / rất)
                    :domain ô)
                :op2(c6 / cười
                    :agent ô)
                :op3(t4 / thích
                    :topic(c8 / có
                        :theme(c10 / cừu
                            :quant 1
                                :classifier(c9 / con))
                        :pivot ô)
                    :pivot ô)))))

#::snt khi người ta thích có một con cừu , thếlà có người ấy chứ !
(c3 / có
    :reason(t1 / thích
        :pivot(n / người
            :mod(t / ta))
        :topic(c / có
            :theme(c2 / cừu
                :quant 1
                    :classifier(c1 / con))
            :pivot n))
    :theme(n1 / người
        :mod(ấ / ấy))
    :modality(c4 / chứ))

#::snt nhưng nếu bạn hỏi họ : " cái hành tinh từ đó cậu ấy đi đến đây là tiểu tinh cầu B612 " , thế là họ nghe ra ngay , và thôi không phá quấy bạn với các câu hỏi của họ nữa .
(c4 / contrast-01
    :ARG2(a / and
        :condition(h / hỏi
            :agent(b / bạn)
            :goal(h1 / họ)
            :topic(p2 / planet
                :domain(h2 / hành_tinh
                    :domain-of(đ1 / đi
                        :agent(c1 / cậu
                            :mod(ấ / ấy))
                        :compound(đ2 / đến)))
                :name(n5 / name
                    :op1(wz1 / tiểu_tinh_cầu)
                    :op2(wz2 / B-612))
                :wiki(wz3 / Tiểu_tinh_cầu_B612)))
        :op1(n2 / nghe_ra
            :manner(n3 / ngay)
            :agent h1)
        :op2(t3 / thôi
            :topic(p / phá_quấy
                :polarity -
                :patient(b2 / bạn)
                :topic(c3 / câu
                    :compound(h4 / hỏi)
                    :poss h1)
                :manner(n4 / nữa)
                :agent h1)
            :agent h1)))

#::snt họ là thế .
(t / thế
    :domain(h / họ))

#::snt không nên giận họ .
(r / recommend-01
    :polarity -
    :topic(g / giận
        :goal(h / họ)))

#::snt trẻ con phải hết sức rộng lượng đối với người lớn .
(r / recommend-01
    :topic(r1 / rộng_lượng
        :domain(t / trẻ_con)
        :degree(h / hết_sức)
        :beneficiary(n / người_lớn)))

#::snt nhưng chắc chắn rằng đối với bọn ta là những người hiểu đời , chúng ta cóc cần những con số !
(c4 / contrast-01
    :ARG2(c / chắc_chắn
        :topic(h / hiểu
            :domain(b / bọn
                :compound(t / ta))
            :pivot(n2 / người)
            :theme(đ1 / đời))
        :topic(c3 / cần
            :polarity -
            :theme(c41 / con_số)
            :pivot b)))

#::snt tôi đã rất thích bắt đầu kể câu chuyện này như kiểu một câu chuyện thần tiên .
(t1 / thích
    :pivot(t / tôi)
    :tense(đ / đã)
    :degree(r / rất)
    :topic(b / bắt_đầu
        :topic(k / kể
            :topic(c / câu_chuyện
                :mod(n / này))
            :manner(k1 / kiểu
                :mod(c1 / câu_chuyện
                    :mod(t2 / thần_tiên)
                    :quant 1))
            :agent t)
        :agent t))

#::snt tôi đã rất thích nói thế này :
(t1 / thích
    :pivot(t / tôi)
    :tense(đ / đã)
    :degree(r / rất)
    :topic(n / nói
        :manner(t2 / thế
            :mod(n1 / này))
        :agent t))

#::snt " Xưa có một lần , một ông hoàng bé nhỏ ở trên một tinh cầu chỉ lớn hơn cậu ấy có một tí , cậu ấy thấy cần có một người bạn thân ... "
(a / and
    :time(x / Xưa)
    :op1(ở / ở
        :pivot(ô / ông_hoàng
            :mod(b / bé_nhỏ)
            :quant 1)
        :location(t1 / tinh_cầu
            :mod(l1 / lớn
                :compared-to ô
                :degree(m4 / more
                    :quant(m3 / một_tí)))
            :quant 1))
    :op2(t2 / thấy
        :compound(c5 / cần
            :compound(c6 / có))
        :theme(n / người
            :mod(b1 / bạn
                :mod(t3 / thân))
            :quant 1)
        :pivot ô)
    :frequency(h / have-frequency-91
        :unit(l / lần)
        :quant 1))

#::snt đối với những ai hiểu đời , kể như vậy có vẻ thật hơn nhiều .
(k / kể
    :beneficiary-arg0(n / những_ai
        :pivot-of(h / hiểu
            :theme(đ1 / đời)))
    :manner(v / vậy)
    :manner(t / thật
        :modality(c / có
            :compound(v1 / vẻ))
        :degree(h1 / hơn
            :degree(n2 / nhiều))))

#::snt bởi vì tôi không muốn người ta đọc cuốn sách của tôi một cách hời hợt .
(c / cause-01
    :pivot(m / muốn
        :pivot(t / tôi)
        :polarity -
        :topic(đ / đọc
            :agent(n / người_ta)
            :theme(s / sách
                :classifier(c1 / cuốn)
                :poss t)
            :manner(m1 / một_cách
                :mod(h / hời_hợt)))))

#::snt khi kể lại các kỷ niệm này , tôi buồn tủi biết bao .
(b / buồn_tủi
    :time(k1 / kể
        :compound(l / lại)
        :topic(k2 / kỷ_niệm
            :mod(n / này)))
    :domain(t / tôi)
    :degree(b1 / biết_bao))

#::snt nếu tôi cố gắng tả lại em ở đây , chính là để tôi không quên em .
(q / quên
    :condition(c / cố_gắng
        :agent(t / tôi)
        :topic(t1 / tả
            :compound(l / lại)
            :location(đ / đây
                :prep(ở / ở))
            :agent t
            :goal(e / em)))
    :polarity -
    :pivot t
    :goal e)

#::snt thật là buồn nếu ta quên một người bạn .
(b / buồn
    :degree(t / thật)
    :condition(q / quên
        :agent(t1 / ta)
        :goal(n1 / người
            :mod(b1 / bạn)
            :quant 1)))

#::snt và có lẽ tôi sắp trở nên những người lớn , chỉ còn thích các chữ số .
(a / and
    :op2(t1 / trở_nên
        :pivot(t / tôi)
        :manner(s / sắp)
        :result-arg1(n1 / người_lớn)
        :topic(t2 / thích
            :degree(c1 / chỉ)
            :theme(c4 / chữ_số)
            :pivot t)))

#::snt lại chính cũng vì thế nữa mà tôi đã mua một hộp màu nước và bút chì màu .
(m1 / mua
    :cause(c / chính
        :manner(v / vì_thế))
    :agent(t / tôi)
    :tense(đ / đã)
    :theme(a / and
        :op1(m3 / màu_nước
            :quant 1
                :classifier(h / hộp))
        :op2(b / bút_chì
            :mod(m4 / màu))))

#::snt trở lại vẽ vời thật là khó , vào tuổi tôi bây giờ , khi mà người ta chưa hề vẽ gì ngoài con trăn khép kín với con trăn mở từ hồi lên sáu .
(k / khó
    :purpose(t / trở_lại
        :purpose(v / vẽ_vời
            :agent t3)
        :agent t3)
    :degree(t1 / thật)
    :time(t2 / tuổi
        :source(t3 / tôi)
        :time(n3 / now))
    :condition(v2 / vẽ
        :agent(n / người
            :mod(t4 / ta))
        :polarity -
        :modality(h / hề)
        :result-arg1(g / gì
            :concession(a / and
                :op1(t5 / trăn
                    :classifier(c1 / con)
                    :mod(k2 / khép_kín))
                :op2(t6 / trăn
                    :classifier(c2 / con)
                    :mod(m1 / mở))))
        :time(h1 / hồi
            :time-of(l1 / lên
                :quant(t7 / temporal-quantity
                    :quant 6
                    :unit(t8 / tuổi))
                :pivot t3))))

#::snt tôi sẽ cố thử , hẳn thế , làm những bức chân dung càng giống càng hay .
(c / cố
    :agent(t / tôi)
    :tense(s / sẽ)
    :manner(t1 / thử)
    :modality(h / hẳn
        :compound(t2 / thế))
    :topic(l / làm
        :result-arg1(c1 / chân_dung
            :classifier(b / bức))
        :manner(r / resemble-01
            :degree(c2 / càng)
            :manner(h1 / hay
                :degree(c3 / càng)))
        :agent t))

#::snt nhưng tôi không thành công chút nào .
(c2 / contrast-01
    :ARG2(t1 / thành_công
        :agent(t / tôi)
        :polarity -
        :degree(c / chút
            :mod(n1 / nào))))

#::snt tôi lại cũng có sai lầm về tầm vóc .
(c1 / có
    :pivot(t / tôi)
    :modality(c / cũng)
    :manner(s / sai_lầm)
    :topic(t1 / tầm_vóc))

#::snt chỗ này thì ông hoàng nhỏ lớn quá .
(l / lớn
    :location(c / chỗ
        :mod(n / này))
    :domain(ô / ông_hoàng
        :mod(n1 / nhỏ))
    :degree(q / quá))

#::snt chỗ kia em bé quá .
(b / bé
    :location(c / chỗ
        :mod(k / kia))
    :domain(e / em)
    :degree(q / quá))

#::snt tôi cứ lần mò như thế này rồi như thế khác , khi được khi không .
(l / lần_mò
    :agent(t / tôi)
    :manner(t1 / thế
        :mod(wz1 / này))
    :manner(t2 / thế
        :mod(k / khác))
    :time(k1 / khi
        :mod(đ / được))
    :time(k2 / khi
        :mod(k3 / không)))

#::snt cuối cùng tôi còn nhầm ở những nét quan trọng hơn nữa .
(n / nhầm
    :time(c / cuối_cùng)
    :pivot(t / tôi)
    :topic(n2 / nét
        :prep(ở / ở)
        :mod(q / quan_trọng
            :degree(h / hơn))))

#::snt nhưng này , các bạn phải tha lỗi cho tôi .
(c2 / contrast-01
    :ARG2(o / obligate-01
        :topic(t / tha
            :agent(b / bạn)
            :compound(l / lỗi)
            :beneficiary(t1 / tôi))))

#::snt bạn tôi không hề giảng giải gì cho tôi .
(g / giảng_giải
    :polarity -
    :modality(h / hề)
    :topic(g1 / gì)
    :beneficiary(t1 / tôi)
    :agent(h2 / have-rel-role-91
        :ARG2(b / bạn)
        :ARG1(t / tôi)))

#::snt nhưng tôi , buồn thay , tôi không biết cách nhìn thấy con cừu xuyên qua cái thùng .
(c5 / contrast-01
    :ARG2(b1 / biết
        :mode expressive)
        :pivot(t2 / tôi)
        :polarity -
        :manner(c / cách
            :mod(n1 / nhìn
                :compound(t3 / thấy)
                :goal(c2 / cừu
                    :classifier(c1 / con))
                :path(x / xuyên
                    :compound(q / qua)
                    :op1(t4 / thùng
                        :classifier(c3 / cái))))))

#::snt có lẽ tôi hơi giống những người lớn rồi .
(r / resemble-01
    :modality(c / có_lẽ)
    :domain(t / tôi)
    :compared-to(n1 / người_lớn)
    :degree(l / less))

#::snt tôi đã già rồi .
(g / già
    :domain(t / tôi)
    :tense(đ / đã))

#::snt mỗi ngày tôi lại biết thêm một điều gì đó về hành tinh , về lúc ra đi , về cuộc du hành của cậu .
(b / biết
    :time(n / ngày
        :mod(m / mỗi))
    :pivot(t / tôi)
    :compound(t1 / thêm)
    :topic(a / and
        :op1(đ / điều
            :mod(g / gì
                :mod(đ1 / đó)
                :quant 1)
            :topic(h / hành_tinh))
        :op2(l1 / lúc
            :mod(r / ra
            :compound(đ2 / đi)))
        :op3(c / cuộc
            :compound(d / du_hành)
            :poss(c2 / cậu))))

#::snt cái ấy đến nhẹ nhàng bằng những suy đoán ngẫu nhiên .
(đ / đến
    :theme(c / cái
        :mod(ấ / ấy))
    :manner(n / nhẹ_nhàng)
    :means(s / suy_đoán
        :mod(n2 / ngẫu_nhiên)))

#::snt cũng như vậy đó mà vào ngày thứ ba , tôi được biết về tấm bi kịch của những cây baobab .
(b1 / biết
    :manner(v / vậy
        :modality(đ / đó))
    :time(n1 / ngày
        :ord(o / ordinal-entity
            :value 3))
    :pivot(t1 / tôi)
    :modality(đ1 / được)
    :topic(t2 / tấm
        :mod(b2 / bi_kịch)
        :poss(c2 / cây
            :mod(b3 / baobab))))

#::snt lần này cũng là nhờ con cừu , ông hoàng nhỏ hỏi tôi , như vừa mới nghĩ ra điều gì nghiêm trọng lắm :
(h / hỏi
    :topic(n1 / nhờ
        :time(l / lần
            :mod(n / này))
        :source(c2 / cừu
            :classifier(c1 / con)))
    :agent(ô / ông_hoàng
        :mod(n2 / nhỏ))
    :goal(t / tôi)
    :conj-as-if(n4 / nghĩ
        :time(v / vừa_mới)
        :compound(r / ra)
        :result-arg1(đ / điều
            :mod(g / gì)
            :mod(n5 / nghiêm_trọng
                :degree(l2 / lắm)))))

#::snt - có thật đúng là con cừu ăn những bụi cây con không ?
(t / thật
    :compound(đ / đúng)
    :topic(ă / ăn
        :agent(c2 / cừu
            :classifier(c1 / con))
        :patient(c3 / cây
            :classifier(b / bụi)
            :mod(c4 / con)))
    :mode interrogative)

#::snt - phải , đúng đấy .
(p / phải
    :manner(đ / đúng
        :modality(đ1 / đấy)))

#::snt - ồ , tốt quá !
(a / and
    :op1(ồ / ồ
        :mode expressive)
    :op2(t / tốt
        :degree(q / quá)))

#::snt tôi không hiểu sao chuyện những con cừu ăn những bụi cây con lại quan trọng như thế .
(h / hiểu
    :pivot(t / tôi)
    :polarity -
    :topic(q / quan_trọng
        :domain(c / chuyện
            :domain-of(ă / ăn
                :agent(c2 / cừu
                    :classifier(c1 / con))
                :patient(c3 / cây
                    :classifier(b / bụi)
                    :mod(c4 / con))))
        :manner(t1 / thế)
        :cause(a / amr-unknown)))

#::snt nhưng ông hoàng nhỏ nói thêm :
(c / contrast-01
    :ARG2(n2 / nói
        :agent(ô / ông_hoàng
            :mod(n1 / nhỏ))
        :compound(t / thêm)))

#::snt - cho nên chúng ăn cả những cây baobab chứ ?
(ă / ăn
    :agent(c1 / chúng)
    :modality(c2 / cả)
    :patient(c3 / cây
        :mod(b / baobab))
    :mode interrogative)

#::snt tôi bảo rằng cây baobab không phải là thứ bụi cây nhỏ , mà là những cây to như cả cái nhà thờ , và cậu em có mang theo cả một đàn voi , thì cả đàn voi ấy cũng chẳng làm lung lay nổi một cây baobab .
(b / bảo
    :agent(t / tôi)
    :topic(a / and
        :op1(c2 / cây
            :mod(t2 / to
                :compared-to(n3 / nhà_thờ
                    :classifier(c4 / cái))
                :degree(e2 / equal))
            :domain c
            :topic(i / instead-of-91
                :topic-of(p / phải
                    :domain(c / cây
                        :mod(b1 / baobab))
                    :polarity -
                    :theme(t1 / thứ
                        :mod(c1 / cây
                            :classifier(b2 / bụi)
                            :mod(n / nhỏ))))))
        :op2(l2 / làm
            :concession(m1 / mang
                :agent(e / em
                    :mod(c5 / cậu))
                :compound(t3 / theo)
                :accompanier(đ / đàn
                    :consist-of(v1 / voi)
                    :mod(a2 / all)
                    :quant 1))
            :polarity -
            :manner(l3 / lung_lay)
            :theme(c11 / cây
                :mod(b3 / baobab)
                :quant 1)
            :agent đ
                :mod(ấ / ấy))))

#::snt ý nghĩ về đàn voi làm cho ông hoàng nhỏ bật cười :
(l / làm
    :theme(ý / ý_nghĩ
        :topic(đ / đàn
            :consist-of(v1 / voi)))
    :patient(b / bật
        :patient-of(ô / ông_hoàng
            :mod(n / nhỏ))
        :compound(c1 / cười)))

#::snt - phải chồng con này lên con kia ...
(o / obligate-01
    :topic(c / chồng
        :theme(c1 / con
            :mod(n / này))
        :manner(l / lên
            :theme(c2 / con
                :mod(k / kia)))))

#::snt nhưng cậu em nhận xét với vẻ triết lý :
(c / contrast-01
    :ARG2(n1 / nhận_xét
        :agent(e / em
            :classifier(c1 / cậu))
        :manner(v1 / vẻ
            :mod(t / triết_lý))))

#::snt - bọn baobab , trước khi lớn , cũng bắt đầu bé tẹo chứ !
(b2 / bắt_đầu
    :agent(b1 / baobab
        :classifier(b / bọn))
    :degree(b3 / bé
        :compound(t1 / tẹo))
    :time(b4 / before
        :op1(l / lớn
            :agent b1)))

#::snt - đúng là như thế .
(đ / đúng
    :manner(t / thế))

#::snt nhưng sao em lại cứ muốn cho con cừu của em ăn những cây baobab nhỏ thế ?
(c4 / contrast-01
    :ARG2(m / muốn
        :pivot(e / em)
        :topic(c1 / cho
            :topic-of(ă / ăn
                :agent(c3 / cừu
                    :classifier(c2 / con)
                    :poss e)
                :patient(c5 / cây
                    :mod(b / baobab)
                    :mod(n2 / nhỏ))))
        :cause(a / amr-unknown)))

#::snt em trả lời : " ôi chà ! " như đó là một chuyện tất nhiên .
(t / trả_lời
    :agent(e / em)
    :topic(ô / ôi
        :compound(c / chà)
        :mode expressive)
    :conj-as-if(c1 / chuyện
        :domain(đ / đó)
        :mod(t1 / tất_nhiên)
        :quant 1))

#::snt và tôi phải bắt trí thông minh của tôi làm việc dữ dội mới tự hiểu được vấn đề ấy .
(a / and
    :op2(o / obligate-01
        :topic(b / bắt
            :agent(t / tôi)
            :patient(l / làm_việc
                :patient-of(t1 / trí
                    :mod(t2 / thông_minh)
                    :poss t)
                :degree(d / dữ_dội)
                :purpose(h / hiểu
                    :manner(t4 / tự)
                    :manner(đ / được)
                    :topic(v1 / vấn_đề
                        :mod(ấ / ấy))
                    :pivot t)))))

#::snt nguyên là , trên hành tinh của ông hoàng nhỏ , cũng như trên mọi hành tinh khác , đều có những loại cỏ tốt và những loại cỏ xấu .
(c2 / có
    :degree(đ / đều)
    :theme(a / and
        :op1(l1 / loại
            :mod(c3 / cỏ)
            :mod(t2 / tốt))
        :op2(l2 / loại
            :mod(c4 / cỏ)
            :mod(x / xấu)))
    :location(a1 / and
        :op1(h / hành_tinh
            :prep(t / trên)
            :poss(ô / ông_hoàng
                :mod(n1 / nhỏ)))
        :op2(h1 / hành_tinh
            :prep(t1 / trên)
            :mod(k / khác)
            :mod(a2 / all))))

#::snt do đó , có hạt tốt của cỏ tốt và hạt xấu của cỏ xấu .
(c / có
    :cause(đ / đó)
    :theme(a / and
        :op1(h / hạt
            :mod(t / tốt)
            :source(c2 / cỏ
                :mod(t1 / tốt)))
        :op2(h1 / hạt
            :mod(x / xấu)
            :source(c4 / cỏ
                :mod(x1 / xấu)))))

#::snt chúng ngủ trong bí mật cho đến khi một cái hạt nào trong bọn chúng nổi hứng muốn thức dậy ...
(n / ngủ
    :agent(c / chúng)
    :setting(b / bí_mật
        :prep(t / trong))
    :time(k / khi
        :op1(n2 / nổi
            :agent(h / hạt
                :mod(n1 / nào)
                :quant 1
                    :classifier(c2 / cái)
                :agent-of(i / include-91
                    :theme c))
            :mod(h1 / hứng)
            :topic(m1 / muốn
                :manner(t2 / thức
                    :compound(d / dậy))
                :pivot h))))

#::snt nếu là nhánh dưa hay một nhánh hồng , ta có thể muốn để cho nó mọc thế nào tuỳ ý .
(p / possible-01
    :topic(m1 / muốn
        :pivot(t / ta)
        :purpose(m2 / mọc
            :theme(n3 / nó)
            :manner(t2 / tuỳ_ý))
        :condition(o / or
            :op1(n1 / nhánh
                :part-of(d / dưa)
                :domain n3)
            :op2(n2 / nhánh
                :part-of(h1 / hồng)
                :domain n3))))

#::snt nhưng nếu là một cây xấu , ngay khi nhận ra là phải nhổ ngay .
(c2 / contrast-01
    :ARG2(o / obligate-01
        :topic(n4 / nhổ
            :condition(c / cây
                :mod(x / xấu))
            :time(k / khi
                :time-of(n3 / nhận
                    :compound(r / ra)))
            :manner(n5 / ngay)
            :patient c)))

#::snt mà trên hành tinh của ông hoàng nhỏ thì có những hạt giống kinh khủng ... ấy là những hạt baobab .
(c1 / có
    :location(h / hành_tinh
        :prep(t / trên)
        :poss(ô / ông_hoàng
            :mod(n / nhỏ)))
    :theme(h1 / hạt
        :compound(g / giống)
        :mod(k / kinh_khủng)
        :theme-of(h2 / hạt
            :domain(ấ / ấy)
            :part-of(b / baobab))))

#::snt chúng nhiễm đầy cả tinh cầu .
(n / nhiễm
    :pivot(c / chúng)
    :degree(đ / đầy)
    :location(t / tinh_cầu))

#::snt mà một cây baobab , nếu như ta chú ý muộn màng quá , ta có thể chẳng bao giờ dẫy nó ra được nữa , baobab sẽ mọc cao và rễ nó chằng chịt khắp tinh cầu .
(a / and
    :condition(c1 / chú_ý
        :pivot(t / ta)
        :time(m2 / muộn_màng
            :degree(q / quá)))
    :op2(a2 / and
        :op1(m3 / mọc
            :theme(b2 / baobab)
            :tense(s / sẽ)
            :degree(c4 / cao))
        :op2(c5 / chằng_chịt
            :theme(r1 / rễ
                :part-of b2)
            :manner(k / khắp
                :location(t2 / tinh_cầu))))
    :op1(p / possible-01
        :topic(d / dẫy
            :patient(c / cây
                :mod(b / baobab))
            :polarity -
            :time(b1 / bao_giờ)
            :manner(r / ra)
            :manner(đ / được)
            :agent t)))

#::snt nó cho rễ của nó xói đục hành tinh .
(c / cho
    :agent(n / nó)
    :topic(x / xói_đục
        :theme(r / rễ
            :part-of n)
        :patient(h / hành_tinh)))

#::snt và nếu hành tinh mà quá bé , mà nếu cây baobab mà nhiều quá , có thể làm vỡ tung cả hành tinh .
(a / and
    :op2(p / possible-01
        :topic(l / làm
            :manner(v1 / vỡ
                :compound(t / tung))
            :patient(h1 / hành_tinh
                :mod(c2 / cả))
            :agent c
            :condition(a2 / and
                :op1(b / bé
                    :domain(h / hành_tinh)
                    :degree(q / quá))
                :op2(n2 / nhiều
                    :domain(c / cây
                        :mod(b1 / baobab))
                    :degree(q1 / quá))))))

#::snt đây là một vấn đề kỷ luật , ông hoàng nhỏ về sau nói với tôi .
(n1 / nói
    :topic(v / vấn_đề
        :domain(đ / đây)
        :mod(k / kỷ_luật)
        :quant 1)
    :agent(ô / ông_hoàng
        :mod(n / nhỏ))
    :goal(t / tôi)
    :time(a / after))

#::snt khi ta làm vệ sinh cho ta buổi sáng rồi , ta phải làm kỹ vệ sinh cho hành tinh .
(o / obiligate-01
    :topic(l1 / làm
        :time(l / làm
            :agent(t / ta)
            :topic(v / vệ_sinh)
            :beneficiary t
            :time(d / date-entity
                :dayperiod(b / buổi
                    :compound(s / sáng))))
        :manner(k1 / kỹ)
        :topic(v1 / vệ_sinh)
        :beneficiary(h / hành_tinh)
        :agent t))

#::snt phải đều đặn lo nhổ bọn baobab ngay lúc ta vừa phân biệt được chúng với cây hoa hồng .
(o / obligate-01
    :topic(l / lo
        :degree(đ / đều_đặn)
        :purpose(n / nhổ
            :patient(b / bọn
                :compound(b1 / baobab))
            :agent t)
        :time(l1 / lúc
            :mod(n1 / ngay)
            :time-of(p1 / phân_biệt
                :pivot(t / ta)
                :manner(đ1 / được)
                :ARG2(c1 / cây
                    :mod(h / hoa_hồng))
                :ARG1 b1))
        :pivot t))

#::snt đó là một việc làm chán lắm , nhưng mà thật dễ .
(c2 / contrast-01
    :ARG1(v / việc_làm
        :domain(đ / đó)
        :mod(c / chán
            :degree(l1 / lắm))
        :quant 1)
    :ARG2(d / dễ
        :degree(t / thật)
        :domain v))

#::snt đến một ngày , cậu em khuyên tôi cố sức vẽ được một bức vẽ đẹp , để cho các cậu bé ở quê hương tôi ghi nhớ chuyện ấy .
(k / khuyên
    :time(n / ngày
        :quant 1)
    :agent(e / em
        :classifier(c / cậu))
    :goal(t / tôi)
    :topic(c1 / cố
        :compound(s / sức)
        :topic-of(v / vẽ
            :manner(đ1 / được)
            :result-arg1(b / bức
                :compound(v1 / vẽ)
                :mod(đ2 / đẹp)
                :quant 1)
            :purpose(g / ghi_nhớ
                :pivot(b1 / bé
                    :classifier(c4 / cậu)
                    :source(q / quê_hương
                        :prep(ở / ở)
                        :poss(t1 / tôi)))
                :topic(c5 / chuyện
                    :mod(ấ / ấy)))
            :agent t)
        :agent t))

#::snt một ngày kia , nếu các bạn ấy lên đường , cậu em nói với tôi , chuyện ấy sẽ có ích cho họ .
(n2 / nói
    :agent(e / em
        :classifier(c1 / cậu))
    :goal(t / tôi)
    :topic(c3 / có_ích
        :condition(l / lên_đường
            :time(n / ngày_kia
                :quant 1)
            :agent(b / bạn
                :mod(ấ / ấy)))
        :domain(c2 / chuyện
            :mod(ấ1 / ấy))
        :tense(s / sẽ)
        :beneficiary b))

#::snt đôi khi hoãn lại một việc cũng chẳng hại gì .
(h1 / hại
    :time(đ / đôi_khi)
    :domain(h / hoãn
        :compound(l / lại)
        :theme(v / việc
            :quant 1))
    :modality(c / cũng)
    :polarity -
    :modality(g / gì))

#::snt nhưng nếu là những cây baobab , thì bao giờ cũng tai hoạ đấy .
(c2 / contrast-01
    :ARG2(t1 / tai_hoạ
        :condition(c / cây
            :mod(b / baobab))
        :modality(c1 / cũng)
        :modality(đ / đấy)
        :time(a / always)))

#::snt hắn bỏ mặc ba cái cây con ...
(b / bỏ
    :pivot(h / hắn)
    :compound(m / mặc)
    :theme(c1 / cây
        :mod(c2 / con)
        :quant 3
            :classifier(c / cái)))

#::snt đây là bản sao của bức tranh đó .
(b / bản_sao
    :domain(đ / đây)
    :source(t / tranh
        :classifier(b1 / bức)
        :mod(đ1 / đó)))

#::snt sau đó nó không thể nhúc nhích được nữa và nó nằm ngủ sáu tháng liền trong khi chờ tiêu hoá .
(a / and
    :op2(n4 / nằm
        :compound(n5 / ngủ)
        :agent n
        :duration(t5 / temporal-quantity
            :unit(t / tháng)
            :degree(l / liền)
            :manner(c / chờ
                :purpose(t2 / tiêu_hoá
                    :agent n)
                :pivot n)
            :quant 6))
    :op1(p / possible-01
        :topic(n1 / nhúc_nhích
            :agent(n / nó)
            :manner(đ1 / được)
            :modality(n2 / nữa))
        :polarity -)
    :time(a1 / after))

#::snt tôi đem khoe kiệt tác của mình với những người lớn và hỏi họ rằng nó có làm họ kinh hãi không .
(a / and
    :op1(đ / đem
        :agent(t / tôi)
        :purpose(k / khoe
            :goal(n1 / người_lớn)
            :agent t)
        :theme(k1 / kiệt_tác
            :poss t))
    :op2(h / hỏi
        :topic(l / làm
            :topic(k2 / kinh_hãi
                :pivot n1)
            :theme k1
            :mode interrogative)
        :goal n1
        :agent t))

#::snt họ trả lời : " sao lại phải sợ một cái mũ chứ ? "
(t / trả_lời
    :agent(h / họ)
    :topic(p / phải
        :manner(l / lại)
        :manner(s1 / sợ
            :theme(m1 / mũ
                :quant 1
                    :classifier(c / cái))
            :pivot h)
        :modality(c1 / chứ)
        :pivot h
        :cause(a / amr-unknown)))

#::snt bức vẽ của tôi không vẽ một cái mũ .
(v1 / vẽ
    :source(b / bức
        :compound(v / vẽ)
        :poss(t / tôi))
    :result-arg1(m1 / mũ
        :quant 1
            :classifier(c1 / cái))
    :agent t
    :polarity -)

#::snt nó vẽ một con trăn đang nằm chờ tiêu hoá một con voi .
(v / vẽ
    :pivot(n / nó)
    :result-arg1(n1 / nằm
        :agent(t / trăn
            :quant 1
                :classifier(c / con))
        :tense(đ / đang)
        :manner(c1 / chờ
            :purpose(t1 / tiêu_hoá
                :patient(v1 / voi
                    :quant 1
                        :classifier(c2 / con))
                :agent t)
            :pivot t)))

#::snt người lớn lúc nào cũng cần phải có giải thích .
(c1 / cần
    :beneficiary(n / người_lớn)
    :compound(p / phải)
    :topic(c2 / có
        :manner(g / giải_thích)))

#::snt bức phác thảo thứ hai của tôi nó như thế này :
(r / resemble-01
    :domain(p / phác_thảo
        :classifier(b / bức)
        :poss(t1 / tôi)
        :ord(o / ordinal-entity
            :value 2))
    :compared-to(t2 / thế
        :mod(n2 / này))
    :theme p
    :degree(e / equal))

#::snt những người lớn bèn khuyên tôi nên gác sang một bên các bức vẽ trăn kín và trăn mở kia và nên chú tâm học địa lý , sử ký , tính toán và văn phạm .
(k / khuyên
    :agent(n1 / người_lớn)
    :goal(t / tôi)
    :topic(a / and
        :op1(r / recommend-01
            :topic(g / gác
                :manner(s / sang
                    :theme(b1 / bên))
                :theme(b2 / bức
                    :compound(v / vẽ)
                    :mod(a2 / and
                        :op1(t1 / trăn
                            :mod(k1 / kín))
                        :op2(t2 / trăn
                            :mod(m1 / mở))
                        :mod(k2 / kia)))
                :agent t))
        :op2(r2 / recommend-01
            :topic(c1 / chú_tâm
                :manner(h / học
                    :topic(a3 / and
                        :op1(đ / địa_lý)
                        :op2(s1 / sử_ký)
                        :op3(t3 / tính_toán)
                        :op4(v4 / văn_phạm))
                    :agent t)
                :pivot t))))

#::snt tôi đã bỏ dở như vậy đó , vào năm lên sáu , một sự nghiệp hội hoạ tuyệt vời .
(b / bỏ
    :agent(t / tôi)
    :compound(d / dở)
    :example(v / vậy
        :mod(đ1 / đó))
    :time(n1 / năm
        :time-of(l / lên
            :quant(t2 / temporal-quantity
                :quant 6
                :unit(t3 / tuổi))
            :pivot t))
    :topic(s1 / sự_nghiệp
        :mod(h / hội_hoạ)
        :mod(t1 / tuyệt_vời)))

#::snt tôi bị thất vọng vì sự thất bại của bản thảo số một và số hai .
(t1 / thất_vọng
    :pivot(t / tôi)
    :modality(b / bị)
    :reason(s / sự
        :compound(t2 / thất_bại)
        :source(b1 / bản_thảo
            :mod(a / and
                :op1(s1 / số
                    :mod 1)
                :op2(s2 / số
                    :mod 2)))))

#::snt những người lớn chẳng bao giờ tự họ hiểu được cái gì cả , và thật là mệt cho trẻ con lúc nào cũng phải giải thích cho họ .
(a / and
    :op1(h1 / hiểu
        :pivot(n1 / người_lớn
            :mod(t / tự
                :mod(h / họ)))
        :manner(đ / được)
        :theme(g / gì
            :classifier(c1 / cái))
        :modality(c2 / cả)
        :time(a1 / always)
        :polarity -)
    :op2(m / mệt
        :degree(t1 / thật)
        :domain(o / obligate-01
            :modality(c4 / cũng)
            :topic(g1 / giải_thích
                :agent(t2 / trẻ_con)
                :time(l1 / lúc
                    :mod(n2 / nào))
                :goal n1))))

#::snt vậy là tôi phải chọn nghề khác , và tôi học lái máy bay .
(a / and
    :op2(h / học
        :manner(l1 / lái
            :patient(m / máy_bay)
            :agent t)
        :agent t)
    :op1(o / obligate-01
        :topic(c / chọn
            :agent(t / tôi)
            :goal(n / nghề
                :mod(k / khác)))))

#::snt tôi đã bay khắp thế giới mỗi nơi một tí .
(b / bay
    :agent(t / tôi)
    :tense(đ / đã)
    :location(n / nơi
        :part-of(t1 / thế_giới
            :mod(k / khắp))
        :quant(m / mỗi)
        :quant(m1 / một_tí)))

#::snt và môn địa lý , đúng như vậy , đã giúp tôi rất nhiều .
(a / and
    :op2(g / giúp
        :theme(m / môn
            :mod(đ / địa_lý))
        :degree(đ1 / đúng
            :manner(v1 / vậy))
        :tense(đ2 / đã)
        :beneficiary(t / tôi)
        :quant(n1 / nhiều
            :degree(r / rất))))

#::snt tôi biết làm thế nào để chỉ nhìn qua một cái là phân biệt được ngay Trung Quốc với Arizona .
(b / biết
    :pivot(t / tôi)
    :manner(l / làm
        :theme(t1 / thế_nào)
        :agent t)
    :purpose(p / phân_biệt
        :manner(n / nhìn
            :degree(c / chỉ)
            :degree(q / qua)
            :agent t)
        :manner(đ1 / được
            :degree(n1 / ngay))
        :pivot t
        :goal(a / and
            :op1(c3 / country
                :wiki(wz4 / Trung_Quốc)
                :name(n4 / name
                    :op1(wz5 / Trung)
                    :op2(wz6 / Quốc)))
            :op2(s / state
                :wiki(wz7 / Arizona)
                :name(n5 / name
                    :op1(wz8 / Arizona))))))

#::snt cái đó thật là ích lợi nếu như người ta bay lạc đường trong đêm tối .
(í / ích_lợi
    :domain(c / cái
        :mod(đ / đó))
    :degree(t / thật)
    :condition(b / bay
        :agent(n1 / người_ta)
        :manner(l1 / lạc
            :path(đ1 / đường)
            :time(d / date-entity
                :dayperiod(đ2 / đêm_tối
                    :prep(t1 / trong))))))

#::snt tôi cũng đã gặp trong đời tôi cả đống những con người nghiêm chỉnh .
(g / gặp
    :agent(t / tôi)
    :modality(c / cũng)
    :tense(đ / đã)
    :time(đ1 / đời
        :prep(t1 / trong)
        :source(t2 / tôi))
    :goal(c2 / con_người
        :quant(đ2 / đống)
        :mod(n1 / nghiêm_chỉnh)))

#::snt tôi đã sống nhiều với những người lớn .
(s / sống
    :agent(t / tôi)
    :tense(đ / đã)
    :degree(n / nhiều)
    :accompanier(n2 / người_lớn))

#::snt tôi đã nhìn thấy họ rất là gần .
(n / nhìn
    :agent(t / tôi)
    :tense(đ / đã)
    :compound(t1 / thấy)
    :goal(h / họ)
    :manner(g / gần
        :degree(r / rất)))

#::snt nhưng cái đó chẳng làm thay đổi ý kiến của tôi bao nhiêu .
(c3 / contrast-01
    :ARG2(l / làm
        :theme(c / cái
            :mod(đ / đó))
        :result-arg1(t / thay_đổi
            :theme(ý / ý_kiến
                :poss(t1 / tôi))
            :degree(b / bao_nhiêu)
            :agent t1)
        :polarity -))

#::snt mỗi lúc gặp một người lớn có vẻ sáng sủa một tí , tôi lại thử ông ta bằng bức phác thảo số một mà tôi luôn mang theo .
(t1 / thử
    :time(g / gặp
        :time(l / lúc
            :quant(m / mỗi))
        :goal(n / người_lớn
            :mod(s / sáng_sủa
                :modality(c / có
                    :compound(v / vẻ))
                :degree(m2 / một_tí))
            :quant 1)
        :agent t)
    :agent(t / tôi)
    :manner(l1 / lại)
    :patient(ô / ông
        :mod(t2 / ta))
    :instrument(p / phác_thảo
        :classifier(b1 / bức)
        :mod(s1 / số
            :mod(m3 / một))
        :manner(m5 / mang
            :time(l2 / luôn)
            :compound(t4 / theo)
            :patient p
            :agent t
            :accompanier t)))

#::snt nhưng luôn luôn ông ta trả lời : " đấy là một cái mũ .
(c2 / contrast-01
    :ARG2(t1 / trả_lời
        :time(l / luôn_luôn)
        :agent(ô / ông
            :mod(t / ta))
        :topic(m1 / mũ
            :domain(đ / đấy)
            :quant 1
                :classifier(c / cái))))

#::snt thế là tôi chẳng thèm nói với ông ta về trăn rắn , rừng hoang hay các vì sao nữa .
(n / nói
    :agent(t1 / tôi)
    :modality(t2 / thèm)
    :goal(ô / ông
        :mod(t3 / ta))
    :polarity -
    :topic(o / or
        :op1(t4 / trăn
            :mod(r / rắn))
        :op2(r1 / rừng
            :mod(h / hoang))
        :op3(s / sao
            :classifier(v2 / vì))))

#::snt tôi tự hạ mình xuống ngang tầm ông ta .
(h / hạ_mình
    :pivot(t / tôi)
    :manner(x / xuống
        :compared-to(t2 / tầm
            :poss(ô / ông
                :mod(t3 / ta)))
        :degree(e / equal)))

#::snt tôi nói về chơi bài , chơi gôn , chính trị và cravate .
(n / nói
    :agent(t / tôi)
    :topic(a / and
        :op1(c / chơi
            :compound(b / bài))
        :op2(c1 / chơi
            :compound(g / gôn))
        :op3(c2 / chính_trị)
        :op4(c3 / cravate)))

#::snt và con người lớn kia cảm thấy hài lòng vô cùng khi được quen một con người biết điều như vậy .
(a / and
    :op2(c1 / cảm
        :pivot(n / người_lớn
            :mod(k / kia))
        :compound(t / thấy)
        :manner(h / hài_lòng
            :degree(v1 / vô_cùng))
        :time(q / quen
            :modality(đ / được)
            :goal(c2 / con_người
                :mod(b / biết_điều)
                :example(v2 / vậy)
                :quant 1)
            :pivot n)))

#::snt tôi đã sống cô đơn như vậy đó , chẳng có ai để chuyện trò thực sự , cho đến khi máy bay của tôi bị hỏng giữa sa mạc Sahara , cách đây sáu năm .
(s / sống
    :pivot(t / tôi)
    :tense(đ / đã)
    :manner(c / cô_đơn)
    :example(v / vậy
        :mod(đ1 / đó))
    :setting(c2 / có
        :theme(a / ai)
        :purpose(c3 / chuyện_trò
            :degree(t1 / thực_sự)
            :agent t)
        :polarity -
        :pivot t)
    :duration(k / khi
        :prep(đ3 / đến)
        :op1(h / hỏng
            :patient(m / máy_bay
                :poss t)
            :modality(b / bị)
            :time(b2 / before
                :quant(t4 / temporal-quantity
                    :unit(n1 / năm)
                    :quant 6)
                :op1(n3 / now))
            :location(d / desert
                :part(g / giữa)
                :name(n31 / name
                    :op2(wz6 / mạc)
                    :op3(wz7 / Sahara)
                    :op1(wz8 / Sa))
                :wiki(wz9 / Sa_mạc_Sahara)))))

#::snt có cái gì đó trong động cơ của tôi bị gãy .
(g1 / gãy
    :patient(g / gì
        :classifier(c1 / cái)
        :mod(đ / đó)
        :location(đ1 / động_cơ
            :prep(t / trong)
            :poss(t1 / tôi)))
    :modality(b / bị))

#::snt và tôi chỉ đi một mình không có hành khách cũng chẳng có thợ máy , tôi phải một mình bắt đầu cuộc sửa chữa khó khăn .
(a / and
    :op2(o / obligate-01
        :reason(đ / đi
            :agent(t / tôi)
            :degree(c / chỉ)
            :manner(m / một_mình)
            :setting(a2 / and
                :op1(c1 / có
                    :theme(h / hành_khách)
                    :polarity -
                    :pivot t)
                :op2(c4 / có
                    :modality(c2 / cũng)
                    :theme(t1 / thợ_máy)
                    :polarity -
                    :pivot t)))
        :agent(b / bắt_đầu
            :manner(m1 / một_mình)
            :topic(c5 / cuộc
                :compound(s / sửa_chữa)
                :mod(k1 / khó_khăn))
            :agent-of t)))

#::snt đấy là vấn đề sống chết với tôi .
(v / vấn_đề
    :domain(đ / đấy)
    :mod(s / sống_chết)
    :topic(t / tôi))

#::snt tôi chỉ có đủ nước để uống trong nhiều nhất là tám ngày .
(c1 / có
    :pivot(t / tôi)
    :degree(c / chỉ)
    :theme(n / nước
        :purpose(u / uống
            :degree(đ / đủ)
            :quant(n1 / nhiều
                :degree(n2 / nhất)
                :time(t3 / temporal-quantity
                    :unit(n3 / ngày)
                    :quant 8))
            :agent t)))

#::snt đêm đầu tiên vậy là tôi phải ngủ trên cát ở cách xa nơi người ở hàng ngàn dặm .
(o / obligate-01
    :topic(n / ngủ
        :agent(t / tôi)
        :location(c / cát
            :prep(t1 / trên))
        :time(d / date-entity
            :dayperiod(đ / đêm)
            :ord(o2 / ordinal-entity
                :value 1))
        :location(r / relative-position
            :direction(c1 / cách
                :degree(x / xa))
            :op1(n1 / nơi
                :mod(ở1 / ở
                    :pivot(n2 / người)))
            :quant(d2 / distance-quantity
                :unit(d1 / dặm)
                :quant 1000))))

#::snt lúc đó tôi còn cô độc hơn cả một kẻ đắm tàu trên chiếc bè lênh đênh giữa biển .
(c1 / cô_độc
    :time(l / lúc
        :mod(đ / đó))
    :domain(t / tôi)
    :compared-to(l1 / lênh_đênh
        :agent(k / kẻ
            :mod(đ1 / đắm
                :instrument(t1 / tàu))
            :quant 1)
        :location(b / bè
            :prep(t2 / trên)
            :classifier(c3 / chiếc)
            :location(b1 / biển
                :part(g / giữa))))
    :degree(m / more))

#::snt bạn chắc sẽ tưởng tượng ra nỗi kinh ngạc của tôi , vào lúc mờ sáng , khi một giọng nói nhỏ nhẹ ngộ nghĩnh đánh thức tôi dậy .
(p / possible-01
    :pivot(t / tưởng_tượng
        :pivot-of(b / bạn)
        :tense(s / sẽ)
        :compound(r / ra)
        :topic(n / nỗi
            :mod(k / kinh_ngạc)
            :poss(t1 / tôi)
            :time(l / lúc
                :mod(m / mờ
                    :compound(s1 / sáng))
                :time-of(đ / đánh_thức
                    :theme(g / giọng
                        :compound(n1 / nói)
                        :mod(n2 / nhỏ_nhẹ)
                        :mod(n3 / ngộ_nghĩnh))
                    :patient(d / dậy
                        :patient-of t1))))))

#::snt cái giọng ấy nói :
(n / nói
    :agent(g / giọng
        :classifier(c / cái)
        :mod(ấ / ấy)))

#::snt - nếu ông vui lòng ... xin vẽ hộ tôi một con cừu !
(v1 / vẽ
    :condition(v / vui_lòng
        :domain(ô / ông))
    :modality(x / xin)
    :purpose(h / hộ
        :beneficiary(t / tôi))
    :result-arg1(c1 / cừu
        :quant 1
            :classifier(c / con))
    :mode imperative
    :agent ô)

#::snt - cái gì ?
(g / gì
    :classifier(c / cái)
    :mode interrogative)

#::snt - xin vẽ hộ tôi một con cừu ...
(v / vẽ
    :modality(x / xin)
    :purpose(h / hộ
        :beneficiary(t / tôi))
    :result-arg1(c1 / cừu
        :quant 1
            :classifier(c / con))
    :mode interrogative
    :polite+(wz3 / -))

#::snt tôi nhảy dựng lên như là bị sét đánh .
(n / nhảy
    :agent(t / tôi)
    :compound(d / dựng)
    :direction(l / lên)
    :compared-to(đ / đánh
        :modality(b / bị)
        :theme(s / sét)
        :patient t)
    :degree(e / equal))

#::snt tôi dụi mắt thật kỹ .
(d / dụi
    :agent(t / tôi)
    :patient(m / mắt
        :part-of t)
    :manner(k / kỹ
        :degree(t1 / thật)))

#::snt tôi đã nhìn thật kỹ .
(n / nhìn
    :agent(t / tôi)
    :tense(đ / đã)
    :manner(k / kỹ
        :degree(t1 / thật)))

#::snt và tôi thấy một cậu bé thật khác thường đang nhìn tôi với vẻ nghiêm trọng .
(a / and
    :op2(t1 / thấy
        :pivot(t / tôi)
        :goal(b / bé
            :mod(k / khác_thường
                :degree(t2 / thật))
            :goal-of(n / nhìn
                :tense(đ / đang)
                :manner(v2 / vẻ
                    :mod(n1 / nghiêm_trọng))
                :agent b
                :goal t)
            :quant 1
                :classifier(c / cậu))))

#::snt đây là bức chân dung đẹp nhất mà về sau tôi vẽ được về cậu bé ấy .
(c / chân_dung
    :domain(đ / đây)
    :classifier(b / bức)
    :mod(đ1 / đẹp
        :degree(n / nhất))
    :topic(v1 / vẽ
        :agent(t / tôi)
        :manner(đ2 / được)
        :topic(b1 / bé
            :classifier(c1 / cậu)
            :mod(ấ / ấy))
        :time(a / after)))

#::snt nhưng bức vẽ của tôi chắc là kém đẹp hơn người mẫu nhiều .
(c3 / contrast-01
    :ARG2(đ / đẹp
        :domain(b / bức
            :compound(v / vẽ)
            :poss(t / tôi))
        :degree(k / kém
            :modality(c1 / chắc
                :compound(l / là))
            :quant(n2 / nhiều
                :degree(h / hơn)))
        :compared-to(n1 / người_mẫu)))

#::snt không phải lỗi tại tôi .
(p / phải
    :domain(l / lỗi)
    :cause(t1 / tôi)
    :polarity -)

#::snt tôi đã bị người lớn làm cho nản lòng trong sự nghiệp hội hoạ từ hồi sáu tuổi , và tôi có bao giờ học vẽ cái gì ngoài những con trăn khép kín và những con trăn mở bụng đâu .
(a / and
    :op1(l / làm
        :cause(n / người_lớn)
        :patient(n1 / nản_lòng
            :pivot(t / tôi)
            :tense(đ / đã)
            :modality(b / bị)
            :setting(s / sự_nghiệp
                :prep(t1 / trong)
                :mod(h / hội_hoạ)))
        :time(h1 / hồi
            :quant(t7 / temporal-quantity
                :unit(t3 / tuổi)
                :quant 6
                :domain t)))
    :op2(h2 / học
        :topic(v1 / vẽ
            :result-arg1(g / gì
                :classifier(c2 / cái))
            :concession(n2 / ngoài
                :topic(a2 / and
                    :op1(t5 / trăn
                        :classifier(c3 / con)
                        :mod(k / khép
                            :compound(k1 / kín)))
                    :op2(t6 / trăn
                        :classifier(c4 / con)
                        :mod(m / mở
                            :patient(b2 / bụng)))))
            :agent t)
        :polarity -
        :agent t
        :time(a21 / always)))

#::snt vậy là tôi nhìn cái sự hiển hiện đó với hai con mắt tròn xoe vì kinh ngạc .
(n / nhìn
    :agent(t / tôi)
    :goal(s / sự
        :classifier(c / cái)
        :mod(h / hiển_hiện
            :mod(đ / đó)))
    :manner(t1 / tròn_xoe
        :domain(m / mắt
            :quant 2
                :classifier(c1 / con))
        :reason(k / kinh_ngạc
            :pivot t)))

#::snt xin nhớ là lúc ấy tôi đang ở cách mọi chỗ có người hàng ngàn dặm .
(n / nhớ
    :modality(x / xin)
    :topic(ở / ở
        :pivot(t / tôi)
        :tense(đ / đang)
        :location(r / relative-position
            :op1(c1 / chỗ
                :mod(c2 / có
                    :theme(n1 / người))
                :mod(a / all))
            :quant(d2 / distance-quantity
                :unit(d / dặm)
                :quant 1000))
        :time(b / before))
    :mode imperative
    :polite+(wz3 / -))

#::snt tới khi mở được miệng , tôi hỏi em :
(h / hỏi
    :time(m / mở
        :manner(đ / được)
        :patient(m1 / miệng
            :part-of t1)
        :agent t1)
    :agent(t1 / tôi)
    :goal(e / em))

#::snt - nhưng … em làm cái gì ở đây
(c2 / contrast-01
    :ARG2(l / làm
        :agent(e / em)
        :location(đ / đây
            :prep(ở / ở))
        :theme(a / amr-unknown)))

#::snt thế là em lặp lại câu nói lúc nãy , thật nhẹ nhàng , như là một điều rất quan trọng :
(l / lặp
    :agent(e / em)
    :compound(l1 / lại)
    :topic(c / câu
        :compound(n / nói)
        :time(l2 / lúc
            :mod(n1 / nãy)))
    :manner(n2 / nhẹ_nhàng
        :degree(t1 / thật))
    :conj-as-if(đ / điều
        :mod(q / quan_trọng
            :degree(r / rất))))

#::snt - nếu ông vui lòng ... xin vẽ hộ tôi một con cừu ...
(v1 / vẽ
    :condition(v / vui_lòng
        :domain(ô / ông))
    :modality(x / xin)
    :purpose(h / hộ
        :beneficiary(t / tôi))
    :result-arg1(c1 / cừu
        :quant 1
            :classifier(c / con))
    :mode imperative
    :agent ô
    :polite+(wz4 / -))

#::snt khi mà sự bí ẩn quá lớn , người ta không dám không vâng lời .
(d / dám
    :time(l / lớn
        :domain(s / sự
            :compound(b / bí_ẩn))
        :degree(q / quá))
    :pivot(n / người_ta)
    :polarity -
    :patient(v / vâng
        :polarity -
        :theme(l1 / lời)
        :patient-of n))

#::snt dù điều này thật là vô lý khi tôi đang ở cách xa nơi người ở cả ngàn dặm và đang bị nguy đến tính mạng , tôi rút trong túi ra một cây bút và một mảnh giấy .
(r / rút
    :concession(v / vô_lý
        :domain(đ / điều
            :mod(n / này))
        :degree(t / thật)
        :time(a2 / and
            :op1(ở / ở
                :pivot(t1 / tôi)
                :tense(đ1 / đang)
                :op2(n4 / nguy
                    :tense(đ2 / đang)
                    :modality(b / bị)
                    :topic(t2 / tính_mạng
                        :prep(đ3 / đến)
                        :poss t1)
                    :domain t1)
                :location(r2 / relative-position
                    :op1(n1 / nơi
                        :mod(ở1 / ở
                            :pivot(n2 / người)))
                    :quant(d / distance-quantity
                        :unit(d1 / dặm)
                        :quant 1000)))))
    :location(t5 / túi
        :prep(t4 / trong))
    :direction(r1 / ra)
    :agent t1
    :theme(a / and
        :op1(b1 / bút
            :quant 1
                :classifier(c2 / cây))
        :op2(g / giấy
            :quant 1
                :classifier(m2 / mảnh))))

#::snt nhưng tôi sực nhớ rằng mình đã chỉ học địa lý , sử ký , tính toán và văn phạm , và tôi nói với cậu bé ( có vẻ hơi khó chịu ) rằng tôi không biết vẽ .
(c4 / contrast-01
    :ARG2(a / and
        :op1(n1 / nhớ
            :agent(t / tôi)
            :manner(s / sực)
            :topic(h / học
                :tense(đ / đã)
                :degree(c / chỉ)
                :theme(a1 / and
                    :op1(đ1 / địa_lý)
                    :op2(s1 / sử_ký)
                    :op3(t1 / tính_toán)
                    :op4(v1 / văn_phạm))
                :agent t))
        :op2(n2 / nói
            :goal(b / bé
                :classifier(c1 / cậu))
            :manner(k / khó_chịu
                :modality(c2 / có
                    :compound(v4 / vẻ))
                :degree(h1 / hơi))
            :topic(b1 / biết
                :topic(v5 / vẽ
                    :agent t)
                :pivot t
                :polarity -)
            :agent t)))

#::snt em trả lời tôi :
(t / trả_lời
    :agent(e / em)
    :goal(t1 / tôi))

#::snt - không sao đâu .
(s / sao
    :polarity -
    :modality(đ / đâu))

#::snt xin vẽ hộ tôi một con cừu ...
(v / vẽ
    :modality(x / xin)
    :purpose(h / hộ
        :beneficiary(t / tôi))
    :result-arg1(c1 / cừu
        :quant 1
            :classifier(c / con))
    :polite+(wz2 / -)
    :mode imperative)

#::snt bởi vì tôi chưa bao giờ vẽ một con cừu cả nên tôi vẽ lại cho em một trong hai bức tranh mà tôi có thể vẽ .
(v1 / vẽ
    :reason(v / vẽ
        :agent(t / tôi)
        :result-arg1(c2 / cừu
            :quant 1
                :classifier(c1 / con))
        :polarity -
        :time(a / always))
    :manner(l / lại)
    :beneficiary(e / em)
    :result-arg1(t3 / tranh
        :quant 1
            :classifier(b2 / bức)
        :result-of(i / include-91
            :result-arg1 t3
                :quant 2
                    :classifier b2)
        :topic(p / possible-01
            :topic(v2 / vẽ
                :agent t)))
    :agent t)

#::snt đó là hình con trăn kín .
(h / hình
    :domain(đ / đó)
    :mod(t / trăn
        :classifier(c / con)
        :mod(k / kín)))

#::snt và tôi sững sờ khi nghe cậu bé trả lời :
(a / and
    :op2(s / sững_sờ
        :domain(t / tôi)
        :time(n / nghe
            :topic(t1 / trả_lời
                :agent(b / bé
                    :classifier(c / cậu)))
            :agent t)))

#::snt - không ! không !
(a / and
    :op1(k / không)
    :op2(k1 / không))

#::snt tôi không muốn một con voi trong bụng một con trăn đâu .
(m / muốn
    :pivot(t / tôi)
    :polarity -
    :result-arg1(v / voi
        :location(b / bụng
            :prep(t1 / trong)
            :part-of(t2 / trăn
                :quant 1
                    :classifier(c1 / con)))
        :quant 1
            :classifier(c / con))
    :modality(đ / đâu))

#::snt con trăn nguy hiểm lắm , còn con voi thì quá kềnh càng .
(a / and
    :op1(n / nguy_hiểm
        :domain(t / trăn
            :classifier(c / con))
        :degree(l / lắm))
    :op2(k / kềnh_càng
        :domain(v / voi
            :classifier(c2 / con))
        :degree(q / quá)))

#::snt chỗ tôi bé lắm .
(b / bé
    :domain(c / chỗ
        :poss(t / tôi))
    :degree(l / lắm))

#::snt tôi cần một con cừu .
(c / cần
    :pivot(t / tôi)
    :theme(c2 / cừu
        :quant 1
            :classifier(c1 / con)))

#::snt hãy vẽ cho tôi một con cừu !
(v / vẽ
    :beneficiary(t / tôi)
    :result-arg1(c2 / cừu
        :quant 1
            :classifier(c1 / con))
    :mode imperative)

#::snt thế là tôi vẽ .
(v / vẽ
    :modality(t / thế_là)
    :agent(t1 / tôi))

#::snt em nhìn chăm chú , rồi nói :
(a / and
    :op1(n / nhìn
        :agent(e / em)
        :manner(c / chăm_chú))
    :op2(n1 / nói
        :agent e))

#::snt - không ! con này ốm quá .
(m / multi-sentence
    :snt1(k / không)
    :snt2(ố / ốm
        :domain(c / con
            :mod(n / này))
        :degree(q / quá)))

#::snt hãy vẽ con khác đi .
(v / vẽ
    :result-arg1(c / con
        :mod(k / khác))
    :modality(đ / đi)
    :mode imperative)

#::snt tôi vẽ .
(v / vẽ
    :agent(t / tôi))

#::snt cậu bé của tôi cười nhẹ , giọng khoan dung :
(c2 / cười
    :agent(b / bé
        :classifier(c / cậu)
        :agent-of(h / have-rel-role-91
            :ARG1(t / tôi)
            :ARG2 b))
    :manner(n / nhẹ)
    :manner(g / giọng
        :mod(k / khoan_dung)))

#::snt - ông thấy đấy ... đây không phải con cừu , đây là dê .
(t / thấy
    :pivot(ô / ông)
    :modality(đ / đấy)
    :topic(a / and
        :op1(p / phải
            :domain(đ1 / đây)
            :goal(c1 / cừu
                :classifier(c / con))
            :polarity -)
        :op2(d / dê
            :domain(đ2 / đây))))

#::snt nó có sừng ...
(c / có
    :pivot(n / nó)
    :theme(s / sừng))

#::snt tôi lại vẽ lại lần nữa .
(v / vẽ
    :agent(t / tôi)
    :manner(l / lại)
    :manner(l1 / lại
        :frequency(wz1 / have-frequency-91
            :unit(l2 / lần)
            :quant 1)))

#::snt nhưng bức này cũng bị từ chối như các bức trước .
(c4 / contrast-01
    :ARG2(t / từ_chối
        :theme(b / bức
            :mod(n1 / này))
        :modality(b1 / bị)
        :compared-to(b2 / bức
            :mod(t1 / trước))
        :degree(e / equal)))

#::snt - con này già quá .
(g / già
    :domain(c / con
        :mod(n / này))
    :degree(q / quá))

#::snt tôi muốn một con cừu sống thật lâu .
(m / muốn
    :pivot(t / tôi)
    :topic(s / sống
        :pivot(c1 / cừu
            :quant 1
                :classifier(c / con))
        :manner(l / lâu
            :degree(t1 / thật))))

#::snt và tôi nói bừa :
(a / and
    :op2(n / nói
        :agent(t / tôi)
        :compound(b / bừa)))

#::snt - đây là cái thùng .
(t / thùng
    :domain(đ / đây)
    :classifier(c / cái))

#::snt con cừu chú muốn nó ở trong ấy đấy .
(ở / ở
    :theme(c1 / cừu
        :classifier(c / con))
    :mod(m / muốn
        :pivot(c2 / chú))
    :location(ấ / ấy
        :prep(t / trong)
        :modality(đ / đấy)))

#::snt nhưng tôi hết sức ngạc nhiên khi thấy mặt vị quan toà nhỏ của tôi sáng rõ lên :
(c2 / contrast-01
    :ARG2(n1 / ngạc_nhiên
        :pivot(t / tôi)
        :degree(h / hết_sức)
        :time(t1 / thấy
            :patient(s / sáng
                :patient-of(m / mặt
                    :part-of(q / quan_toà
                        :classifier(v / vị)
                        :mod(n2 / nhỏ)
                        :poss t))
                :degree(r / rõ)
                :manner(l / lên))
            :pivot t)))

#::snt - đúng là cái mà tôi muốn đấy !
(đ / đúng
    :theme(c / cái
        :mod(m1 / muốn
            :pivot(t / tôi)))
    :modality(đ1 / đấy))

#::snt ông nghĩ có cần nhiều cỏ cho con cừu này không ạ ?
(n / nghĩ
    :pivot(ô / ông)
    :topic(c1 / cần
        :theme(c2 / cỏ
            :mod(n1 / nhiều))
        :beneficiary(c5 / cừu
            :classifier(c4 / con)
            :mod(n2 / này)))
    :mode interrogative)

#::snt - sao vậy ?
(v / vậy
    :cause(a / amr-unknown))

#::snt - vì chỗ tôi bé lắm ...
(c2 / cause-01
    :topic(b / bé
        :domain(c / chỗ
            :poss(t / tôi))
        :degree(l / lắm)))

#::snt - chắc là đủ .
(c / chắc
    :degree(đ / đủ))

#::snt tôi vẽ cho em một con cừu bé xíu ấy mà .
(v / vẽ
    :agent(t / tôi)
    :beneficiary(e / em)
    :result-arg1(c2 / cừu
        :mod(b / bé
            :degree(x / xíu))
        :quant 1
            :classifier(c1 / con))
    :modality(ấ / ấy
        :compound(m1 / mà)))

#::snt em cúi đầu xuống bức vẽ :
(c / cúi
    :agent(e / em)
    :patient(đ / đầu
        :part-of e)
    :direction(x / xuống
        :goal(b / bức
            :compound(v / vẽ))))

#::snt - không nhỏ lắm đâu ... kìa !
(m / multi-sentence
    :snt1(n / nhỏ
        :degree(l / lắm)
        :modality(đ / đâu)
        :polarity -)
    :snt2(k1 / kìa
        :mode imperative))

#::snt nó đã ngủ rồi ...
(n1 / ngủ
    :agent(n / nó)
    :tense(đ / đã))

#::snt và như thế đấy , tôi đã làm quen với ông hoàng bé nhỏ .
(a / and
    :op2(l / làm_quen
        :manner(t / thế
            :mod(đ / đấy))
        :agent(t1 / tôi)
        :tense(đ1 / đã)
        :goal(ô / ông_hoàng
            :mod(b / bé_nhỏ))))

#::snt phải rất lâu tôi mới biết em từ đâu đến .
(b / biết
    :condition(p / phải
        :time(l / lâu
            :degree(r / rất)))
    :pivot(t / tôi)
    :topic(đ1 / đến
        :agent(e / em)
        :initialLocation(đ / đâu
            :prep(t1 / từ))))

#::snt chỉ vì những tiếng ngẫu nhiên buột ra dần dần nói cho tôi hiểu mọi sự .
(n2 / nói
    :theme(b / buột
        :theme-of(t / tiếng
            :mod(n1 / ngẫu_nhiên))
        :compound(r / ra)
        :manner(d / dần_dần))
    :beneficiary(h / hiểu
        :pivot(t1 / tôi)
        :theme(s / sự
            :mod(a / all))))

#::snt ví dụ như , khi lần đầu em thấy chiếc máy bay của tôi ( tôi sẽ không vẽ chiếc máy bay đâu , bức vẽ đó quá phức tạp đối với tôi ) em hỏi tôi :
(h / hỏi
    :condition(t / thấy
        :time(l / lần
            :ord(o / ordinal-entity
                :value 1))
        :pivot(e / em)
        :goal(m / máy_bay
            :classifier(c / chiếc)
            :poss(t1 / tôi)
            :goal-of(v1 / vẽ
                :tense(s / sẽ)
                :result-arg1(m1 / máy_bay
                    :classifier(c2 / chiếc))
                :modality(đ1 / đâu)
                :cause(p / phức_tạp
                    :domain(b / bức
                        :compound(v2 / vẽ)
                        :mod(đ2 / đó)
                        :degree(q / quá)
                        :topic(t3 / tôi)))
                :agent t1
                :polarity -)))
    :goal t1
    :agent e)

#::snt - cái thứ này là cái gì ?
(t / thứ
    :classifier(c / cái)
    :mod(n / này)
    :domain(a / amr-unknown))

#::snt - không phải cái thứ .
(p / phải
    :theme(t / thứ
        :classifier(c / cái))
    :polarity -)

#::snt nó bay được đấy .
(b / bay
    :agent(n / nó)
    :manner(đ / được))

#::snt nó là một chiếc máy bay .
(m1 / máy_bay
    :domain(n / nó)
    :quant 1
        :classifier(c / chiếc))

#::snt đó là chiếc máy bay của tôi .
(m / máy_bay
    :domain(đ / đó)
    :classifier(c / chiếc)
    :poss(t / tôi))

#::snt tôi tự hào nói cho em biết là tôi bay .
(t1 / tự_hào
    :domain(t / tôi)
    :topic(n / nói
        :purpose(b / biết
            :pivot(e / em)
            :topic(b1 / bay
                :agent t))
        :agent t))

#::snt em liền kêu lên :
(k / kêu
    :agent(e / em)
    :manner(l / liền)
    :compound(l1 / lên))

#::snt - sao ?
(s1 / string-entity
    :value(s / sao)
    :mode interrogative)

#::snt ông từ trên trời rơi xuống ư ?
(r / rơi
    :agent(ô / ông)
    :initialLocation(t1 / trên
        :prep(t / từ)
        :mod(t2 / trời))
    :direction(x / xuống)
    :mode interrogative)

#::snt - phải , tôi nói khiêm tốn .
(n / nói
    :topic(p / phải)
    :agent(t / tôi)
    :manner(k / khiêm_tốn))

#::snt - ái chà !
(á / ái_chà
    :mode expressive)

#::snt cái này ngộ đấy ...
(n1 / ngộ
    :domain(c / cái
        :mod(n / này))
    :modality(đ / đấy))

#::snt và ông hoàng bé nhỏ bật lên một tràng cười khanh khách rất kháu nhưng làm tôi cáu lắm .
(a / and
    :op2(b1 / bật
        :agent(ô / ông_hoàng
            :mod(b / bé_nhỏ))
        :compound(l / lên)
        :result-arg1(t / tràng
            :mod(c / cười)
            :quant 1
            :mod(c3 / contrast-01
                :ARG1(k / khanh_khách
                    :manner(k1 / kháu
                        :degree(r / rất)))
                :ARG2(l1 / làm
                    :topic(c1 / cáu
                        :agent(t1 / tôi)
                        :degree(l2 / lắm))
                    :theme t)))))

#::snt tôi muốn ai cũng phải đánh giá một cách nghiêm túc mọi tai nạn của tôi .
(m / muốn
    :pivot(t / tôi)
    :topic(o / obligate-01
        :modality(c / cũng)
        :topic(đ / đánh_giá
            :pivot(a / ai)
            :manner(m1 / một_cách
                :mod(n / nghiêm_túc))
            :topic(t1 / tai_nạn
                :poss(t2 / tôi)
                :mod(a1 / all)))))

#::snt sau đó em nói thêm :
(n / nói
    :agent(e / em)
    :manner(t / thêm)
    :time(a / after))

#::snt - thế là ông cũng từ trên trời rơi xuống !
(r / rơi
    :agent(ô / ông)
    :modality(c / cũng)
    :initialLocation(t2 / trên
        :prep(t1 / từ)
        :mod(t3 / trời))
    :direction(x / xuống))

#::snt ông ở hành tinh nào ?
(ở / ở
    :pivot(ô / ông)
    :location(h / hành_tinh
        :name(a / amr-unknown)))

#::snt tức thì tôi loé lên một tia sáng nào đó , về sự có mặt bí ẩn của em , và đột nhiên tôi hỏi :
(a / and
    :op1(l / loé
        :manner(t / tức_thì)
        :agent(t1 / tôi)
        :compound(l1 / lên)
        :result-arg1(t2 / tia
            :mod(s / sáng)
            :mod(n / nào
                :compound(đ / đó))
            :quant 1)
        :topic(s1 / sự
            :compound(c / có_mặt)
            :manner(b / bí_ẩn)
            :source(e / em)))
    :op2(h / hỏi
        :manner(đ1 / đột_nhiên)
        :agent t1))

#::snt - thế ra em ở một hành tinh khác tới ?
(t1 / tới
    :modality(t / thế_ra)
    :agent(e / em)
    :initialLocation(h / hành_tinh
        :mod(k / khác)
        :quant 1)
    :mode interrogative)

#::snt nhưng em không trả lời tôi .
(c / contrast-01
    :ARG2(t / trả_lời
        :agent(e / em)
        :polarity -
        :goal(t1 / tôi)))

#::snt em khẽ lắc đầu nhìn chiếc máy bay của tôi :
(l / lắc_đầu
    :agent(e / em)
    :manner(k / khẽ)
    :purpose(n / nhìn
        :goal(m / máy_bay
            :classifier(c / chiếc)
            :poss tôi)
        :agent e))

#::snt - nhưng mà ngồi trên cái đó thì ông cũng chẳng thể tới từ xa lắm đâu ...
(c4 / contrast-01
    :ARG2(p / possible-01
        :condition(n1 / ngồi
            :location(c / cái
                :prep(t / trên)
                :mod(đ / đó))
            :agent ô)
        :topic(t3 / tới
            :agent(ô / ông)
            :initialLocation(x / xa
                :prep(t4 / từ)
                :degree(l / lắm)))
        :modality(đ1 / đâu)
        :polarity -))

#::snt rồi em đắm mình trong giấc mơ màng thật dài .
(đ / đắm
    :pivot(e / em)
    :compound(m / mình)
    :setting(g / giấc
        :prep(t / trong)
        :mod(m1 / mơ_màng)
        :manner(d / dài
            :degree(t1 / thật))))

#::snt sau đó , móc túi lấy con cừu tôi vừa vẽ , em lại mê mải ngắm cái của báu đó .
(n / ngắm
    :time(m / móc
        :source(t / túi
            :poss e)
        :purpose(l / lấy
            :theme(c1 / cừu
                :classifier(c / con)
                :mod(v1 / vẽ
                    :agent(t1 / tôi)))
            :agent e)
        :agent e
        :time(a / after))
    :agent(e / em)
    :manner(l1 / lại)
    :manner(m1 / mê_mải)
    :goal(c3 / của
        :mod(b / báu)
        :mod(đ1 / đó)))

#::snt các bạn hãy tưởng tượng tôi bị kích động như thế nào bởi lời thổ lộ nửa vời về " các hành tinh khác " ấy .
(t / tưởng_tượng
    :pivot(b / bạn)
    :topic(k / kích_động
        :patient(t1 / tôi)
        :modality(b1 / bị)
        :manner(t2 / thế_nào)
        :cause(l / lời
            :mod(t3 / thổ_lộ)
            :manner(n1 / nửa_vời)
            :topic(h1 / hành_tinh
                :mod(k1 / khác)
                :mod(ấ / ấy))))
    :mode imperative)

#::snt vì vậy , tôi cố tìm hiểu rõ hơn :
(c / cố
    :agent(t / tôi)
    :topic(t1 / tìm_hiểu
        :manner(r / rõ
            :degree(h / hơn))
        :agent t))

#::snt - cậu bé ơi , em từ đâu đến ?
(đ1 / đến
    :goal(b / bé
        :classifier(c / cậu)
        :modality(ơ / ơi)
        :mode expressive)
    :agent(e / em)
    :initialLocation(a / amr-unknown
        :prep(t / từ)))

#::snt chỗ em là đâu thế ?
(c / chỗ
    :poss(e / em)
    :modality(t / thế)
    :domain(a / amr-unknown))

#::snt em muốn mang con cừu của ta về đâu ?
(m / muốn
    :pivot(e / em)
    :topic(m1 / mang
        :theme(c1 / cừu
            :classifier(c / con)
            :poss(t / ta))
        :manner(v / về
            :finalLocation(a / amr-unknown))
        :agent e))

#::snt sau một lát im lặng trầm ngâm , em trả lời tôi :
(t1 / trả_lời
    :agent(e / em)
    :goal(t2 / tôi)
    :time(a / after
        :op1(m / một
            :compound(l / lát)
            :mod(i / im_lặng)
            :mod(t / trầm_ngâm))))

#::snt - có cái tốt là với cái thùng ông cho tôi , ban đêm con cừu có thể dùng nó làm nhà ở .
(c1 / cái
    :compound(t / tốt)
    :topic(t1 / thùng
        :classifier(c2 / cái)
        :mod(c3 / cho
            :agent(ô / ông)
            :beneficiary(t2 / tôi)))
    :result(p / possible-01
        :topic(d / dùng
            :agent(c5 / cừu
                :classifier(c4 / con))
            :purpose(l1 / làm
                :result-arg1(n1 / nhà
                    :compound(ở / ở))
                :agent c5)
            :instrument t1
            :time(d2 / date-entity
                :dayperiod(b / ban_đêm)))))

#::snt - phải đấy .
(p / phải
    :modality(đ / đấy))

#::snt và nếu em ngoan , ta sẽ còn cho em một sợi dây để buộc nó lại ban ngày .
(a / and
    :op2(c1 / cho
        :condition(n1 / ngoan
            :domain(e / em))
        :agent(t / ta)
        :tense(s / sẽ)
        :theme(d / dây
            :purpose(b / buộc
                :patient(n2 / nó)
                :manner(l / lại)
                :agent e)
            :quant 1
                :classifier(s1 / sợi))
        :beneficiary e))

#::snt và một cái cọc nữa .
(a / and
    :op2(c1 / cọc
        :quant 1
            :classifier(c / cái)))

#::snt lời đề nghị đó có lẽ làm cho ông hoàng bé nhỏ không vừa lòng :
(l1 / làm
    :theme(l / lời
        :mod(đ / đề_nghị)
        :mod(đ1 / đó))
    :modality(c / có_lẽ)
    :patient(v / vừa_lòng
        :patient-of(ô / ông_hoàng
            :mod(b / bé_nhỏ))
        :polarity -))

#::snt - buộc nó lại ?
(b / buộc
    :patient(n / nó)
    :mode interrogative)

#::snt nghĩ gì mà lạ thế !
(n / nghĩ
    :topic(g / gì)
    :manner(l / lạ
        :modality(t / thế)))

#::snt - nhưng không buộc nó lại , nó sẽ đi lung tung , nó sẽ đi lạc ...
(c / contrast-01
    :condition(b / buộc
        :patient(n1 / nó)
        :manner(l / lại)
        :polarity -)
    :ARG2(a / and
        :op1(đ / đi
            :tense(s / sẽ)
            :manner(l1 / lung_tung)
            :agent n1)
        :op2(đ1 / đi
            :tense(s1 / sẽ)
            :manner(l2 / lạc)
            :agent n1)))

#::snt cậu bạn của tôi lại bật cười khanh khách :
(b1 / bật
    :manner(l / lại)
    :compound(c2 / cười)
    :manner(k / khanh_khách)
    :agent(h / have-rel-role-91
        :ARG2(b / bạn
            :classifier(c / cậu))
        :ARG1(t / tôi)))

#::snt - nó đi đằng nào được chứ ?
(đ / đi
    :agent(n / nó)
    :modality(đ2 / được)
    :modality(c / chứ)
    :path(a / amr-unknown))

#::snt - bất cứ đâu .
(đ / đâu
    :degree(b / bất_cứ))

#::snt cứ đi thẳng tới trước mặt ...
(đ / đi
    :modality(c / cứ)
    :direction(t / thẳng
        :compound(t1 / tới)
        :location(t2 / trước
            :mod(m / mặt))))

#::snt bấy giờ ông hoàng nhỏ nhận xét một cách nặng nề :
(n1 / nhận_xét
    :agent(ô / ông_hoàng
        :mod(n / nhỏ))
    :manner(m / một_cách
        :mod(n2 / nặng_nề))
    :time(b / before))

#::snt - không hề gì .
(h / hề
    :polarity -
    :modality(g / gì))

#::snt chỗ tôi bé lắm .
(b / bé
    :domain(c / chỗ
        :poss(t / tôi))
    :degree(l / lắm))

#::snt rồi , có lẽ với một chút ngậm ngùi , em nói thêm :
(a / and
    :op2(n1 / nói
        :modality(c / có_lẽ)
        :degree(m / một_chút
            :mod(n / ngậm_ngùi))
        :agent(e / em)
        :compound(t / thêm)))

#::snt - thẳng tới trước mặt người ta chẳng đi được bao xa đâu ...
(đ / đi
    :direction(t / thẳng
        :compound(t1 / tới)
        :location(t2 / trước
            :mod(m / mặt)))
    :agent(n / người_ta)
    :polarity -
    :manner(đ1 / được)
    :quant(d / distance-quantity
        :quant(b / bao_xa)
        :modality(đ2 / đâu)))

#::snt điều ấy chẳng làm tôi ngạc nhiên nhiều lắm .
(l / làm
    :cause(đ / điều
        :mod(ấ / ấy))
    :polarity -
    :patient(t / tôi
        :pivot-of(n / ngạc_nhiên
            :degree(n1 / nhiều)
            :degree(l1 / lắm))))

#::snt tôi vẫn biết ngoài những hành tinh lớn như Trái Đất , Sao Kim , Sao Hoả , Sao Thuỷ , mà người ta đặt tên cho , có hàng trăm ngôi sao khác mà đôi khi bé đến nỗi người ta chỉ thấy trong kính viễn vọng một cách khó khăn .
(b / biết
    :pivot(t / tôi)
    :concession(h / hành_tinh
        :mod(l / lớn)
        :theme-of(đ / đặt
            :agent(n3 / người_ta)
            :result-arg1(t2 / tên))
        :example(a / and
            :op1(p / planet
                :name(n6 / name
                    :op1(wz1 / Trái)
                    :op2(wz2 / Đất))
                :wiki(wz3 / Trái_Đất))
            :op2(p2 / planet
                :wiki(wz4 / Sao_Kim)
                :name(n7 / name
                    :op1(wz5 / Sao)
                    :op2(wz6 / Kim)))
            :op3(p3 / planet
                :wiki(wz7 / Sao_Hoả)
                :name(n8 / name
                    :op1(wz8 / Sao)
                    :op2(wz9 / Hoả)))
            :op4(p4 / planet
                :wiki(wz10 / Sao_Thuỷ)
                :name(n9 / name
                    :op1(wz11 / Sao)
                    :op2(wz12 / Thuỷ)))))
    :topic(c1 / có
        :theme(s3 / sao
            :quant(h1 / hàng
                :classifier(n4 / ngôi)
                :op1 100)
            :mod(k / khác)
            :theme-of(b1 / bé
                :manner(t4 / thấy
                    :degree(c2 / chỉ)
                    :instrument(k1 / kính_viễn_vọng
                        :prep(t5 / trong))
                    :manner(m2 / một_cách
                        :mod(k2 / khó_khăn))
                    :pivot n3)
                :domain s3))))

#::snt khi một nhà thiên văn khám phá ra một trong bọn chúng , nhà thiên văn ấy cho nó một con số .
(c1 / cho
    :time(k1 / khám_phá
        :agent(n / nhà
            :quant(m / một)
            :compound(t / thiên_văn))
        :compound(r / ra)
        :result-arg1(i / include-91
            :theme(b / bọn
                :compound(c / chúng)
                :quant 1)))
    :result-arg1(m2 / một
        :mod(c2 / con_số))
    :agent n
    :theme i)

#::snt lúc đó ông này mở một buổi thuyết trình lớn về phát hiện của mình tại một hội nghị quốc tế về thiên văn .
(m / mở
    :time(l / lúc
        :mod(đ / đó))
    :agent(ô / ông
        :mod(n / này))
    :topic(b / buổi
        :mod(t / thuyết_trình)
        :mod(l1 / lớn)
        :topic(p / phát_hiện
            :poss ô)
        :quant 1)
    :setting(h / hội_nghị
        :prep(t1 / tại)
        :mod(q / quốc_tế)
        :topic(t2 / thiên_văn)
        :quant 1))

#::snt may mắn cho tiểu tinh cầu B612 , một nhà độc tài Thổ Nhĩ Kỳ buộc dân Thổ phải mặc âu phục , ai không tuân theo sẽ bị tội chết .
(b1 / buộc
    :topic(m / may_mắn
        :beneficiary(p / planet
            :name(n3 / name
                :op1(wz1 / tiểu_tinh_cầu)
                :op2(wz2 / B612))
            :wiki(wz3 / Tiểu_tinh_cầu_B612)))
    :agent(n / nhà
        :mod(đ / độc_tài)
        :mod(c2 / country
            :wiki(t1 / Thổ_Nhĩ_Kỳ)
            :name(n2 / name
                :op2(wz4 / Nhĩ)
                :op3(wz5 / Kỳ)
                :op1(wz6 / Thổ)))
        :quant 1)
    :patient(d / dân
        :topic(m2 / mặc
            :modality(p1 / phải)
            :theme(â / âu_phục)
            :patient-of d)
        :manner(t3 / tuân
            :agent(a / ai)
            :polarity -
            :compound(t4 / theo)
            :topic(b2 / bị
                :tense(s / sẽ)
                :manner(t5 / tội
                    :mod(c1 / chết))))
        :mod c2))

#::snt nhà thiên văn trình bày lại vấn đề năm 1920 , trong bộ quần áo rất lịch sự .
(t1 / trình_bày
    :agent(n / nhà
        :compound(t / thiên_văn)
        :setting(q / quần_áo
            :prep(t2 / trong)
            :classifier(b / bộ)
            :mod(l1 / lịch_sự
                :degree(r / rất))))
    :manner(l / lại)
    :topic(v / vấn_đề)
    :time(d / date-entity
        :year 1920))

#::snt hắn thích chơi trò gì ?
(t / thích
    :pivot(h / hắn)
    :topic(c / chơi
        :theme(t1 / trò
            :name(a / amr-unknown))
        :agent h))

#::snt hắn có sưu tầm bươm bướm không ? "
(s / sưu_tầm
    :agent(h / hắn)
    :theme(b / bươm_bướm)
    :mode interrogative)

#::snt họ chỉ hỏi bạn : " hắn ta bao nhiêu tuổi ?
(h1 / hỏi
    :agent(h / họ)
    :degree(c / chỉ)
    :goal(b / bạn)
    :topic(t1 / tuổi
        :domain(h2 / hắn
            :mod(t / ta))
        :quant(a / amr-unknown)))

#::snt hắn ta có mấy anh em ?
(c / có
    :pivot(h / hắn
        :mod(t / ta))
    :theme(h2 / have-rel-role-91
        :ARG2(a / anh_em
            :quant(a2 / amr-unknown))
        :ARG0 h))

#::snt hắn ta cân nặng bao nhiêu ? "
(c / cân
    :pivot(h / hắn
        :mod(t / ta))
    :manner(n / nặng
        :quant(a / amr-unknown)))

#::snt thế đấy .
(t / thế
    :mod(đ / đấy))

#::snt sau đó , họ cho vậy là họ hiểu hắn ta rồi .
(c / cho
    :pivot(h / họ)
    :topic(h2 / hiểu
        :goal(h3 / hắn
            :mod(t / ta))
        :pivot h)
    :time(a / after))

#::snt nếu bạn nói với những người lớn : " tôi có thấy một cái nhà gạch mầu hồng với hoa phong lữ trên cửa sổ , và chim bồ câu trên mái ... "
(n1 / nói
    :agent(b / bạn)
    :goal(n3 / người_lớn)
    :topic(t1 / thấy
        :goal(n4 / nhà
            :mod(g / gạch)
            :mod(m1 / mầu
                :mod(h / hồng))
            :quant 1
                :classifier(c1 / cái)
            :accompanier(a / and
                :op1(h1 / hoa
                    :mod(p / phong_lữ)
                    :location(c2 / cửa_sổ
                        :prep(t2 / trên)))
                :op2(c3 / chim
                    :mod(b1 / bồ_câu)
                    :location(m2 / mái
                        :prep(t3 / trên)))))
        :pivot b))

#::snt phải nói với họ : " tôi đã thấy một cái nhà 10 vạn franc " .
(o / obligate-01
    :topic(n / nói
        :goal(h / họ)
        :topic(t1 / thấy
            :pivot(t / tôi)
            :tense(đ / đã)
            :goal(n1 / nhà
                :quant 1
                    :classifier(c / cái)
                :mod(m / monetary-quantity
                    :unit(f / franc)
                    :quant 100000)))))

#::snt họ sẽ kêu ngay : " ôi thật xinh đẹp làm sao . "
(k / kêu
    :agent(h / họ)
    :tense(s / sẽ)
    :manner(n / ngay)
    :topic(x / xinh_đẹp
        :mode expressive
        :degree(t / thật)
        :degree(l / làm_sao)))

#::snt sáu năm đã qua , từ khi cậu bạn tôi đi mất với con cừu của em .
(đ1 / đi
    :time(k / khi)
    :agent(b / bạn
        :classifier(c / cậu)
        :agent-of(h / have-rel-role-91
            :ARG1(t1 / tôi)
            :ARG2 b))
    :compound(m / mất)
    :accompanier(c2 / cừu
        :classifier(c1 / con)
        :poss b)
    :time(b2 / before
        :op1(wz3 / now)
        :quant(t2 / temporal-quantity
            :unit(wz4 / year)
            :quant 6)))

#::snt có phải ai cũng có được một người bạn thân đâu .
(p / phải
    :domain(c2 / có
        :pivot-of(a / ai)
        :modality(c1 / cũng)
        :manner(đ / được)
        :theme(n / người
            :mod(b / bạn
                :mod(t / thân))
            :quant 1))
    :modality(đ1 / đâu)
    :polarity -)

#::snt một bức trước vứt đi , bức sau còn tệ hơn nữa .
(a / and
    :op1(b / bức
        :mod(t / trước)
        :theme-of(v / vứt
            :compound(đ / đi)))
    :op2(b1 / bức
        :mod(s / sau)
        :theme-of(t1 / tệ
            :modality(c / còn)
            :degree(h / hơn))))

#::snt có lẽ em cho là tôi cũng như em .
(c1 / cho
    :modality(c / có_lẽ)
    :pivot(e / em)
    :topic(r / resemble-01
        :domain(t / tôi)
        :compared-to(e1 / em)
        :degree(wz1 / equal)))

#::snt nhưng không thể nhìn thấy hạt .
(c / contrast-01
    :ARG2(p / possible-01
        :topic(n1 / nhìn
            :compound(t / thấy)
            :goal(h / hạt))
        :polarity -))

#::snt - tôi biết có một tinh cầu , trên đó có một ông mặt mũi đỏ gay .
(b / biết
    :pivot(t / tôi)
    :goal(t1 / tinh_cầu
        :goal-of(c1 / có
            :pivot(ô / ông
                :mod(m2 / mặt_mũi
                    :mod(đ1 / đỏ_gay))
                :quant 1)
            :location t
                :prep(t2 / trên))
        :quant 1))
		
#::snt cái hành tinh thật là bé .
(b / bé
    :domain(h / hành_tinh
        :classifier(c / cái))
    :degree(t / thật
        :compound(l / là)))

#::snt đức vua có thể trị vì trên cái gì ở đây ?
(p / possible-01
    :agent(đ / đức
        :compound(v / vua))
    :theme(t / trị_vì
        :theme(a / amr-unknown
            :prep(t1 / trên)
            :classifier(c1 / cái)))
    :location(đ1 / đây
        :prep(ở / ở)))

#::snt - tâu bệ hạ , em nói , cúi xin bệ hạ cho tôi được hỏi ...
(n / nói
    :agent(e / em)
    :topic(a / and
        :op1(t / tâu
            :goal(b / bệ_hạ))
        :op2(c / cúi
            :compound(x / xin)
            :topic(c1 / cho
                :beneficiary(h / hỏi
                    :modality(đ / được)
                    :beneficiary-arg0 e)
                :agent b)
            :goal b
            :agent e)))

#::snt - ta ra lệnh cho ngươi hỏi , vua vội vàng nói .
(n1 / nói
    :topic(r / ra_lệnh
        :topic(h / hỏi
            :patient(n / ngươi))
        :agent v)
    :agent(v / vua)
    :manner(v1 / vội_vàng))

#::snt - tâu bệ hạ , ngài trị vì trên cái gì ?
(t / tâu
    :patient(b / bệ_hạ)
    :topic(t1 / trị_vì
        :agent b
        :theme(a / amr-unknown
            :prep(t2 / trên)
            :classifier(c / cái))))

#::snt - trên tất cả .
(t1 / tất_cả
    :prep(t / trên))

#::snt Nhà vua đáp , hết sức giản dị .
(đ / đáp
    :agent(n / nhà_vua)
    :manner(g / giản_dị
        :degree(h / hết_sức)))

#::snt - trên tất cả ?
(t1 / tất_cả
    :prep(t / trên)
    :mode interrogative)

#::snt đức vua phác một cử chỉ dứt khoát chỉ cái hành tinh của mình , các hành tinh khác và các ngôi sao .
(p / phác
    :agent(đ / đức
        :compound(v / vua))
    :theme(c / cử_chỉ
        :quant 1)
    :manner(d / dứt_khoát)
    :agent-of(c1 / chỉ
        :goal(a / and
            :op1(h / hành_tinh
                :classifier(c2 / cái)
                :poss đ)
            :op2(h1 / hành_tinh
                :mod(k / khác))
            :op3(s / sao
                :classifier(n / ngôi)))))

#::snt - trên tất cả những cái đó ? ông hoàng nhỏ hỏi .
(h / hỏi
    :topic(c / cái
        :prep(t / trên)
        :mod(t1 / tất_cả)
        :mod(đ / đó)
        :mode interrogative)
    :agent(ô / ông_hoàng
        :mod(n1 / nhỏ)))

#::snt - trên tất cả những cái đó ...
(c / cái
    :prep(t / trên)
    :mod(t1 / tất_cả)
    :mod(đ / đó))

#::snt đức vua trả lời .
(t / trả_lời
    :agent(đ / đức
        :compound(v / vua)))

#::snt bởi vì đó không phải là một vị vua chuyên chế mà còn là một vị vua toàn năng .
(c1 / cause-01
    :topic(a / and
        :op1(p / phải
            :domain(đ / đó)
            :result(v / vị
                :compound(v1 / vua)
                :mod(c / chuyên_chế)
                :quant 1)
            :polarity -)
        :op2(v2 / vị
            :compound(v3 / vua)
            :mod(t / toàn_năng)
            :domain đ
            :quant 1)))

#::snt - các ngôi sao có tuân lệnh bệ hạ không ?
(t / tuân
    :agent(s / sao
        :classifier(n / ngôi))
    :theme(l / lệnh
        :source(b / bệ_hạ))
    :mode interrogative)

#::snt - chắc chắn rồi , vua trả lời em .
(t / trả_lời
    :topic(c / chắc_chắn
        :modality(r / rồi))
    :agent(v / vua)
    :goal(e / em))

#::snt chúng lập tức tuân lệnh .
(t / tuân
    :agent(c / chúng)
    :manner(l / lập_tức)
    :theme(l1 / lệnh))

#::snt trẫm không dung thứ sự trái lời .
(d / dung_thứ
    :agent(t / trẫm)
    :topic(s / sự
        :compound(t1 / trái
            :mod(l / lời)))
    :polarity -)

#::snt một quyền lực như thế làm cho ông hoàng nhỏ thích mê .
(l / làm
    :agent(q / quyền_lực
        :compared-to(t / thế)
        :degree(e / equal))
    :result(t1 / thích
        :pivot(ô / ông_hoàng
            :mod(n1 / nhỏ))
        :compound(m1 / mê)))

#::snt nếu em mà có quyền lực ấy , em có thể mặc sức mà ngắm , không phải là bốn mươi bốn , mà đến bảy mươi hai , đến một trăm , đến cả hai trăm cảnh mặt trời lặn trong một ngày , mà chẳng phải xê dịch ghế ngồi .
(p1 / possible-01
    :condition(c / có
        :pivot(e / em)
        :theme(q / quyền_lực
            :mod(ấ / ấy)))
    :agent(n1 / ngắm
        :degree(m1 / mặc_sức)
        :theme(c3 / cảnh
            :mod(l1 / lặn
                :agent-of(m5 / mặt_trời)
                :frequency(h4 / have-frequency-91
                    :range(t2 / temporal-quantity
                        :quant 1
                            :unit(n2 / ngày))
                    :quant(a / and
                        :op2 72
                        :op4 200
                        :op3 100
                        :op1 40
                            :polarity -))))
        :manner(x / xê_dịch
            :modality(p11 / phải)
            :patient(g / ghế
                :mod(n3 / ngồi))
            :agent e
            :polarity -)
        :agent-of e))

#::snt rồi em cảm thấy hơi buồn vì chợt nghĩ đến cái tinh cầu nhỏ bị bỏ rơi của mình , em đánh bạo xin nhà vua một ân huệ :
(đ1 / đánh_bạo
    :cause(c / cảm
        :pivot(e / em)
        :compound(t / thấy)
        :manner(b / buồn
            :degree(h / hơi))
        :cause(n / nghĩ
            :degree(c1 / chợt)
            :goal(t1 / tinh_cầu
                :classifier(c2 / cái)
                :mod(n1 / nhỏ)
                :mod(b2 / bỏ_rơi
                    :modality(b1 / bị)
                    :agent e)
                :poss(m / mình))
            :pivot e))
    :pivot(e1 / em)
    :purpose(x / xin
        :goal(n2 / nhà_vua)
        :theme(â / ân_huệ
            :quant 1)
        :agent e))

#::snt - tôi muốn được xem cảnh mặt trời lặn ...
(m / muốn
    :pivot(t / tôi)
    :topic(x / xem
        :modality(đ / được)
        :theme(c / cảnh
            :mod(l / lặn
                :agent(m1 / mặt_trời)))
        :agent t))

#::snt xin bệ hạ hãy làm tôi vui lòng , hãy ra lệnh cho mặt trời lặn ...
(a / and
    :op1(x / xin
        :goal(b / bệ_hạ)
        :topic(l / làm
            :beneficiary(v / vui_lòng
                :beneficiary-arg0(t / tôi))
            :agent b
            :mode imperative)
        :op2(r / ra_lệnh
            :theme(l1 / lặn
                :agent(m / mặt_trời))
            :agent b
            :mode imperative)
        :agent t))

#::snt - nếu ta ra lệnh cho một võ tướng bay từ đoá hoa này sang đoá hoa kia như một con bướm , hay lệnh cho ông ta viết một vở bi kịch , hay biến thành chim biển , và nếu vị võ tướng ấy không tuân lệnh , thì lỗi ấy ở ông ta hay ở ta ?
(a / and
    :op2(l2 / lỗi
        :condition(t4 / tuân
            :agent(v5 / võ_tướng
                :classifier(v4 / vị)
                :mod(ấ / ấy))
            :polarity -
            :theme(l1 / lệnh))
        :mod(ấ1 / ấy)
        :cause(o1 / or
            :op1(ô1 / ông
                :mod(t6 / ta))
            :op2(t7 / ta)))
    :op1(o / or
        :condition(r / ra_lệnh
            :agent(t / ta)
            :topic(b / bay
                :agent(v / võ_tướng
                    :quant 1)
                :initialLocation(h / hoa
                    :classifier(đ / đoá)
                    :mod(n1 / này))
                :finalLocation(h1 / hoa
                    :classifier(đ1 / đoá)
                    :mod(k / kia))
                :compared-to(b1 / bướm
                    :quant 1
                        :classifier(c1 / con))))
        :op1(l / lệnh
            :goal(ô / ông
                :mod(t2 / ta))
            :topic(v1 / viết
                :theme(v2 / vở
                    :quant 1
                        :mod(b2 / bi_kịch))
                :agent ô))
        :op2(b3 / biến
            :compound(t3 / thành)
            :result-arg1(c3 / chim
                :compound(b4 / biển)))))

#::snt - ở bệ hạ , ông hoàng nhỏ cả quyết .
(c / cả_quyết
    :topic(ở / ở
        :source(b / bệ_hạ))
    :agent(ô / ông_hoàng
        :mod(n / nhỏ)))

#::snt - đúng .
(đ / đúng)

#::snt phải cho mỗi người làm việc người đó có thể làm , đức vua nhắc lại .
(n2 / nhắc
    :agent(đ1 / đức
        :compound(v / vua))
    :compound(l2 / lại)
    :topic(o / obligate-01
        :topic(c / cho
            :topic(l / làm_việc
                :agent(n / người
                    :mod(m / mỗi))
                :theme(l1 / làm
                    :modality(c1 / có_thể)
                    :agent n)))))

#::snt quyền lực trước hết phải dựa trên lẽ phải .
(o / obligate-01
    :topic(d / dựa
        :theme(q / quyền_lực)
        :degree(t / trước_hết)
        :source(l / lẽ_phải
            :prep(t1 / trên))))

#::snt nếu nhà ngươi ra lệnh cho thần dân của mình nhảy xuống bể , họ sẽ làm cách mạng .
(l / làm
    :condition(r / ra_lệnh
        :agent(n1 / nhà_ngươi)
        :topic(n2 / nhảy
            :agent(t / thần_dân
                :poss(m / mình))
            :direction(x / xuống)
            :location(b / bể)))
    :tense(s / sẽ)
    :result(c2 / cách_mạng)
    :agent t)

#::snt ta có quyền buộc tuân lệnh ta vì mọi lệnh ta đều hợp lý .
(c / có
    :pivot(t / ta)
    :theme(q / quyền)
    :manner(b / buộc
        :topic(t1 / tuân
            :theme(l / lệnh
                :poss t)))
    :cause(h / hợp_lý
        :domain(l1 / lệnh
            :mod(m / mọi)
            :poss t)
        :degree(đ / đều)))

#::snt - thế cảnh mặt trời lặn của tôi thì sao ?
(c / cảnh
    :mod(l / lặn
        :pivot(m / mặt_trời))
    :poss(t1 / tôi)
    :manner(a / amr-unknown))

#::snt ông hoàng nhỏ vốn đã đặt ra câu hỏi thì không bao giờ quên , hỏi lại .
(đ1 / đặt
    :agent(ô / ông_hoàng
        :mod(n / nhỏ))
    :tense(đ / đã)
    :compound(r / ra)
    :theme(c / câu
        :compound(h / hỏi))
    :result(a / and
        :op1(q / quên
            :time(b / bao_giờ)
            :polarity -
            :pivot ô)
        :op2(h1 / hỏi
            :compound(l / lại))))

#::snt - cảnh mặt trời lặn của ngươi , ngươi sẽ có .
(c2 / có
    :theme(c / cảnh
        :mod(l / lặn
            :pivot(m / mặt_trời))
        :poss(n / ngươi))
    :tense(s / sẽ)
    :pivot n)

#::snt ta muốn thế .
(m / muốn
    :pivot(t / ta)
    :theme(t1 / thế))

#::snt nhưng trong khoa học cai trị của ta , ta phải chờ đến lúc đủ mọi điều kiện .
(c3 / contrast-01
    :ARG2(o / obligate-01
        :setting(k / khoa_học
            :mod(c / cai_trị)
            :poss(t1 / ta))
        :manner(c2 / chờ
            :time(l / lúc
                :mod(đ1 / đủ
                    :theme(đ2 / điều_kiện
                        :mod(m / mọi))))
            :pivot t1)
        :pivot t1))

#::snt - đến bao giờ thì đủ ? ông hoàng nhỏ hỏi .
(h / hỏi
    :result(đ1 / đủ)
    :agent(ô / ông_hoàng
        :mod(n / nhỏ))
    :time(a / amr-unknown))

#::snt - ừm ! ừm ! nhà vua nói , thoạt tiên tra một cuốn lịch to tướng , ừm ! ừm !
(m1 / multi-sentence
    :snt1(ừ / ừm
        :mode expressive)
    :snt2(ừ1 / ừm
        :mode expressive)
    :snt3(a / and
        :op1(n1 / nói
            :agent(n / nhà_vua)
            :topic(t1 / tra
                :time(t / thoạt_tiên)
                :theme(l / lịch
                    :mod(t2 / to_tướng)
                    :quant 1
                        :classifier(c / cuốn))))
        :op2(ừ2 / ừm
            :mode expressive)
        :op3(ừ3 / ừm
            :mode expressive)))

#::snt vào lúc ...
(v / vào
    :time(l / lúc))

#::snt khoảng ... khoảng ...
(k / khoảng)

#::snt vào lúc chiều nay , khoảng bảy giờ bốn mươi phút ! nhà ngươi sẽ thấy được lệnh ta được tuân thủ .
(t / thấy
    :time(k / khoảng
        :op1(d / date-entity
            :dayperiod(c / chiều
                :mod(n / nay))
            :time 19h40))
    :pivot(n1 / nhà_ngươi)
    :tense(s / sẽ)
    :result(l1 / lệnh
        :poss(t1 / ta)
        :agent-of(t2 / tuân_thủ
            :modality(đ1 / được))))

#::snt ông hoàng nhỏ ngáp .
(n1 / ngáp
    :agent(ô / ông_hoàng
        :mod(n / nhỏ)))

#::snt em tiếc cho cảnh mặt trời lặn hụt của em .
(t / tiếc
    :pivot(e / em)
    :theme(c1 / cảnh
        :mod(l / lặn
            :agent(m / mặt_trời)
            :manner(h / hụt))
        :poss(e1 / em)))

#::snt và rồi em cũng hơi thấy chán :
(a / and
    :op2(t / thấy
        :pivot(e / em)
        :modality(c / cũng)
        :degree(h / hơi)
        :theme(c1 / chán)))

#::snt - tôi chẳng có gì làm ở đây nữa , em nói với nhà vua , tôi sẽ đi .
(n1 / nói
    :agent(e / em)
    :goal(n2 / nhà_vua)
    :topic(đ1 / đi
        :reason(c1 / có
            :theme(g / gì)
            :purpose(l / làm
                :location(đ / đây)
                :agent e)
            :polarity -
            :pivot e)
        :tense(s / sẽ)
        :agent e))

#::snt - ngươi chớ đi , nhà vua vừa mới kiêu hãnh xiết bao vì có được một thần dân , đáp lời ông hoàng nhỏ .
(đ2 / đáp
    :topic(đ / đi
        :agent ô
        :mode imperative
        :polarity -)
    :agent(n1 / nhà_vua)
    :setting(k / kiêu_hãnh
        :degree(x / xiết_bao)
        :reason(c1 / có
            :result(t / thần_dân
                :quant 1)
            :pivot n1)
        :time(b / before)
        :domain n1)
    :compound(l / lời)
    :goal(ô / ông_hoàng
        :mod(n2 / nhỏ)))

#::snt chớ đi , ta phong ngươi làm thượng thư !
(a / and
    :op1(đ / đi
        :mode imperative
        :agent n
        :polarity -)
    :op2(p / phong
        :agent(t / ta)
        :patient(l / làm
            :patient-of(n / ngươi)
            :theme(t1 / thượng_thư))))

#::snt - thượng thư bộ gì ?
(t / thượng_thư
    :source(b / bộ
        :mod(a / amr-unknown)))

#::snt - bộ ... bộ tư pháp !
(b1 / bộ
    :mod(t / tư_pháp))

#::snt - nhưng có ai để xét xử đâu ạ !
(c2 / contrast-01
    :ARG2(c / có
        :patient(a / ai)
        :purpose(x / xét_xử)
        :polarity -))

#::snt - chưa thể biết , vua nói với ông hoàng nhỏ .
(n / nói
    :topic(b / biết
        :polarity -)
    :agent(v / vua)
    :goal(ô / ông_hoàng
        :mod(n1 / nhỏ)))

#::snt ta chưa đi tuần tra khắp vương quốc của ta .
(đ / đi
    :agent(t / ta)
    :compound(t1 / tuần_tra)
    :location(v / vương_quốc
        :degree(k / khắp)
        :poss t)
    :polarity -)

#::snt ta già quá rồi , không có đủ chỗ để một cỗ xa giá cho ta , mà đi bộ thì ta nhọc lắm .
(a / and
    :op1(g / già
        :pivot(t / ta)
        :degree(q / quá))
    :op2(c / có
        :degree(đ / đủ)
        :location(c1 / chỗ)
        :purpose(đ1 / để)
        :theme(x / xa_giá
            :quant 1
                :classifier(c2 / cỗ))
        :beneficiary t
        :polarity -)
    :op3(n / nhọc
        :condition(đ2 / đi
            :compound(b / bộ)
            :agent t)
        :degree(l / lắm)
        :pivot t))

#::snt - ồ ! nhưng tôi đã nhìn thấy , ông hoàng nhỏ nghiêng mình nhìn sang phía bên kia của hành tinh .
(m1 / multi-sentence
    :snt1(ồ / ồ
        :mode expressive)
    :snt2(c2 / contrast-01
        :ARG2(a / and
            :op1(n1 / nhìn
                :tense(đ / đã)
                :compound(t1 / thấy)
                :agent ô)
            :op2(n3 / nghiêng_mình
                :agent(ô / ông_hoàng
                    :mod(n2 / nhỏ))
                :purpose(n4 / nhìn
                    :compound(s / sang)
                    :location(p / phía
                        :mod(b / bên
                            :mod(k / kia))
                        :part-of(h / hành_tinh))
                    :agent ô)))))

#::snt bên kia cũng chẳng có ai đâu ạ ...
(c2 / có
    :location(b / bên
        :mod(k / kia))
    :modality(c / cũng)
    :theme(a / ai)
    :polarity -)

#::snt - thế thì ngươi hãy tự xét xử lấy mình đi , đức vua đáp lại em .
(đ2 / đáp
    :topic(x / xét_xử
        :manner(t1 / tự)
        :agent e
        :patient e
        :mode imperative)
    :agent(đ1 / đức
        :mod(v / vua))
    :compound(l1 / lại)
    :goal(e / em))

#::snt đó là điều khó nhất .
(đ1 / điều
    :domain(đ / đó)
    :mod(k / khó
        :degree(n / nhất)))

#::snt xét mình khó hơn xét người nhiều .
(x / xét
    :patient(m / mình)
    :manner(k / khó
        :degree(h / hơn
            :degree(n1 / nhiều)))
    :compared-to(x1 / xét
        :patient(n / người)))

#::snt - tôi , ông hoàng nhỏ đáp , tôi có thể tự xét mình bất cứ ở đâu .
(đ / đáp
    :agent(ô / ông_hoàng
        :mod(n / nhỏ))
    :topic(p / possible-01
        :agent(x / xét
            :manner(t2 / tự)
            :location(đ1 / đâu
                :mod(b / bất_cứ)
                :prep(ở / ở))
            :patient ô
            :agent-of ô)))

#::snt tôi không nhất thiết phải ở đây .
(o / obligate-01
    :pivot(t / tôi)
    :degree(n / nhất_thiết)
    :manner(ở / ở
        :location(đ / đây)
        :pivot t)
    :polarity -)

#::snt - hừm ! hừm ! vua nói , hình như trên hành tinh của ta , đâu đó có một con chuột .
(m1 / multi-sentence
    :snt1(h / hừm
        :mode expressive)
    :snt2(h1 / hừm
        :mode expressive)
    :snt3(n / nói
        :agent(v / vua)
        :topic(c1 / có
            :modality(h2 / hình_như)
            :location(đ / đâu_đó
                :location(h3 / hành_tinh
                    :prep(t / trên)
                    :poss v))
            :theme(c3 / chuột
                :quant 1
                    :classifier(c2 / con)))))

#::snt đêm ta nghe nó kêu .
(n / nghe
    :pivot(t / ta)
    :theme(k / kêu
        :agent(n1 / nó))
    :time(d / date-entity
        :dayperiod(đ / đêm)))

#::snt nhà ngươi có thể xét xử con chuột già ấy .
(p / possible-01
    :agent(x / xét_xử
        :agent-of(n / nhà_ngươi)
        :patient(c2 / chuột
            :classifier(c1 / con)
            :mod(g / già)
            :mod(ấ / ấy))))

#::snt thỉnh thoảng ngươi ghép nó vào tội tử hình .
(g / ghép
    :agent(n / ngươi)
    :patient(n1 / nó)
    :setting(t1 / tội
        :prep(v / vào)
        :mod(t2 / tử_hình))
    :frequency(h / have-frequency-91
        :unit(t / thỉnh_thoảng)))

#::snt như thế , cuộc đời của nó sẽ tuỳ ở luật pháp của nhà ngươi .
(t1 / tuỳ
    :pivot(c / cuộc_đời
        :poss(n1 / nó))
    :tense(s / sẽ)
    :setting(l / luật_pháp
        :prep(ở / ở)
        :poss(n2 / nhà_ngươi)))

#::snt nhưng mỗi lần buộc tội xong , thì ngươi lại nên ân xá để dành dụm chuột .
(c1 / contrast-01
    :ARG2(r / recommend-01
        :result(b / buộc_tội
            :frequency(h / have-frequency-91
                :quant(m / mỗi)
                :unit(l / lần))
            :agent n)
        :agent(â / ân_xá
            :agent-of(n1 / ngươi)
            :purpose(d / dành_dụm
                :theme(c / chuột)))))

#::snt chỉ có mỗi một con ấy thôi .
(c1 / có
    :degree(c / chỉ)
    :theme(c2 / con
        :mod(ấ / ấy)
        :quant 1)
    :modality(t / thôi))

#::snt - tôi , ông hoàng nhỏ đáp , tôi không thích buộc tội tử hình , và tôi chắc rằng tôi sắp sửa ra đi .
(đ / đáp
    :agent(ô / ông_hoàng
        :mod(n / nhỏ))
    :topic(a / and
        :op1(t2 / thích
            :pivot(t1 / tôi)
            :topic(b / buộc_tội
                :result(t3 / tử_hình)
                :agent t1)
            :polarity -)
        :op2(l / likely-01
            :topic(r1 / ra
                :compound(đ1 / đi)
                :agent t1
                :time(a2 / after))
            :pivot t1)))

#::snt - không , vua nói .
(n / nói
    :topic(k / không)
    :agent(v / vua))

#::snt nhưng ông hoàng nhỏ , đã chuẩn bị xong , không muốn làm phiền lòng vị vua già :
(c1 / contrast-01
    :ARG2(m / muốn
        :agent-of(ô / ông_hoàng
            :mod(n1 / nhỏ)
            :agent-of(c / chuẩn_bị
                :tense(đ / đã)
                :manner(x / xong)))
        :topic(l / làm
            :patient(p / phiền_lòng
                :patient-of(v / vị
                    :compound(v1 / vua)
                    :mod(g / già)))
            :agent ô)
        :polarity -))

#::snt - nếu bệ hạ muốn được tuân theo một cách đúng đắn , thì phải cho tôi một cái lệnh hợp lý .
(o / obligate-01
    :topic(c / cho
        :condition(m / muốn
            :pivot(b / bệ_hạ)
            :modality(đ / được)
            :patient(t / tuân
                :compound(t1 / theo)
                :manner(m1 / một_cách
                    :mod(đ1 / đúng_đắn))
                :patient-of t3))
        :patient(t3 / tôi)
        :theme(l / lệnh
            :mod(h / hợp_lý)
            :quant 1
                :classifier(c1 / cái)))
    :agent b)

#::snt ví dụ như phải ra lệnh cho tôi ra đi tức khắc .
(e / example
    :topic(o / obligate-01
        :topic(r / ra_lệnh
            :patient(t / tôi)
            :purpose(r1 / ra
                :compound(đ / đi)
                :manner(t1 / tức_khắc)
                :patient t))))

#::snt hình như mọi điều kiện đều thuận lợi ...
(t / thuận_lợi
    :modality(h / hình_như)
    :domain(đ / điều_kiện
        :mod(m / mọi))
    :degree(đ1 / đều))

#::snt nhà vua chẳng biết trả lời sao .
(b / biết
    :pivot(n / nhà_vua)
    :topic(t / trả_lời
        :manner(s / sao))
    :polarity -)

#::snt thoạt đầu ông hoàng nhỏ hơi do dự , rồi thở dài , em bước đi .
(a / and
    :op1(d / do_dự
        :time(t / thoạt
            :compound(đ / đầu))
        :pivot(ô / ông_hoàng
            :mod(n / nhỏ))
        :degree(h / hơi))
    :op2(a2 / and
        :time(r / rồi)
        :op1(t1 / thở_dài
            :agent ô)
        :op2(b / bước
            :compound(đ1 / đi)
            :agent ô)))

#::snt - ta phong cho ngươi làm đại sứ , nhà vua vội vàng kêu lên .
(k / kêu
    :topic(p / phong
        :beneficiary(l / làm
            :beneficiary-arg0(n / ngươi)
            :theme(đ / đại_sứ))
        :agent n1)
    :agent(n1 / nhà_vua)
    :manner(v / vội_vàng)
    :compound(l1 / lên))

#::snt trông ngài có vẻ uy nghi lẫm liệt .
(t / trông
    :mod(c / có
        :pivot(n / ngài)
        :theme(v / vẻ
            :mod(u / uy_nghi)
            :mod(l / lẫm_liệt))))

#::snt những người lớn thật rất kỳ quặc , cậu hoàng tử thầm nhủ với chính mình trong suốt cuộc hành trình .
(n2 / nhủ
    :topic(k / kỳ_quặc
        :domain(n1 / người_lớn)
        :degree(r / rất))
    :agent(h / hoàng_tử
        :classifier(c / cậu))
    :manner(t1 / thầm)
    :setting(c2 / cuộc
        :prep(t2 / trong)
        :time(s / suốt)
        :mod(h1 / hành_trình))
    :goal h
        :modality(c1 / chính))

#::snt trên tinh cầu thứ hai cư trú một gã khoác lác .
(c / cư_trú
    :location(t1 / tinh_cầu
        :prep(t / trên)
        :ord(o / ordinal-entity
            :value 2))
    :domain(g / gã
        :mod(k / khoác_lác)
        :quant 1))

#::snt - á ! à ! kìa một gã ngưỡng mộ đến thăm ta ! gã khoác lác kêu lên khi nhìn thấy ông hoàng nhỏ từ xa .
(m / multi-sentence
    :snt1(á / á
        :mode expressive)
    :snt2(à / à
        :mode expressive)
    :snt3(k2 / kêu
        :topic(đ / đến
            :mode expressive
            :agent(n / ngưỡng_mộ
                :domain-of ô
                :goal g1)
            :purpose(t / thăm
                :agent ô
                :goal gg1))
        :agent(g1 / gã
            :mod(k1 / khoác_lác))
        :compound(l / lên)
        :time(n1 / nhìn
            :compound(t2 / thấy)
            :goal(ô / ông_hoàng
                :mod(n2 / nhỏ))
            :direction(t3 / từ
                :op1(x / xa))
            :agent g1)))

#::snt bởi vì , đối với kẻ khoác lác , những người còn lại đều là kẻ ngưỡng mộ mình .
(c1 / cause-01
    :topic(n2 / ngưỡng_mộ
        :source(k / kẻ
            :mod(k1 / khoác_lác))
        :domain(c / còn
            :pivot-of(n1 / người)
            :compound(l / lại))
        :degree(đ1 / đều)
        :pivot-of(k2 / kẻ)
        :goal k))

#::snt - chào anh , ông hoàng nhỏ nói .
(n1 / nói
    :topic(c / chào
        :goal(a / anh))
    :agent(ô / ông_hoàng
        :mod(n / nhỏ)))

#::snt anh có cái mũ ngộ quá .
(c / có
    :pivot(a / anh)
    :theme(n / ngộ
        :domain-of(m / mũ
            :classifier(c1 / cái))
        :degree(q / quá)))

#::snt - cái đó là để mà chào đấy , gã khoác lác trả lời .
(t / trả_lời
    :topic(c / cái
        :mod(đ / đó)
        :purpose(c1 / chào)
        :modality(đ2 / đấy))
    :agent(g / gã
        :mod(k / khoác_lác)))

#::snt để chào khi người ta hoan hô tôi .
(h2 / have-purpose-91
    :topic(c / chào
        :time(h / hoan_hô
            :agent(n / người_ta)
            :goal(t / tôi))
        :agent t))

#::snt không may là chẳng ai qua đây bao giờ cả .
(q / qua
    :modality(m / may
        :polarity -)
    :agent(a / ai
        :polarity -)
    :path(đ / đây)
    :time(b / bao_giờ)
    :degree(c1 / cả))

#::snt - thế à ? ông hoàng nhỏ nói , không hiểu gì cả .
(n1 / nói
    :agent(ô / ông_hoàng
        :mod(n / nhỏ))
    :topic(a / and
        :op1(t / thế
            :mode interrogative)
        :op2(h / hiểu
            :topic(g / gì
                :mod(c / cả))
            :pivot ô)))

#::snt - hãy vỗ tay này vào tay kia đi , gã khoác lác liền khuyên .
(k2 / khuyên
    :manner(v / vỗ_tay
        :mod(n / này)
        :direction(v1 / vào
            :patient(t / tay
                :mod(k / kia)))
        :modality(đ / đi)
        :mode imperative)
    :agent(g / gã
        :mod(k1 / khoác_lác)))

#::snt ông hoàng nhỏ vỗ tay này vào tay kia .
(v / vỗ_tay
    :agent(ô / ông_hoàng
        :mod(n / nhỏ))
    :mod(n1 / này)
    :direction(v1 / vào
        :patient(t / tay
            :mod(k / kia))))

#::snt gã khoác lác ngả mũ chào một cách khiêm tốn .
(n / ngả
    :agent(g / gã
        :mod(k / khoác_lác))
    :theme(m / mũ)
    :purpose(c / chào
        :manner(k1 / khiêm_tốn)
        :agent g))

#::snt - coi bộ vui hơn đi thăm nhà vua , ông hoàng nhỏ nói thầm .
(n2 / nói_thầm
    :topic(v / vui
        :modality(c / coi
            :compound(b / bộ))
        :degree(h / hơn)
        :compared-to(đ / đi
            :compound(t / thăm)
            :goal(n / nhà_vua)))
    :agent(ô / ông_hoàng
        :mod(n1 / nhỏ)))

#::snt và em tiếp tục vỗ tay này vào tay kia .
(a / and
    :op2(t / tiếp_tục
        :agent(e / em)
        :topic(v1 / vỗ_tay
            :mod(n / này)
            :direction(v2 / vào
                :patient(t1 / tay
                    :mod(k / kia))))))

#::snt gã khoác lác lại ngả mũ chào .
(n / ngả
    :agent(g / gã
        :mod(k / khoác_lác))
    :manner(l / lại)
    :patient(m / mũ)
    :purpose(c / chào
        :agent g))

#::snt sau năm phút tập dượt , ông hoàng nhỏ thấy chán vì sự đơn điệu của cái trò chơi ấy :
(t1 / thấy
    :time(s / sau
        :op1(t2 / tập_dượt
            :duration(t4 / temporal-quantity
                :quant 5
                    :unit(p / phút))))
    :pivot(ô / ông_hoàng
        :mod(n1 / nhỏ))
    :manner(c / chán)
    :cause(s1 / sự
        :compound(đ / đơn_điệu)
        :source(t3 / trò_chơi
            :classifier(c2 / cái)
            :mod(ấ / ấy))))

#::snt - thế , muốn cho chiếc mũ nó rơi tuột xuống , em hỏi , thì phải làm sao ?
(h / hỏi
    :topic(m / muốn
        :patient(r / rơi
            :patient-of(m1 / mũ
                :classifier(c1 / chiếc))
            :compound(t1 / tuột)
            :direction(x / xuống))
        :topic(o / obligate-01
            :topic-of(l / làm
                :manner(a / amr-unknown))))
    :agent(e / em))

#::snt nhưng gã khoác lác không nghe thấy .
(c / contrast-01
    :ARG2(n1 / nghe
        :agent(g / gã
            :mod(k / khoác_lác))
        :compound(t / thấy)
        :polarity -))

#::snt những người khoác lác chẳng nghe thấy gì ngoài những câu ca ngợi .
(n2 / nghe
    :agent(n1 / người
        :mod(k / khoác_lác))
    :compound(t / thấy)
    :theme(g / gì
        :concession(n3 / ngoài
            :mod(c1 / câu
                :mod(c2 / ca_ngợi))))
    :polarity -)

#::snt - chú em khâm phục ta nhiều thật chứ ?
(k / khâm_phục
    :pivot(c / chú
        :compound(e / em))
    :goal(t / ta)
    :degree(n / nhiều)
    :modality(t1 / thật)
    :mode interrogative)

#::snt gã hỏi ông hoàng nhỏ .
(h / hỏi
    :agent(g / gã)
    :goal(ô / ông_hoàng
        :mod(n / nhỏ)))

#::snt - khâm phục nghĩa là thế nào ?
(n / nghĩa_là
    :domain(k / khâm_phục)
    :manner(a / amr-unknown))

#::snt - khâm phục nghĩa là thừa nhận ta là người đẹp nhất , ăn mặc sang nhất , giàu có nhất và thông minh nhất trên hành tinh .
(n / nghĩa_là
    :theme(k / khâm_phục)
    :topic(t / thừa_nhận
        :topic(n1 / người
            :domain(t1 / ta)
            :location(h / hành_tinh
                :prep(t3 / trên))
            :mod(a / and
                :op1(đ / đẹp
                    :degree(n2 / nhất))
                :op2(ă / ăn_mặc
                    :manner(s / sang
                        :degree(n3 / nhất)))
                :op3(g / giàu_có
                    :degree(n4 / nhất))
                :op4(t2 / thông_minh
                    :degree(n5 / nhất))))))

#::snt - nhưng anh chỉ có một mình trên hành tinh của anh chứ mấy ?
(c2 / contrast-01
    :ARG2(c1 / có
        :pivot(a / anh)
        :quant(m / một_mình)
        :location(h / hành_tinh
            :prep(t / trên)
            :poss(a1 / anh))
        :modality(c3 / chứ
            :quant(m1 / mấy))))

#::snt - hãy chiều ta đi mà .
(c / chiều
    :beneficiary(t / ta)
    :modality(đ / đi
        :compound(m / mà))
    :mode imperative)

#::snt dẫu sao cứ hãy cứ khâm phục ta !
(k / khâm_phục
    :modality(c1 / cứ)
    :goal(t / ta)
    :mode imperative)

#::snt - tôi khâm phục anh , ông hoàng nhỏ nói , hơi nhún vai , nhưng sao điều đó lại làm anh quan tâm đến thế nhỉ ?
(n1 / nói
    :agent(ô / ông_hoàng
        :mod(n / nhỏ))
    :manner(n2 / nhún_vai
        :degree(h / hơi)
        :agent ô)
    :topic(c / contrast-01
        :ARG1(k / khâm_phục
            :goal(a / anh)
            :pivot ô)
        :ARG2(l1 / làm
            :theme(đ / điều
                :mod(đ1 / đó))
            :result(q / quan_tâm
                :degree(t1 / thế)
                :modality(n4 / nhỉ)
                :pivot a)
            :manner(a2 / amr-unknown))))

#::snt và ông hoàng nhỏ ra đi .
(a / and
    :op1(r / ra
        :agent(ô / ông_hoàng
            :mod(n / nhỏ))
        :compound(đ / đi)))

#::snt những người lớn chắc chắn là kỳ quặc rồi , em chỉ nói đơn giản có thế trong suốt cuộc hành trình .
(n2 / nói
    :topic(k / kỳ_quặc
        :domain(n1 / người_lớn)
        :modality(c / chắc_chắn))
    :agent(e / em)
    :manner(đ / đơn_giản
        :compared-to(t / thế)
        :degree(e2 / equal))
    :setting(c3 / cuộc
        :prep(t1 / trong)
        :time(s / suốt)
        :mod(h / hành_trình)))

#::snt tinh cầu tiếp theo có một bợm nhậu cư trú .
(c / có
    :location(t / tinh_cầu
        :mod(t1 / tiếp_theo))
    :pivot(c1 / cư_trú
        :pivot-of(b / bợm
            :compound(n / nhậu)
            :quant 1)))

#::snt cuộc viếng thăm lần này hết sức ngắn nhưng lại làm cho ông hoàng nhỏ miên man buồn :
(c2 / contrast-01
    :ARG1(n1 / ngắn
        :domain(c / cuộc
            :compound(v / viếng_thăm)
            :mod(l / lần
                :mod(n / này)))
        :degree(h / hết_sức))
    :ARG2(l2 / làm
        :modality(l1 / lại)
        :pivot(b / buồn
            :pivot-of(ô / ông_hoàng
                :mod(n3 / nhỏ))
            :manner(m / miên_man))
        :agent n1))

#::snt - anh làm gì đấy ? ông hoàng nhỏ nói với tay bợm nhậu đang ngồi im lặng trước một bộ sưu tập chai không và một bộ sưu tập chai đầy .
(n1 / nói
    :topic(l / làm
        :modality(đ / đấy)
        :agent t
        :theme(a3 / amr-unknown))
    :agent(ô / ông
        :compound(h / hoàng)
        :mod(n / nhỏ))
    :goal(t / tay
        :mod(b / bợm
            :compound(n2 / nhậu)
            :pivot-of(n3 / ngồi
                :tense(đ1 / đang)
                :manner(i / im_lặng)
                :location(t1 / trước
                    :op1(a2 / and
                        :op1(b1 / bộ
                            :compound(s / sưu_tập)
                            :mod(c / chai
                                :mod(k / không))
                            :quant 1)
                        :op2(b2 / bộ
                            :compound(s1 / sưu_tập)
                            :mod(c1 / chai
                                :mod(đ2 / đầy))
                            :quant 1)))))))

#::snt - ta nhậu , bợm nhậu trả lời , vẻ thiểu não .
(t1 / trả_lời
    :topic(n / nhậu
        :agent b)
    :agent(b / bợm
        :compound(n1 / nhậu))
    :manner(v / vẻ
        :mod(t2 / thiểu_não)))

#::snt - tại sao anh nhậu ? ông hoàng nhỏ hỏi anh ta .
(h / hỏi
    :topic(n / nhậu
        :agent a1
        :reason(a2 / amr-unknown))
    :agent(ô / ông_hoàng
        :mod(n1 / nhỏ))
    :goal(a1 / anh
        :mod(t1 / ta)))

#::snt - để quên , bợm nhậu trả lời .
(t / trả_lời
    :purpose(q / quên)
    :agent(b / bợm
        :compound(n / nhậu)))

#::snt - để quên cái gì ? ông hoàng nhỏ hỏi trong lúc bắt đầu cảm thấy ái ngại cho hắn .
(h / hỏi
    :purpose(q / quên
        :theme(a / amr-unknown)
        :pivot h1)
    :agent(ô / ông_hoàng
        :mod(n / nhỏ))
    :setting(b / bắt_đầu
        :topic(c1 / cảm
            :time(l / lúc)
            :compound(t1 / thấy)
            :manner(á / ái_ngại
                :goal(h1 / hắn)))
        :pivot ô))

#::snt - để quên nỗi xấu hổ của ta , bợm nhậu cúi đầu thú nhận .
(t1 / thú_nhận
    :purpose(q / quên
        :theme(n / nỗi
            :compound(x / xấu_hổ)
            :source(t / ta))
        :pivot b)
    :agent(b / bợm
        :compound(n1 / nhậu))
    :manner(c1 / cúi
        :theme(đ1 / đầu
            :part-of b)))

#::snt - xấu hổ vì cái gì ? ông hoàng nhỏ hỏi , đã muốn giúp đỡ hắn .
(h / hỏi
    :topic(x / xấu_hổ
        :pivot h1
        :reason(a / amr-unknown))
    :agent(ô / ông_hoàng
        :mod(n / nhỏ))
    :setting(m / muốn
        :tense(đ / đã)
        :topic(g1 / giúp_đỡ
            :beneficiary(h1 / hắn)
            :agent ô)
        :pivot ô))

#::snt - xấu hổ vì cái nhậu ! bợm nhậu kết thúc và nhất quyết lặng im
(m / multi-sentence
    :snt1(x / xấu_hổ
        :cause(c / cái
            :compound(n / nhậu))
        :pivot b)
    :snt2(a / and
        :op1(k / kết_thúc
            :agent(b / bợm
                :compound(n1 / nhậu)))
        :op2(l / lặng_im
            :modality(n2 / nhất_quyết)
            :domain b)))

#::snt và ông hoàng thì ra đi , sửng sốt .
(a2 / and
    :op1(r / ra
        :agent(ô / ông_hoàng)
        :compound(đ / đi))
    :op2(s / sửng_sốt
        :pivot ô))

#::snt những người lớn nhất định là rất kỳ quặc , cậu tự nói thầm trong suốt cuộc hành trình .
(n3 / nói_thầm
    :topic(k / kỳ_quặc
        :domain(n1 / người_lớn)
        :modality(n2 / nhất_định)
        :degree(r / rất))
    :agent(c / cậu)
    :manner(t / tự)
    :setting(c1 / cuộc
        :prep(t1 / trong)
        :time(s / suốt)
        :mod(h / hành_trình)))

#::snt tinh cầu thứ tư là của một nhà doanh nghiệp .
(t / tinh_cầu
    :poss(n / nhà
        :compound(d / doanh_nghiệp)
        :quant 1)
    :ord(o / ordinal-entity
        :value 4))

#::snt ông này bận rộn đến nỗi không ngẩng được đầu lên khi ông hoàng nhỏ tới .
(b / bận_rộn
    :pivot(ô / ông
        :mod(n / này))
    :degree(đ / đến_nỗi
        :manner(n1 / ngẩng
            :patient(đ2 / đầu
                :part-of ô)
            :direction(l / lên)
            :time(t / tới
                :agent(ô1 / ông_hoàng
                    :mod(n2 / nhỏ)))
            :agent ô
            :polarity -)))

#::snt - chào ông , em nói với hắn .
(n / nói
    :topic(c / chào
        :goal(ô / ông)
        :agent e)
    :agent(e / em)
    :goal(h / hắn))

#::snt điếu thuốc lá của ông tắt rồi .
(t1 / tắt
    :theme(đ / điếu
        :mod(t / thuốc_lá)
        :poss(ô / ông))
    :modality(r / rồi))

#::snt - ba với hai là năm .
(e / equal-01
    :ARG1(s / sum-of
        :op1 3
        :op2 2)
    :ARG2 5)

#::snt năm với bảy là mười hai
(e / equal-01
    :ARG2 12
    :ARG1(s / sum-of
        :op1 5
        :op2 7))

#::snt Mười hai với ba là mười lăm .
(e / equal-01
    :ARG1(s / sum-of
        :op2 3
        :op1 12)
    :ARG2 15)

#::snt chào chú .
(c / chào
    :goal(c1 / chú))

#::snt Mười lăm với bảy là hăm hai .
(e / equal-01
    :ARG2 22
    :ARG1(s / sum-of
        :op2 7
        :op1 15))

#::snt hăm hai với sáu là hăm tám .
(e / equal-01
    :ARG2 28
    :ARG1(s / sum-of
        :op2 6
        :op1 22))

#::snt chẳng có thời giờ mà châm lại .
(c1 / có
    :polarity -
    :theme(t / thời_giờ
        :purpose(c2 / châm
            :manner(l / lại))))

#::snt xong ! tất cả là năm trăm linh một triệu sáu trăm năm mươi hai nghìn bảy trăm ba mươi mốt ..
(m / multi-sentence
    :snt1(x / xong
        :mode expressive)
    :snt2(wz2 / 501622731
        :domain(t / tất_cả)))

#::snt - năm trăm triệu cái gì vậy ?
(a / amr-unknown
    :quant 500000000)

#::snt - hử ? thế chú vẫn còn đấy à ? .
(m / multi-sentence
    :snt1(h / hử
        :mode interrogative)
    :snt2(c1 / còn
        :pivot(c / chú)
        :manner(v / vẫn)
        :modality(đ / đấy)
        :modality(à / à)
        :mode interrogative))

#::snt năm trăm linh một triệu ...
(wz1 / 501000000)

#::snt ta cũng chẳng biết là cái gì nữa .
(b / biết
    :pivot(t / ta)
    :modality(c / cũng)
    :polarity -
    :theme(g / gì
        :classifier(c2 / cái))
    :modality(n / nữa))

#::snt ta có quá nhiều công việc ! ta rất đứng đắn , ta , ta không thích những trò nhảm nhí ! hai với năm là bảy ...
(m / multi-sentence
    :snt1(c / có
        :pivot(t / ta)
        :theme(c1 / công_việc
            :quant(n / nhiều
                :mod(q / quá))))
    :snt2(đ / đứng_đắn
        :degree(r / rất)
        :domain t)
    :snt3(t4 / thích
        :theme(t5 / trò
            :mod(n2 / nhảm_nhí))
        :polarity -
        :domain t)
    :snt4(e / equal-01
        :ARG1(s / sum-of
            :op1 2
            :op2 5)
        :ARG2 7))

#::snt - năm trăm linh một triệu cái gì ?
(a / amr-unknown
    :quant 501000000)

#::snt ông hoàng nhỏ lặp lại , suốt đời em , không bao giờ bỏ ra một câu hỏi một khi đã nêu nó ra .
(l / lặp
    :agent(ô / ông_hoàng
        :mod(n / nhỏ))
    :compound(l1 / lại)
    :topic(b1 / bỏ
        :time(đ / đời
            :degree(s / suốt)
            :source(e / em))
        :time(b / bao_giờ)
        :compound(r / ra)
        :theme(c / câu
            :compound(h / hỏi)
            :quant 1)
        :condition(n1 / nêu
            :modality(m1 / một_khi)
            :manner(r1 / ra)
            :agent ô
            :theme c)
        :agent ô
        :polarity -))

#::snt nhà doanh nghiệp ngẩng đầu lên :
(n1 / ngẩng
    :agent(n / nhà
        :compound(d / doanh_nghiệp))
    :patient(đ / đầu
        :part-of n)
    :direction(l / lên))

#::snt - năm mươi bốn năm ta ở trên cái hành tinh này , ta chỉ bị quấy rầy có ba lần .
(q / quấy_rầy
    :time(ở / ở
        :pivot(t / ta)
        :location(h / hành_tinh
            :prep(t1 / trên)
            :classifier(c / cái)
            :mod(n2 / này))
        :degree(c1 / chỉ)
        :duration(t2 / temporal-quantity
            :unit(n1 / năm)
            :quant 54))
    :modality(b / bị)
    :frequency(h2 / have-frequency-91
        :unit(l / lần)
        :quant 3)
    :patient t)

#::snt lần đầu cách đây hai mươi hai năm do một con bọ hung chỉ có trời biết từ đâu rơi xuống .
(l / lần
    :time(c / cách
        :location(đ1 / đây)
        :quant(t3 / temporal-quantity
            :unit(n / năm)
            :quant 22))
    :cause(r / rơi
        :patient(b / bọ_hung
            :quant 1
                :classifier(c1 / con))
        :initialLocation(đ2 / đâu
            :topic(b1 / biết
                :degree(c2 / chỉ)
                :pivot(t / trời))
            :prep(t1 / từ))
        :direction(x / xuống))
    :ord(o / ordinal-entity
        :value 1))

#::snt nó gây nên một tiếng động khủng khiếp và làm cho ta cộng sai bốn chỗ trong một bài tính cộng .
(a / and
    :op1(g / gây
        :agent(n / nó)
        :compound(n1 / nên)
        :result(t / tiếng_động
            :mod(k / khủng_khiếp)
            :quant 1))
    :op2(l / làm
        :topic(c1 / cộng
            :agent(t1 / ta)
            :degree(s / sai)
            :theme(c2 / chỗ
                :quant 4)
            :source(b1 / bài_tính
                :prep(t2 / trong)
                :mod(c3 / cộng)
                :quant 1))
        :agent n))

#::snt lần thứ hai , là cách đây mười một năm , do một cơn cảm cúm .
(l / lần
    :time(c / cách
        :location(đ / đây)
        :quant(t2 / temporal-quantity
            :unit(n / năm)
            :quant 11))
    :cause(c1 / cơn
        :mod(c2 / cảm
            :compound(c3 / cúm))
        :quant 1)
    :ord(o / ordinal-entity
        :value 2))

#::snt ta không có tập thể dục .
(t1 / tập
    :agent(t / ta)
    :modality(c / có)
    :theme(t2 / thể_dục)
    :polarity -)

#::snt ta không có thì giờ chơi bời .
(c / có
    :pivot(t / ta)
    :theme(t1 / thì_giờ
        :purpose(c1 / chơi_bời
            :agent t))
    :polarity -)

#::snt ta , ta là một người đứng đắn !
(n / người
    :domain(t / ta)
    :mod(đ / đứng_đắn))

#::snt lần thứ ba ... là lần này !
(l2 / lần
    :mod(n / này)
    :domain(o / ordinal-entity
        :value 3))

#::snt khi ta đang tính tới năm trăm linh một triệu ...
(t1 / tính
    :agent(t / ta)
    :tense(đ / đang)
    :quant 501000000)

#::snt nhà doanh nghiệp ngẩng đầu lên :
(n1 / ngẩng
    :agent(n / nhà
        :compound(d / doanh_nghiệp))
    :patient(đ / đầu
        :part-of n)
    :direction(l / lên))

#::snt - triệu cái gì ?
(a / amr-unknown
    :quant(t / triệu))

#::snt nhà doanh nghiệp biết không hy vọng gì được yên thân :
(b / biết
    :pivot(n / nhà
        :compound(d / doanh_nghiệp))
    :topic(h / hy_vọng
        :modality(g / gì)
        :result(đ / được
            :manner(y / yên_thân)
            :domain n)
        :polarity -))

#::snt - triệu những vật nho nhỏ đôi khi nhìn thấy trên trời ấy .
(v / vật
    :quant(t / triệu)
    :mod(n1 / nho_nhỏ)
    :mod(n2 / nhìn
        :frequency(đ / đôi_khi)
        :compound(t1 / thấy)
        :location(t3 / trời
            :prep(t2 / trên)))
    :modality(ấ / ấy))

#::snt - những con ruồi ?
(r / ruồi
    :classifier(c / con)
    :mode interrogative)

#::snt - không phải , những vật nhỏ lấp lánh ấy .
(a / and
    :op1(p / phải
        :polarity -)
    :op2(v / vật
        :mod(n1 / nhỏ)
        :mod(l / lấp_lánh)
        :modality(ấ / ấy)))

#::snt - những con ong ?
(o / ong
    :classifier(c / con)
    :mode interrogative)

#::snt - không mà ...
(k / không
    :modality(m / mà))

#::snt những vật nho nhỏ vàng óng vẫn làm cho bọn người vô tích sự chúng nó mơ màng ấy .
(l / làm
    :cause(v / vật
        :mod(n1 / nho_nhỏ)
        :mod(v1 / vàng
            :compound(ó / óng)))
    :manner(v2 / vẫn)
    :patient(m / mơ_màng
        :pivot(n2 / người
            :classifier(b / bọn)
            :mod(v3 / vô_tích_sự)
            :mod(ấ / ấy))))

#::snt ta , ta là một người đứng đắn !
(n / người
    :domain(t / ta)
    :mod(đ / đứng_đắn))

#::snt ta không có thì giờ đâu mà mơ màng .
(c / có
    :pivot(t / ta)
    :theme(t1 / thì_giờ)
    :modality(đ / đâu)
    :purpose(m1 / mơ_màng
        :pivot t)
    :polarity -)

#::snt - đúng rồi đấy .
(đ / đúng
    :modality(r / rồi)
    :modality(đ1 / đấy))

#::snt những ngôi sao .
(s / sao
    :classifier(n1 / ngôi))

#::snt - thế ông làm gì với năm trăm triệu ngôi sao ?
(l / làm
    :modality(t / thế)
    :agent(ô / ông)
    :goal(s / sao
        :classifier(n1 / ngôi)
        :quant 500000000)
    :theme(a / amr-unknown))

#::snt - năm trăm linh một triệu sáu trăm năm mươi hai nghìn bảy trăm ba mươi mốt .
(h / have-quant-91
    :quant 501622731)

#::snt Ta , ta là một người đứng đắn , ta rất chính xác !
(a / and
    :op1(n / người
        :domain(t1 / ta)
        :mod(đ / đứng_đắn))
    :op2(c / chính_xác
        :degree(r / rất)
        :domain t1))

#::snt - thế ông làm gì với những ngôi sao ?
(l / làm
    :modality(t / thế)
    :agent(ô / ông)
    :goal(s / sao
        :classifier(n1 / ngôi))
    :theme(a / amr-unknown))

#::snt - ta làm gì à ?
(l / làm
    :agent(t / ta)
    :modality(à / à)
    :theme(a2 / amr-unknown))

#::snt - vâng .
(v / vâng)

#::snt - chẳng làm gì sất .
(l / làm
    :theme(g / gì)
    :modality(s / sất)
    :polarity -)

#::snt ta chiếm hữu chúng .
(c / chiếm_hữu
    :agent(t / ta)
    :theme(c1 / chúng))

#::snt - ông chiếm hữu những ngôi sao ?
(c / chiếm_hữu
    :agent(ô / ông)
    :patient(s / sao
        :classifier(n1 / ngôi))
    :mode interrogative)

#::snt - phải .
(p / phải)

#::snt - nhưng tôi biết một ông vua cũng ...
(c1 / contrast-01
    :ARG2(b / biết
        :pivot(t / tôi)
        :goal(ô / ông
            :compound(v / vua)
            :quant 1)
        :modality(c / cũng)))

#::snt - các ông vua không chiếm hữu gì cả .
(c1 / chiếm_hữu
    :agent(ô / ông
        :compound(v / vua))
    :theme(g / gì)
    :degree(c2 / cả)
    :polarity -)

#::snt họ chỉ " trị vì " ở trên , thế thôi .
(t / trị_vì
    :agent(h / họ)
    :degree(c / chỉ)
    :location(t1 / trên
        :prep(ở / ở))
    :modality(t2 / thế
        :compound(t3 / thôi)))

#::snt rất khác nhau .
(k / khác
    :degree(r / rất)
    :compared-to(n / nhau))

#::snt - thế việc sở hữu những ngôi sao giúp gì cho ông ?
(g / giúp
    :modality(t / thế)
    :pivot(v / việc
        :mod(s / sở_hữu
            :theme(s1 / sao
                :classifier(n1 / ngôi))
            :pivot ô))
    :beneficiary(ô / ông)
    :theme(a / amr-unknown))

#::snt - nó giúp ta giàu .
(g / giúp
    :pivot(n / nó)
    :result(g1 / giàu
        :pivot(t / ta)))

#::snt - giàu giúp ông được gì ?
(g1 / giúp
    :pivot(g / giàu
        :pivot-of ô)
    :beneficiary(đ / được
        :beneficiary-arg0(ô / ông)
        :theme(a / amr-unknown)))

#::snt - mua những ngôi sao khác , nếu có người tìm thấy nữa .
(m / mua
    :theme(s / sao
        :classifier(n1 / ngôi)
        :mod(k / khác))
    :condition(c / có
        :result(t / tìm
            :agent(n3 / người)
            :compound(t1 / thấy)
            :theme s)
        :time(n4 / nữa)))

#::snt cái ông này , ông hoàng nhỏ nghĩ thầm , ông ta lý sự hơi giống tay bợm nhậu của mình .
(n2 / nghĩ
    :agent(ô1 / ông_hoàng
        :mod(n1 / nhỏ))
    :compound(t / thầm)
    :topic(l / lý_sự
        :agent(ô / ông
            :mod(n / này))
        :manner(r / resemble-01
            :degree(h / hơi)
            :compared-to(t2 / tay
                :compound(b / bợm
                    :compound(n3 / nhậu))
                :poss ô1))))

#::snt tuy thế em vẫn hỏi thêm :
(c / contrast-01
    :ARG2(h / hỏi
        :agent(e / em)
        :manner(v / vẫn)
        :compound(t1 / thêm)))

#::snt - làm thế nào người ta sở hữu những ngôi sao ?
(l / làm
    :purpose(s / sở_hữu
        :pivot(n / người_ta)
        :theme(s1 / sao
            :classifier(n2 / ngôi)))
    :manner(a / amr-unknown)
    :agent n)

#::snt - chúng của ai nào ?
(c / chúng
    :modality(n / nào)
    :poss(a / amr-unknown))

#::snt nhà doanh nghiệp vặn lại , sửng cồ .
(v / vặn
    :agent(n / nhà
        :compound(d / doanh_nghiệp))
    :compound(l / lại)
    :manner(s / sửng_cồ))

#::snt - tôi không biết .
(b / biết
    :pivot(t / tôi)
    :polarity -)

#::snt không của ai cả .
(c / của
    :poss(a / ai)
    :modality(c1 / cả)
    :polarity -)

#::snt - thế thì chúng là của ta , bởi ta nghĩ tới trước nhất .
(c / chúng
    :modality(t / thế_thì)
    :poss(t1 / ta)
    :reason(n / nghĩ
        :time(t4 / trước_nhất)
        :pivot t1
        :theme c))

#::snt - chỉ thế là đủ ư ?
(đ / đủ
    :domain(t / thế
        :degree(c / chỉ))
    :mode interrogative)

#::snt - chắc rồi .
(c / chắc
    :modality(r / rồi))

#::snt khi chú tìm thấy một viên kim cương không là của ai cả , thì nó là của chú .
(k1 / kim_cương
    :condition(t / tìm
        :agent(c / chú)
        :compound(t1 / thấy)
        :theme k1
            :poss(a / ai
                :degree(c2 / cả)
                :polarity -)
            :quant 1
                :classifier(v / viên))
    :poss c)

#::snt khi chú tìm thấy một hòn đảo không phải là của ai cả , thì hòn đảo ấy là của chú .
(đ / đảo
    :condition(t / tìm
        :agent(c / chú)
        :compound(t1 / thấy)
        :theme t
            :poss(a / ai
                :degree(c2 / cả)
                :polarity -)
            :quant 1
                :classifier(h / hòn))
    :mod(ấ / ấy)
    :poss c)

#::snt và ta có được những ngôi sao kia , vì chưa hề có ai trước ta nghĩ đến việc chiếm hữu chúng .
(a1 / and
    :op2(c / có
        :pivot(t / ta)
        :theme(s / sao
            :classifier(n1 / ngôi)
            :mod(k / kia))
        :cause(n2 / nghĩ
            :pivot(c2 / có
                :pivot-of(a / ai)
                :time(t1 / trước
                    :mod t)
                :polarity -)
            :topic(v2 / việc
                :mod(c3 / chiếm_hữu
                    :theme s)))))

#::snt - điều này thì đúng , ông hoàng nhỏ nói .
(n2 / nói
    :topic(đ1 / đúng
        :domain(đ / điều
            :mod(n / này)))
    :agent(ô / ông_hoàng
        :mod(n1 / nhỏ)))

#::snt ông dùng chúng để làm gì ?
(d / dùng
    :agent(ô / ông)
    :theme(c / chúng)
    :purpose(l / làm
        :topic(a / amr-unknown)
        :agent ô))

#::snt - ta quản lý chúng .
(q / quản_lý
    :agent(t / ta)
    :theme(c / chúng))

#::snt ta đếm đi rồi ta đếm lại chúng , nhà doanh nghiệp nói .
(n1 / nói
    :agent(n / nhà
        :compound(d / doanh_nghiệp))
    :topic(a / and
        :op1(đ / đếm
            :agent(t / ta)
            :manner(đ1 / đi)
            :theme c)
        :op2(đ2 / đếm
            :manner(l / lại)
            :theme(c / chúng)
            :agent t)))

#::snt khó đấy .
(k / khó
    :modality(đ / đấy))

#::snt nhưng ta là một người đứng đắn !
(c / contrast-01
    :ARG2(n1 / người
        :domain(t / ta)
        :mod(đ / đứng_đắn)
        :quant 1))

#::snt ông hoàng nhỏ vẫn chưa bằng lòng :
(b / bằng_lòng
    :pivot(ô / ông_hoàng
        :mod(n / nhỏ))
    :manner(v / vẫn)
    :polarity -)

#::snt - tôi đấy ư , nếu tôi có một chiếc khăn quàng , tôi quàng nó vào cổ và mang nó đi .
(a / and
    :op1(t / tôi
        :modality(đ / đấy
            :compound(ư / ư)))
    :op2(a2 / and
        :condition(c / có
            :theme(k / khăn_quàng
                :quant 1
                    :classifier(c1 / chiếc))
            :pivot t)
        :op1(q / quàng
            :goal(c2 / cổ
                :prep(v / vào)
                :part-of t)
            :agent t
            :patient k)
        :op2(m1 / mang
            :agent t
            :patient k)))

#::snt tôi , nếu tôi có một bông hoa , tôi có thể hái bông hoa đó và mang nó đi .
(p / possible-01
    :condition(c / có
        :pivot(t1 / tôi)
        :theme(h / hoa
            :quant 1
                :classifier(b / bông)))
    :theme(a111 / and
        :op1(h1 / hái
            :patient(h2 / hoa
                :classifier(b1 / bông)
                :mod(đ / đó))
            :agent t1)
        :op2(m1 / mang
            :patient h2
            :agent t1)))

#::snt còn ông đâu có thể hái các ngôi sao !
(c4 / contrast-01
    :ARG2(p / possible-01
        :manner(h / hái
            :agent(ô / ông)
            :patient(s / sao
                :classifier(n / ngôi)))
        :polarity -))

#::snt - không , nhưng ta có thể bỏ chúng vào ngân hàng .
(c3 / contrast-01
    :ARG1(k / không)
    :ARG2(p / possible-01
        :theme(b / bỏ
            :agent(t / ta)
            :patient(c1 / chúng)
            :location(n1 / ngân_hàng
                :prep(v / vào)))))

#::snt - nghĩa là thế nào ?
(n / nghĩa_là
    :manner(a / amr-unknown))

#::snt - nghĩa là ta viết trên một tờ giấy con số ngôi sao của ta .
(n / nghĩa_là
    :manner(v / viết
        :agent(t / ta)
        :location(g / giấy
            :prep(t1 / trên)
            :quant 1
                :classifier(t2 / tờ))
        :theme(c / con_số
            :mod(s / sao
                :classifier(n1 / ngôi)
                :poss t))))

#::snt sau đó ta khoá chặt mẩu giấy ấy trong một cái tủ .
(k / khoá
    :agent(t / ta)
    :manner(c / chặt)
    :theme(m / mẩu
        :mod(g / giấy)
        :mod(ấ / ấy))
    :location(t2 / tủ
        :prep(t1 / trong)
        :quant 1
            :classifier(c1 / cái)))

#::snt - chỉ thế thôi à ?
(t / thế
    :degree(c / chỉ)
    :modality(t1 / thôi)
    :modality(à / à)
    :mode interrogative)

#::snt - thế đủ rồi .
(đ / đủ
    :domain(t / thế)
    :modality(r / rồi))

#::snt buồn cười thật , ông hoàng nhỏ nghĩ thầm .
(n1 / nghĩ
    :topic(b / buồn_cười
        :modality(t / thật))
    :pivot(ô / ông_hoàng
        :mod(n / nhỏ))
    :compound(t1 / thầm))

#::snt có vẻ nên thơ đấy .
(c / có
    :theme(v / vẻ
        :mod(n / nên_thơ))
    :modality(đ / đấy))

#::snt nhưng mà không đứng đắn lắm đâu .
(c / contrast-01
    :ARG2(đ / đứng_đắn
        :degree(l / lắm)
        :modality(đ1 / đâu)
        :polarity -))

#::snt ông hoàng nhỏ nghĩ về việc đứng đắn rất khác với những người lớn .
(n1 / nghĩ
    :pivot(ô / ông_hoàng
        :mod(n / nhỏ))
    :topic(v1 / việc
        :mod(đ / đứng_đắn))
    :manner(k / khác
        :degree(r / rất)
        :compared-to(n3 / người_lớn)))

#::snt - tôi , em lại nói , tôi có một bông hoa mà hôm nào cũng tưới .
(n / nói
    :agent(e / em)
    :manner(l / lại)
    :topic(c / có
        :theme(h / hoa
            :theme-of(t2 / tưới
                :modality(c1 / cũng)
                :agent e
                :patient h
                :frequency(r / rate-entity-91
                    :time(t3 / temporal-quantity
                        :unit(h1 / hôm
                            :mod(n1 / nào)))))
            :quant 1
                :classifier(b / bông))
        :pivot e))

#::snt tôi có ba quả núi lửa mà tuần nào tôi cũng nạo vét .
(c / có
    :pivot(t / tôi)
    :theme(n / núi_lửa
        :theme-of(n2 / nạo_vét
            :modality(c1 / cũng)
            :frequency(r / rate-entity-91
                :time(t4 / temporal-quantity
                    :unit(t1 / tuần
                        :mod(n1 / nào))))
            :agent t)
        :quant 3
            :classifier(q / quả)))

#::snt tôi cũng nạo vét cả quả núi lửa đã tắt .
(n / nạo_vét
    :agent(t / tôi)
    :modality(c / cũng)
    :patient(n1 / núi_lửa
        :classifier(q / quả)
        :patient-of(t1 / tắt
            :tense(đ / đã))))

#::snt biết đâu đấy !
(b / biết_đâu_đấy
    :mode interrogative)

#::snt cái đó giúp ích cho các quả núi lửa , và giúp ích cho bông hoa của tôi , nên tôi có chúng .
(c5 / có
    :pivot(t1 / tôi)
    :reason(a / and
        :op1(g / giúp_ích
            :theme(c / cái
                :mod(đ / đó))
            :beneficiary(n / núi_lửa
                :classifier(q / quả))
        :op2(g1 / giúp_ích
            :beneficiary(h / hoa
                :classifier(b / bông)
                :poss(t / tôi))
            :theme c)))
    :theme c)

#::snt nhưng ông chẳng giúp ích gì cho những ngôi sao cả ...
(c3 / contrast-01
    :ARG2(g / giúp_ích
        :agent(ô / ông)
        :polarity -
        :theme(g1 / gì)
        :goal(s / sao
            :classifier(n2 / ngôi))))

#::snt nhà doanh nghiệp mở miệng nhưng chẳng biết trả lời ra sao cả , và ông hoàng nhỏ ra đi .
(a / and
    :op2(r1 / ra
        :agent(ô / ông_hoàng
            :mod(n2 / nhỏ))
        :compound(đ / đi))
    :op1(c3 / contrast-01
        :ARG1(m / mở_miệng
            :agent(n / nhà
                :compound(d / doanh_nghiệp)))
        :ARG2(b / biết
            :topic(t / trả_lời
                :manner(r / ra
                    :compound(s / sao)
                    :degree(c1 / cả)))
            :polarity -
            :agent n)))

#::snt những người lớn nhất định là những người hoàn toàn kỳ quái .
(n4 / người
    :domain(n1 / người_lớn)
    :degree(n2 / nhất_định)
    :mod(k / kỳ_quái
        :degree(h / hoàn_toàn)))

#::snt em nghĩ thầm một cách đơn giản như vậy trong suốt cuộc hành trình .
(n / nghĩ
    :pivot(e / em)
    :compound(t / thầm)
    :manner(m / một_cách
        :mod(đ / đơn_giản
            :compared-to(v / vậy)
            :degree(e2 / e2)))
    :setting(c / cuộc
        :prep(t1 / trong)
        :time(s / suốt)
        :mod(h / hành_trình)))

#::snt hành tinh thứ năm rất lạ .
(l / lạ
    :domain(h / hành_tinh
        :ord(o / ordinal-entity
            :value 5))
    :degree(r / rất))

#::snt nó là cái bé nhất trong số các hành tinh .
(c / cái
    :domain(n / nó)
    :mod(b / bé
        :degree(n1 / nhất)
        :compared-to(s / số
            :prep(t / trong)
            :mod(h / hành_tinh))))

#::snt ở đấy chỉ đủ chỗ cho một cây cột đèn và một người thắp đèn .
(đ1 / đủ
    :mod(c / chỉ)
    :location(c1 / chỗ)
    :goal(a / and
        :theme(c4 / cột
            :compound(đ2 / đèn)
            :quant 1
                :classifier(c3 / cây))
        :op2(p / person
            :agent-of(t / thắp
                :patient(đ3 / đèn))
            :quant 1)))

#::snt ông hoàng nhỏ nghĩ mãi nhưng không thể nào hiểu được tại sao , đâu đó trong bầu trời , trên một hành tinh không nhà cửa , không dân cư , lại có một cây cột đèn và một người thắp đèn để làm chi .
(c7 / contrast-01
    :ARG1(n1 / nghĩ
        :pivot(ô / ông_hoàng
            :mod(n / nhỏ))
        :manner(m / mãi))
    :ARG2(p / possible-01
        :pivot(h / hiểu
            :manner(đ / được)
            :cause(a / amr-unknown
                :result(c / có
                    :manner(l / lại)
                    :purpose(l1 / làm_chi)
                    :theme(a2 / and
                        :op1(c2 / cột
                            :compound(đ2 / đèn)
                            :quant 1
                                :classifier(c1 / cây))
                        :op2(p2 / person
                            :agent-of(t3 / thắp
                                :patient(đ3 / đèn))
                            :quant 1))
                    :location(r / relative-position
                        :op1(b / bầu_trời
                            :prep(t1 / trong))
                        :op2(h1 / hành_tinh
                            :prep(t2 / trên)
                            :mod(a3 / and
                                :op1(n4 / nhà_cửa
                                    :polarity -)
                                :op2(d / dân_cư
                                    :polarity -))
                            :quant 1))))
            :pivot ô)
        :polarity -))

#::snt tuy vậy em tự bảo :
(c / contrast-01
    :ARG2(t1 / tự
        :pivot(e / em)
        :compound(b / bảo)))

#::snt - rất có thể người này là vô lý .
(p / possible-01
    :degree(r / rất)
    :theme(v / vô_lý
        :domain(n / người
            :mod(n1 / này))))

#::snt tuy thế ông ta còn ít vô lý hơn ông vua , ít vô lý hơn kẻ khoác lác , ít vô lý hơn nhà doanh nghiệp , ít vô lý hơn tay bợm nhậu .
(c2 / contrast-01
    :ARG2(v / vô_lý
        :domain(ô / ông
            :mod(t2 / ta))
        :modality(c / còn)
        :degree(í / ít)
        :degree(h / hơn)
        :compared-to(a / and
            :op1(ô1 / ông
                :compound(v1 / vua))
            :op2(k / kẻ
                :mod(k1 / khoác_lác))
            :op3(n / nhà
                :compound(d / doanh_nghiệp))
            :op4(t3 / tay
                :mod(b / bợm
                    :compound(n1 / nhậu))))))

#::snt ít ra công việc ông ta làm còn có một ý nghĩa .
(c2 / có
    :modality(í / ít_ra)
    :topic(c / công_việc
        :mod(l / làm
            :agent(ô / ông
                :mod(t / ta))))
    :modality(c1 / còn)
    :result(ý / ý_nghĩa))

#::snt khi ông ta thắp cây đèn của mình , như là ông ta sinh thêm một ngôi sao hay một bông hoa .
(r / resemble-01
    :time(t1 / thắp
        :agent(ô / ông
            :mod(t / ta))
        :patient(đ / đèn
            :classifier(c / cây)
            :poss ô))
    :compared-to(s / sinh
        :compound(t3 / thêm)
        :result(o / or
            :op1(s1 / sao
                :quant 1
                    :classifier(n1 / ngôi))
            :op2(h1 / hoa
                :quant 1
                    :classifier(b / bông)))
        :agent ô)
    :degree(e / equal))

#::snt khi ông ta tắt cây đèn , ông ta ru bông hoa hay ngôi sao ấy ngủ .
(r / ru
    :time(t1 / tắt
        :agent(ô / ông
            :mod(t / ta))
        :patient(đ / đèn
            :classifier(c / cây)))
    :purpose(n1 / ngủ
        :agent o)
    :theme(o / or
        :op1(h / hoa
            :classifier(b / bông))
        :op2(s / sao
            :classifier(n / ngôi)
            :mod(ấ / ấy)))
    :agent ô)

#::snt ấy là một công việc rất đẹp chứ .
(c / công_việc
    :domain(ấ / ấy)
    :mod(đ / đẹp
        :degree(r / rất)))

#::snt việc ấy mới thật sự là có ích là vì nó đẹp .
(c / có_ích
    :domain(v / việc
        :mod(ấ / ấy))
    :degree(t / thật_sự)
    :reason(đ / đẹp
        :domain v))

#::snt khi đến gần tinh cầu , em kính trọng chào người thắp đèn :
(c / chào
    :time(đ / đến
        :degree(g / gần)
        :location(t / tinh_cầu)
        :agent e)
    :agent(e / em)
    :manner(k1 / kính_trọng)
    :goal(n / người
        :agent-of(t1 / thắp
            :patient(đ1 / đèn))))

#::snt chúc một ngày tốt lành .
(c / chúc
    :topic(n / ngày
        :mod(t / tốt_lành)
        :quant 1))

#::snt tại sao ông tắt đèn đi ?
(t1 / tắt
    :agent(ô / ông)
    :patient(đ / đèn)
    :manner(đ1 / đi)
    :reason(a / amr-unknown))

#::snt - đó là điều lệnh , người thắp đèn trả lời .
(t1 / trả_lời
    :topic(đ1 / điều_lệnh
        :domain(đ / đó))
    :agent(n / người
        :agent-of(t / thắp
            :patient(đ2 / đèn))))

#::snt chúc một ngày tốt lành .
(c / chúc
    :topic(n / ngày
        :mod(t / tốt_lành)
        :quant 1))

#::snt - điều lệnh gì vậy ?
(đ / điều_lệnh
    :domain(a / amr-unknown))

#::snt - là tắt đèn đi .
(t / tắt
    :patient(đ / đèn)
    :mode imperative)

#::snt chúc một buổi tối tốt lành .
(c / chúc
    :topic(b / buổi
        :compound(t / tối)
        :mod(t1 / tốt_lành)
        :quant 1))

#::snt và ông ta lại thắp đèn lên .
(a / and
    :op2(t1 / thắp
        :agent(ô / ông
            :mod(t / ta))
        :manner(l / lại)
        :patient(đ / đèn)
        :manner(l1 / lên)))

#::snt - nhưng tại sao ông lại vừa thắp đèn lên ?
(c / contrast-01
    :ARG2(t1 / thắp
        :agent(ô / ông)
        :manner(l / lại)
        :patient(đ / đèn)
        :manner(l1 / lên)
        :cause(a / amr-unknown)))

#::snt - điều lệnh mà , người thắp đèn trả lời .
(t1 / trả_lời
    :topic(đ / điều_lệnh
        :modality(m / mà))
    :agent(n / người
        :agent-of(t / thắp
            :patient(đ1 / đèn))))

#::snt - tôi không hiểu , ông hoàng nhỏ nói .
(n1 / nói
    :topic(h / hiểu
        :polarity -
        :pivot ô)
    :agent(ô / ông_hoàng
        :mod(n / nhỏ)))

#::snt - chẳng có gì mà hiểu cả , người thắp đèn nói .
(n1 / nói
    :topic(c1 / có
        :theme(g / gì)
        :degree(m / mà)
        :purpose(h / hiểu)
        :polarity -)
    :agent(n / người
        :agent-of(t / thắp
            :patient(đ / đèn))))

#::snt điều lệnh là điều lệnh .
(đ1 / điều_lệnh
    :domain(đ / điều_lệnh))

#::snt chúc một ngày tốt lành .
(c / chúc
    :topic(n / ngày
        :mod(t / tốt_lành)
        :quant 1))

#::snt rồi ông ta tắt cây đèn .
(a / and
    :op2(t1 / tắt
        :agent(ô / ông
            :mod(t / ta))
        :patient(đ / đèn
            :classifier(c / cây))))

#::snt và ông ta thấm mồ hôi trên trán bằng một chiếc mùi soa ca rô đỏ .
(a / and
    :op2(t1 / thấm
        :agent(ô / ông
            :mod(t / ta))
        :theme(m / mồ_hôi
            :source(t3 / trán
                :prep(t2 / trên)
                :part-of ô))
        :instrument(m2 / mùi_soa
            :mod(c1 / ca_rô)
            :mod(đ / đỏ)
            :quant 1
                :classifier(c / chiếc))))

#::snt - nghề của ta làm đây thật kinh khủng .
(k / kinh_khủng
    :domain(n / nghề
        :mod(l / làm
            :agent(t / ta)
            :location(đ / đây)))
    :degree(t1 / thật))

#::snt xưa kia thì nó còn có lý .
(c1 / có_lý
    :time(x / xưa
        :compound(k / kia))
    :domain(n / nó)
    :modality(c / còn))

#::snt sáng ta tắt , tối ta thắp .
(a / and
    :op1(t1 / tắt
        :agent(t / ta)
        :time(d / date-entity
            :dayperiod(s / sáng)))
    :op2(t4 / thắp
        :time(d2 / date-entity
            :dayperiod(t2 / tối))
        :agent t))

#::snt phần còn lại ta nghỉ , phần đêm còn lại ta ngủ ...
(a / and
    :op1(c / còn
        :theme(p / phần)
        :compound(l / lại)
        :purpose(n / nghỉ
            :pivot(t / ta)))
    :op2(c1 / còn
        :theme(p1 / phần
            :part-of(đ / đêm))
        :compound(l1 / lại)
        :purpose(n1 / ngủ
            :pivot t)))

#::snt - nhưng sau đó điều lệnh thay đổi sao ?
(c / contrast-01
    :ARG2(t / thay_đổi
        :time(s / sau
            :mod(đ / đó))
        :theme(đ1 / điều_lệnh)
        :mode interrogative))

#::snt - điều lệnh không thay đổi , người thắp đèn nói .
(n1 / nói
    :topic(t / thay_đổi
        :theme(đ / điều_lệnh)
        :polarity -)
    :agent(n / người
        :agent-of(t1 / thắp
            :patient(đ1 / đèn))))